{"version":3,"sources":["webpack:///./node_modules/chart.js/src/plugins/plugin.legend.js","webpack:///./node_modules/chart.js/src/helpers/helpers.options.js","webpack:///./node_modules/chart.js/src/core/core.animation.js","webpack:///./node_modules/chart.js/src/core/core.defaults.js","webpack:///./node_modules/chart.js/src/controllers/controller.line.js","webpack:///./node_modules/chart.js/src/platforms/platform.basic.js","webpack:///./node_modules/vue-chartjs/es/mixins/index.js","webpack:///./node_modules/vue-chartjs/es/BaseCharts.js","webpack:///./node_modules/@coreui/coreui-plugin-chartjs-custom-tooltips/dist/umd/custom-tooltips.js","webpack:///./node_modules/chart.js/src/core/core.datasetController.js","webpack:///./node_modules/chart.js/src/core/core.element.js","webpack:///./node_modules/chart.js/src/charts/Chart.Bar.js","webpack:///./node_modules/chart.js/src/elements/element.point.js","webpack:///./node_modules/chart.js/src/charts/Chart.Bubble.js","webpack:///./node_modules/chart.js/src/scales/scale.time.js","webpack:///./node_modules/chart.js/src/helpers/index.js","webpack:///./node_modules/chart.js/src/helpers/helpers.canvas.js","webpack:///./node_modules/chart.js/src/charts/Chart.Scatter.js","webpack:///./node_modules/chart.js/src/charts/Chart.Doughnut.js","webpack:///./node_modules/chart.js/src/helpers/helpers.core.js","webpack:///./node_modules/color-name/index.js","webpack:///./node_modules/chart.js/src/elements/element.line.js","webpack:///./node_modules/chart.js/src/core/core.plugins.js","webpack:///./node_modules/chart.js/src/chart.js","webpack:///./node_modules/chart.js/src/controllers/controller.doughnut.js","webpack:///./node_modules/chart.js/src/elements/element.arc.js","webpack:///./node_modules/chart.js/src/scales/scale.linear.js","webpack:///./node_modules/chart.js/src/scales/scale.logarithmic.js","webpack:///./node_modules/chart.js/src/controllers/controller.bar.js","webpack:///./node_modules/chart.js/src/controllers/controller.radar.js","webpack:///./node_modules/chart.js/src/controllers/controller.bubble.js","webpack:///./node_modules/chart.js/src/core/core.scale.js","webpack:///./node_modules/chart.js/src/core/core.layouts.js","webpack:///./node_modules/chart.js/src/core/core.ticks.js","webpack:///./node_modules/chart.js/src/platforms/platform.js","webpack:///./node_modules/chart.js/src/charts/Chart.Radar.js","webpack:///./node_modules/chart.js/src/plugins/index.js","webpack:///./node_modules/chartjs-color-string/color-string.js","webpack:///./node_modules/chart.js/src/plugins/plugin.title.js","webpack:///./node_modules/chart.js/src/core/core.interaction.js","webpack:///./node_modules/chart.js/src/core/core.helpers.js","webpack:///./node_modules/chart.js/src/scales/scale.linearbase.js","webpack:///./node_modules/chart.js/src/charts/Chart.PolarArea.js","webpack:///./node_modules/chart.js/src/platforms/platform.dom.js","webpack:///./node_modules/chart.js/src/core/core.scaleService.js","webpack:///./node_modules/color-convert/conversions.js","webpack:///./node_modules/color-convert/index.js","webpack:///./node_modules/chart.js/src/helpers/helpers.easing.js","webpack:///./node_modules/chart.js/src/plugins/plugin.filler.js","webpack:///./node_modules/chart.js/src/elements/index.js","webpack:///./node_modules/chart.js/src/core/core.tooltip.js","webpack:///./node_modules/chart.js/src/core/core.js","webpack:///./node_modules/chart.js/src/elements/element.rectangle.js","webpack:///./node_modules/chart.js/src/controllers/controller.scatter.js","webpack:///./node_modules/chart.js/src/controllers/controller.polarArea.js","webpack:///./node_modules/chart.js/src/core/core.controller.js","webpack:///./node_modules/chartjs-color/index.js","webpack:///./node_modules/chart.js/src/charts/Chart.Line.js","webpack:///./node_modules/chart.js/src/scales/scale.category.js","webpack:///./node_modules/chart.js/src/scales/scale.radialLinear.js"],"names":["defaults","__webpack_require__","Element","helpers","layouts","noop","getBoxWidth","labelOpts","fontSize","usePointStyle","Math","SQRT2","boxWidth","_set","legend","display","position","fullWidth","reverse","weight","onClick","e","legendItem","index","datasetIndex","ci","this","chart","meta","getDatasetMeta","hidden","data","datasets","update","onHover","labels","padding","generateLabels","isArray","map","dataset","i","text","label","fillStyle","backgroundColor","isDatasetVisible","lineCap","borderCapStyle","lineDash","borderDash","lineDashOffset","borderDashOffset","lineJoin","borderJoinStyle","lineWidth","borderWidth","strokeStyle","borderColor","pointStyle","legendCallback","push","id","length","join","Legend","extend","initialize","config","legendHitBoxes","doughnutMode","beforeUpdate","maxWidth","maxHeight","margins","me","beforeSetDimensions","setDimensions","afterSetDimensions","beforeBuildLabels","buildLabels","afterBuildLabels","beforeFit","fit","afterFit","afterUpdate","minSize","isHorizontal","width","left","right","height","top","bottom","paddingLeft","paddingTop","paddingRight","paddingBottom","options","legendItems","callback","filter","item","opts","ctx","globalDefault","global","valueOrDefault","defaultFontSize","fontStyle","defaultFontStyle","fontFamily","defaultFontFamily","labelFont","fontString","hitboxes","font","lineWidths","totalHeight","textAlign","textBaseline","each","measureText","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","max","draw","lineDefault","elements","line","legendWidth","cursor","fontColor","defaultFontColor","drawLegendBox","x","y","isNaN","save","defaultColor","isLineWidthZero","setLineDash","radius","offSet","centerX","centerY","canvas","drawPoint","strokeRect","fillRect","restore","fillText","textWidth","halfFontSize","xLeft","yMiddle","beginPath","moveTo","lineTo","stroke","handleEvent","type","changed","lh","hitBox","call","native","createNewLegendAndAttach","legendOpts","configure","addBox","module","exports","_element","beforeInit","mergeIf","removeBox","afterEvent","toLineHeight","value","size","matches","match","toPadding","t","r","b","l","isObject","resolve","inputs","context","ilen","undefined","animation","duration","easing","onProgress","onComplete","Chart","Animation","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","animationService","frameDuration","animations","dropFrames","request","addAnimation","lazy","animating","requestAnimationFrame","cancelAnimation","findIndex","splice","requestAnimFrame","window","startDigest","startTime","Date","now","framesToDrop","floor","advance","endTime","count","min","Object","defineProperty","prototype","get","set","scope","values","merge","showLines","spanGaps","hover","mode","scales","xAxes","yAxes","lineEnabled","showLine","controllers","DatasetController","datasetElementType","Line","dataElementType","Point","reset","custom","getMeta","points","lineElementOptions","scale","getScaleForId","yAxisID","getDataset","tension","lineTension","_scale","_datasetIndex","_children","_model","fill","steppedLine","stepped","cubicInterpolationMode","pivot","updateElement","updateBezierControlPoints","getPointBackgroundColor","point","pointBackgroundColor","valueAtIndexOrDefault","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","yScale","xScale","xAxisID","pointOptions","pointRadius","hitRadius","pointHitRadius","getPixelForValue","NaN","getBasePixel","calculatePointY","_xScale","_yScale","_index","skip","ds","dsMeta","sumPos","sumNeg","stacked","stackedRightValue","Number","getRightValue","rightValue","model","controlPoints","area","chartArea","capControlPoint","pt","splineCurveMonotone","splineCurve","previousItem","nextItem","controlPointPreviousX","previous","controlPointPreviousY","controlPointNextX","next","controlPointNextY","capBezierPoints","clipArea","unclipArea","setHoverStyle","hoverRadius","pointHoverRadius","hoverBackgroundColor","pointHoverBackgroundColor","getHoverColor","hoverBorderColor","pointHoverBorderColor","hoverBorderWidth","pointHoverBorderWidth","removeHoverStyle","acquireContext","getContext","dataHandler","newData","oldData","$data","_chart","newDatasetLabels","oldDatasetLabels","oldLabels","JSON","stringify","newLabels","forEach","oldDatasetKeys","keys","newDatasetKeys","deletionKeys","key","indexOf","attribute","deletionKey","hasOwnProperty","$emit","xLabels","yLabels","destroy","renderChart","chartData","reactiveData","watch","reactiveProp","props","required","mixins","generateChart","chartId","chartType","createElement","style","styles","class","cssClasses","attrs","ref","default","String","plugins","Array","_plugins","methods","addPlugin","plugin","generateLegend","chart_default","a","$refs","beforeDestroy","Bar","HorizontalBar","Doughnut","Pie","PolarArea","Radar","Bubble","Scatter","factory","CustomTooltips","tooltipModel","_this","_setCanvasId","_idMaker","_hex","_multiplier","random","toString","_canvasId","ClassName","ABOVE","BELOW","CHARTJS_TOOLTIP","NO_TRANSFORM","TOOLTIP_BODY","TOOLTIP_BODY_ITEM","TOOLTIP_BODY_ITEM_COLOR","TOOLTIP_BODY_ITEM_LABEL","TOOLTIP_BODY_ITEM_VALUE","TOOLTIP_HEADER","TOOLTIP_HEADER_ITEM","Selector","DIV","SPAN","TOOLTIP","tooltip","document","getElementById","className","parentNode","appendChild","opacity","classList","remove","yAlign","add","body","titleLines","title","tooltipHeader","tooltipHeaderTitle","innerHTML","tooltipBody","tooltipBodyItems","lines","tooltipBodyItem","colors","labelColors","tooltipBodyItemColor","split","tooltipBodyItemLabel","tooltipBodyItemValue","pop","_tooltipBodyItemValue","positionY","offsetTop","positionX","offsetLeft","caretX","caretY","arrayEvents","listenArrayEvents","array","listener","_chartjs","listeners","configurable","enumerable","method","charAt","toUpperCase","slice","base","args","arguments","res","apply","object","unlistenArrayEvents","stub","linkScales","addElements","updateIndex","scaleID","_data","createMetaDataset","createMetaData","metaData","addElementAndReset","element","buildOrUpdateElements","resyncElements","transition","easingValue","elementOpts","numMeta","numData","insertElements","start","onDataPush","onDataPop","onDataShift","shift","onDataSplice","onDataUnshift","inherits","color","interpolate","view","ease","actual","origin","target","c0","c1","valid","mix","rgbString","isFinite","configuration","_view","clone","_start","tooltipPosition","hasValue","isNumber","xRange","mouseX","vm","abs","yRange","mouseY","inRange","pow","inLabelRange","inXRange","inYRange","getCenterPoint","getArea","PI","errMargin","ratio","round","alpha","moment","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","items","hash","out","buildLookupTable","timestamps","distribution","time","pos","prev","curr","table","lookup","mid","i0","i1","lo","hi","skey","sval","tkey","range","span","offset","momentify","parser","format","isValid","parse","input","isNullOrUndef","startOf","valueOf","determineStepSize","unit","capacity","factor","interval","milliseconds","ceil","determineUnitForAutoTicks","minUnit","determineUnitForFormatting","ticks","diff","as","determineMajorUnit","generate","timeOpts","minor","major","stepSize","unitStepSize","weekday","isoWeekday","majorTicksEnabled","enabled","first","last","computeOffsets","upper","lower","ticksFromTimestamps","majorUnit","determineLabelFormat","momentDate","hasTime","defaultConfig","bounds","displayFormat","displayFormats","autoSkip","source","TimeScale","Scale","Error","mergeTicksOptions","console","warn","rawValue","determineDataLimits","j","jlen","timestamp","sort","endOf","_horizontal","_table","_timestamps","buildTicks","getLabelCapacity","_unit","_majorUnit","_offsets","_labelFormat","getLabelForIndex","tooltipFormat","tickFormatFunction","tick","formatOverride","formats","minorFormat","majorFormat","majorTime","majorTickOpts","tickOpts","formatter","userCallback","convertTicksToLabels","getPixelForOffset","getPixelForTick","getTicks","getValueForPixel","pixel","getLabelWidth","ticksOpts","tickLabelWidth","angle","toRadians","maxRotation","cosRotation","cos","sinRotation","sin","tickFontSize","exampleTime","exampleLabel","innerWidth","scaleService","registerScaleType","clear","clearRect","roundedRect","rx","ry","quadraticCurveTo","rect","edgeLength","xOffset","yOffset","drawImage","arc","closePath","sqrt","leftX","topY","sideSize","clip","flip","bezierCurveTo","drawRoundedRectangle","uid","defaultValue","fn","thisArg","loopable","len","arrayEquals","a0","a1","v0","v1","klen","k","_merger","tval","_mergerIf","sources","merger","setFn","extensions","ChartElement","constructor","Surrogate","__super__","callCallback","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","globalDefaults","current","currentVM","globalOptionLineElements","lastDrawnIndex","_loop","_cacheId","register","p","concat","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","Interaction","platform","Ticks","Title","pluginService","PluginBase","canvasHelpers","layoutService","animateRotate","animateScale","arcOpts","bw","cutoutPercentage","rotation","circumference","tooltips","callbacks","tooltipItem","dataLabel","doughnut","pie","Arc","getRingIndex","ringIndex","availableWidth","availableHeight","startAngle","endAngle","end","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","outerRadius","innerRadius","radiusLength","getVisibleDatasetCount","offsetX","offsetY","total","calculateTotal","animationOpts","calculateCircumference","arcs","hoverWidth","chartX","chartY","pointRelativePosition","getAngleFromPoint","distance","betweenAngles","withinRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","sA","eA","formatters","linear","LinearScale","LinearScaleBase","DEFAULT_MIN","DEFAULT_MAX","IDMatches","hasStacks","stack","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","handleTickRangeOptions","getTickLimit","maxTicks","maxTicksLimit","handleDirectionalChanges","innerDimension","ticksAsNumbers","generateTicks","generationOptions","dataRange","exp","significand","tickVal","log10","endExp","endSignificand","minNotZero","precision","lastTick","logarithmic","LogarithmicScale","tickValues","_getFirstTickValue","sign","firstTickValue","computeMinSampleSize","pixels","computeFitCategoryTraits","ruler","thickness","barThickness","stackCount","categoryPercentage","barPercentage","chunk","computeFlexCategoryTraits","percent","gridLines","offsetGridLines","axis","rectangle","borderSkipped","yLabel","datasetLabel","xLabel","bar","Rectangle","rects","_ruler","getRuler","rectangleOptions","updateElementGeometry","vscale","getValueScale","horizontal","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","stacks","getStackCount","getStackIndex","name","imeta","ivalue","controller","stackIndex","maxBarThickness","Infinity","rectangleElementOptions","horizontalBar","radar","pointElementOptions","pointPosition","getPointPositionForValue","xCenter","yCenter","dataPoint","bubble","_resolveElementOptions","dsIndex","getPixelForDecimal","_options","dataIndex","labelsFromTicks","getLineValue","lineValue","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","lineHeight","beginAtZero","minRotation","mirror","autoSkipPadding","labelOffset","computeTextSize","longestText","parseFontOptions","family","parseLineHeight","getPadding","_ticks","longestTextCache","beforeDataLimits","afterDataLimits","beforeBuildTicks","afterBuildTicks","beforeTickToLabelConversion","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","tickFont","labelRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","scaleLabelOpts","gridLineOpts","isFullWidth","scaleLabelLineHeight","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","longestLabelWidth","labelHeight","firstLabelWidth","lastLabelWidth","handleMargins","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","skipRatio","shouldSkip","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","result","optionMajorTicks","isRotated","tickFontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","tx1","ty1","tx2","ty2","x1","y1","x2","y2","labelX","labelY","zeroLineIndex","labelYOffset","xLineValue","aliasPixel","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","rotate","lineCount","scaleLabelX","scaleLabelY","halfLineHeight","filterByPosition","where","v","sortByWeight","_tmpIndex_","boxes","layoutItem","prop","layoutOptions","layout","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartWidth","chartHeight","chartAreaWidth","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxChartAreaWidth","maxChartAreaHeight","minBoxSizes","getMinimumBoxSize","maxHorizontalLeftPadding","maxHorizontalRightPadding","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","boxPadding","verticalBox","totalLeftBoxesWidth","totalRightBoxesWidth","totalTopBoxesHeight","totalBottomBoxesHeight","fitBox","box","finalFitVerticalBox","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBoxSize","findNextWhere","minBox","scaleMargin","tickValue","delta","logDelta","tickString","numDecimal","toFixed","remain","toExponential","basic","dom","implementation","_enabled","releaseContext","addEventListener","removeEventListener","filler","colorNames","getRgba","string","abbr","hex","rgba","per","keyword","rgb","parseInt","parseFloat","getHsla","hsl","h","s","getHwb","hwb","w","getRgb","getHsl","hsla","getAlpha","vals","hexString","hexDouble","rgbaString","percentString","percentaString","g","hslString","hslaString","hwbString","reverseNames","num","str","textSize","titleX","titleY","titleFont","createNewTitleBlockAndAttach","titleOpts","titleBlock","getRelativePosition","parseVisibleItems","handler","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","modes","single","x-axis","nearest","sizeA","sizeB","ret","intersectsItem","parseMaxStyle","styleValue","node","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","configMerge","scaleMerge","getScaleDefaults","slen","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","n","almostEquals","epsilon","almostWhole","rounded","reduce","NEGATIVE_INFINITY","exponent","log","LOG10E","powerOf10","isPowerOf10","degrees","toDegrees","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","atan2","distanceBetweenPoints","pixelWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","loop","niceNum","niceFraction","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","currentTarget","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getStyle","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","getMaximumWidth","container","clientWidth","cw","getMaximumHeight","clientHeight","ch","el","property","currentStyle","getPropertyValue","retinaScale","forceRatio","pixelRatio","devicePixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","error","colorValue","CanvasPattern","saturate","darken","spacing","niceRange","niceMin","niceMax","numSpaces","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","numericGeneratorOptions","fixedStepSize","EXPANDO_KEY","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","initCanvas","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","supportsEventListenerOptions","supports","eventListenerOptions","passive","createEvent","nativeEvent","fromNativeEvent","event","throttled","ticking","createResizer","resizer","cls","maxSize","cssText","expand","childNodes","shrink","_reset","scrollLeft","scrollTop","onScroll","bind","watchForRender","expando","proxy","renderProxy","animationName","reflow","offsetParent","unwatchForRender","addResizeListener","insertBefore","firstChild","removeResizeListener","removeChild","injectCSS","css","_style","setAttribute","getElementsByTagName","createTextNode","keyframes","removeAttribute","proxies","addEvent","removeEvent","constructors","scaleConstructor","scaleDefaults","getScaleConstructor","updateScaleDefaults","additions","addScalesToLayout","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","c","m","rgb2keyword","reverseKeywords","rgb2xyz","z","rgb2lab","xyz","rgb2lch","lab2lch","hsl2rgb","t1","t2","t3","val","hsl2hsv","sv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv","f","q","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","wh","bl","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab","hr","lab2rgb","lch2lab","lch","lch2xyz","lch2rgb","keyword2rgb","cssKeywords","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","conversions","convert","Converter","func","arg","pair","exec","from","to","convs","routeSpace","space","getValues","setValues","fspace","effects","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","getBasePosition","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","doFill","mapper","p0","p1","d0","d1","afterDatasetsUpdate","$filler","beforeDatasetDraw","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","mergeOpacity","colorString","pushOrConcat","toPush","createTooltipItem","getBaseModel","tooltipOpts","xAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","getTooltipSize","combinedBodyLength","bodyItem","before","after","titleLineCount","footerLineCount","widthPadding","maxLineWidth","determineAlignment","lf","rf","olf","orf","yf","midX","midY","getBackgroundPoint","alignment","paddingAndSize","radiusAndPadding","Tooltip","_lastActive","getTitle","getBeforeBody","getBody","bodyItems","getAfterBody","getFooter","existingModel","active","_active","backgroundPoint","tooltipSize","labelTextColors","positioners","_eventPosition","itemSort","dataPoints","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","drawFooter","drawBackground","hasTooltipContent","getElementsAtEventForMode","average","eventPosition","nearestElement","d","tp","responsive","responsiveAnimationDuration","maintainAspectRatio","events","animationDuration","construct","isVertical","getBarBounds","halfWidth","halfHeight","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","corners","borders","startCorner","cornerAt","corner","scatter","angleLines","circular","pointLabels","polarArea","countVisibleElements","visibleCount","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","initConfig","updateConfig","newOptions","ensureScalesHaveIDs","buildOrUpdateScales","positionIsHorizontal","types","instances","_bufferedRender","bindEvents","resize","initToolTip","stop","silent","newWidth","newHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","obj","dtype","dposition","isDefault","scaleType","scaleClass","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getDatasetAtEvent","_meta","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","Controller","Color","lightness","whiteness","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","yiq","light","negate","lighten","desaturate","whiten","blacken","greyscale","clearer","opaquer","mixinColor","color1","w1","w2","toJSON","spaces","maxes","capped","chans","sname","svalues","DatasetScale","getLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getPointLabelFontOptions","pointLabelOptions","measureLabelSize","determineLimits","fitWithPointLabels","plFont","largestPossibleRadius","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","hLimits","vLimits","setReductions","drawingArea","setCenterPoint","getTextAlignForAngle","adjustPointPositionForLabelHeight","drawPointLabels","angleLineOpts","pointLabelOpts","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","drawRadiusLine","numberOrZero","param","LinearRadialScale","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","tickFontStyle","tickFontFamily","tickLabelFont","yCenterOffset"],"mappings":"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","file":"js/chunk-66fe.b658f55e.js","sourcesContent":["'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\tlegend: {\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true,\n\t\treverse: false,\n\t\tweight: 1000,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t},\n\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t}\n\t\t\ttext.push('</li>');\n\t\t}\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t}\n});\n\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param labelopts {Object} the label options on the legend\n * @param fontSize {Number} the label font size\n * @return {Number} width of the color box area\n */\nfunction getBoxWidth(labelOpts, fontSize) {\n\treturn labelOpts.usePointStyle ?\n\t\tfontSize * Math.SQRT2 :\n\t\tlabelOpts.boxWidth;\n}\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Legend = Element.extend({\n\n\tinitialize: function(config) {\n\t\thelpers.extend(this, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tthis.legendHitBoxes = [];\n\n\t\t// Are we in doughnut mode which has a different data type\n\t\tthis.doughnutMode = false;\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\t// Any function defined here is inherited by all legend types.\n\t// Any function can be extended by the legend type\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: function() {\n\t\tvar me = this;\n\t\tvar labelOpts = me.options.labels || {};\n\t\tvar legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n\t\tif (labelOpts.filter) {\n\t\t\tlegendItems = legendItems.filter(function(item) {\n\t\t\t\treturn labelOpts.filter(item, me.chart.data);\n\t\t\t});\n\t\t}\n\n\t\tif (me.options.reverse) {\n\t\t\tlegendItems.reverse();\n\t\t}\n\n\t\tme.legendItems = legendItems;\n\t},\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar display = opts.display;\n\n\t\tvar ctx = me.ctx;\n\n\t\tvar globalDefault = defaults.global;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\t// Reset hit boxes\n\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\tvar minSize = me.minSize;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tif (isHorizontal) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = display ? 10 : 0;\n\t\t} else {\n\t\t\tminSize.width = display ? 10 : 0;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Increase sizes here\n\t\tif (display) {\n\t\t\tctx.font = labelFont;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// Labels\n\n\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\tvar totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\n\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\tif (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n\t\t\t\t\t\ttotalHeight += fontSize + (labelOpts.padding);\n\t\t\t\t\t\tlineWidths[lineWidths.length] = me.left;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\n\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t});\n\n\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t} else {\n\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\tvar currentColWidth = 0;\n\t\t\t\tvar currentColHeight = 0;\n\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\tif (currentColHeight + itemHeight > minSize.height) {\n\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get max width\n\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\tminSize.width += totalWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\n\t// Actually draw the legend on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar globalDefault = defaults.global;\n\t\tvar lineDefault = globalDefault.elements.line;\n\t\tvar legendWidth = me.width;\n\t\tvar lineWidths = me.lineWidths;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\n\t\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar cursor;\n\n\t\t\t// Canvas setup\n\t\t\tctx.textAlign = 'left';\n\t\t\tctx.textBaseline = 'middle';\n\t\t\tctx.lineWidth = 0.5;\n\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\tctx.font = labelFont;\n\n\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\tvar hitboxes = me.legendHitBoxes;\n\n\t\t\t// current position\n\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Set the ctx for the box\n\t\t\t\tctx.save();\n\n\t\t\t\tctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n\t\t\t\tctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\tctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\tctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\tctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\tctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n\t\t\t\tvar isLineWidthZero = (valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\n\n\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\tctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t}\n\n\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\tvar radius = fontSize * Math.SQRT2 / 2;\n\t\t\t\t\tvar offSet = radius / Math.SQRT2;\n\t\t\t\t\tvar centerX = x + offSet;\n\t\t\t\t\tvar centerY = y + offSet;\n\n\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\thelpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t} else {\n\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\tif (!isLineWidthZero) {\n\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t}\n\n\t\t\t\tctx.restore();\n\t\t\t};\n\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\tvar halfFontSize = fontSize / 2;\n\t\t\t\tvar xLeft = boxWidth + halfFontSize + x;\n\t\t\t\tvar yMiddle = y + halfFontSize;\n\n\t\t\t\tctx.fillText(legendItem.text, xLeft, yMiddle);\n\n\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\tctx.moveTo(xLeft, yMiddle);\n\t\t\t\t\tctx.lineTo(xLeft + textWidth, yMiddle);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Horizontal\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tif (isHorizontal) {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2),\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width;\n\t\t\t\tvar width = boxWidth + (fontSize / 2) + textWidth;\n\t\t\t\tvar x = cursor.x;\n\t\t\t\tvar y = cursor.y;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tif (x + width >= legendWidth) {\n\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\n\t\t\t\t\t}\n\t\t\t\t} else if (y + itemHeight > me.bottom) {\n\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\n\t\t\t\t\tcursor.line++;\n\t\t\t\t}\n\n\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\thitboxes[i].left = x;\n\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t// Fill the actual label\n\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor.x += width + (labelOpts.padding);\n\t\t\t\t} else {\n\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @return {Boolean} true if a change occured\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\tvar changed = false;\n\n\t\tif (type === 'mousemove') {\n\t\t\tif (!opts.onHover) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (type === 'click') {\n\t\t\tif (!opts.onClick) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// Chart event already has relative position in it\n\t\tvar x = e.x;\n\t\tvar y = e.y;\n\n\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t// See if we are touching one of the dataset boxes\n\t\t\tvar lh = me.legendHitBoxes;\n\t\t\tfor (var i = 0; i < lh.length; ++i) {\n\t\t\t\tvar hitBox = lh[i];\n\n\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t// Touching an element\n\t\t\t\t\tif (type === 'click') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onClick.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (type === 'mousemove') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onHover.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n\tvar legend = new Legend({\n\t\tctx: chart.ctx,\n\t\toptions: legendOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, legend, legendOpts);\n\tlayouts.addBox(chart, legend);\n\tchart.legend = legend;\n}\n\nmodule.exports = {\n\tid: 'legend',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n\t * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Legend,\n\n\tbeforeInit: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\n\t\tif (legendOpts) {\n\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\t\tvar legend = chart.legend;\n\n\t\tif (legendOpts) {\n\t\t\thelpers.mergeIf(legendOpts, defaults.global.legend);\n\n\t\t\tif (legend) {\n\t\t\t\tlayouts.configure(chart, legend, legendOpts);\n\t\t\t\tlegend.options = legendOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t\t}\n\t\t} else if (legend) {\n\t\t\tlayouts.removeBox(chart, legend);\n\t\t\tdelete chart.legend;\n\t\t}\n\t},\n\n\tafterEvent: function(chart, e) {\n\t\tvar legend = chart.legend;\n\t\tif (legend) {\n\t\t\tlegend.handleEvent(e);\n\t\t}\n\t}\n};\n","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\nmodule.exports = {\n\t/**\n\t * Converts the given line height `value` in pixels for a specific font `size`.\n\t * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n\t * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n\t * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n\t * @since 2.7.0\n\t */\n\ttoLineHeight: function(value, size) {\n\t\tvar matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\t\tif (!matches || matches[1] === 'normal') {\n\t\t\treturn size * 1.2;\n\t\t}\n\n\t\tvalue = +matches[2];\n\n\t\tswitch (matches[3]) {\n\t\tcase 'px':\n\t\t\treturn value;\n\t\tcase '%':\n\t\t\tvalue /= 100;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\treturn size * value;\n\t},\n\n\t/**\n\t * Converts the given value into a padding object with pre-computed width/height.\n\t * @param {Number|Object} value - If a number, set the value to all TRBL component,\n\t *  else, if and object, use defined properties and sets undefined ones to 0.\n\t * @returns {Object} The padding values (top, right, bottom, left, width, height)\n\t * @since 2.7.0\n\t */\n\ttoPadding: function(value) {\n\t\tvar t, r, b, l;\n\n\t\tif (helpers.isObject(value)) {\n\t\t\tt = +value.top || 0;\n\t\t\tr = +value.right || 0;\n\t\t\tb = +value.bottom || 0;\n\t\t\tl = +value.left || 0;\n\t\t} else {\n\t\t\tt = r = b = l = +value || 0;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: t,\n\t\t\tright: r,\n\t\t\tbottom: b,\n\t\t\tleft: l,\n\t\t\theight: t + b,\n\t\t\twidth: l + r\n\t\t};\n\t},\n\n\t/**\n\t * Evaluates the given `inputs` sequentially and returns the first defined value.\n\t * @param {Array[]} inputs - An array of values, falling back to the last value.\n\t * @param {Object} [context] - If defined and the current value is a function, the value\n\t * is called with `context` as first argument and the result becomes the new input.\n\t * @param {Number} [index] - If defined and the current value is an array, the value\n\t * at `index` become the new input.\n\t * @since 2.7.0\n\t */\n\tresolve: function(inputs, context, index) {\n\t\tvar i, ilen, value;\n\n\t\tfor (i = 0, ilen = inputs.length; i < ilen; ++i) {\n\t\t\tvalue = inputs[i];\n\t\t\tif (value === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (context !== undefined && typeof value === 'function') {\n\t\t\t\tvalue = value(context);\n\t\t\t}\n\t\t\tif (index !== undefined && helpers.isArray(value)) {\n\t\t\t\tvalue = value[index];\n\t\t\t}\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n};\n","/* global window: false */\n'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tanimation: {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers.noop,\n\t\tonComplete: helpers.noop\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.Animation = Element.extend({\n\t\tchart: null, // the animation associated chart instance\n\t\tcurrentStep: 0, // the current animation step\n\t\tnumSteps: 60, // default number of steps\n\t\teasing: '', // the easing to use for this animation\n\t\trender: null, // render function used by the animation service\n\n\t\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\t\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\n\t});\n\n\tChart.animationService = {\n\t\tframeDuration: 17,\n\t\tanimations: [],\n\t\tdropFrames: 0,\n\t\trequest: null,\n\n\t\t/**\n\t\t * @param {Chart} chart - The chart to animate.\n\t\t * @param {Chart.Animation} animation - The animation that we will animate.\n\t\t * @param {Number} duration - The animation duration in ms.\n\t\t * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n\t\t */\n\t\taddAnimation: function(chart, animation, duration, lazy) {\n\t\t\tvar animations = this.animations;\n\t\t\tvar i, ilen;\n\n\t\t\tanimation.chart = chart;\n\n\t\t\tif (!lazy) {\n\t\t\t\tchart.animating = true;\n\t\t\t}\n\n\t\t\tfor (i = 0, ilen = animations.length; i < ilen; ++i) {\n\t\t\t\tif (animations[i].chart === chart) {\n\t\t\t\t\tanimations[i] = animation;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tanimations.push(animation);\n\n\t\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\t\tif (animations.length === 1) {\n\t\t\t\tthis.requestAnimationFrame();\n\t\t\t}\n\t\t},\n\n\t\tcancelAnimation: function(chart) {\n\t\t\tvar index = helpers.findIndex(this.animations, function(animation) {\n\t\t\t\treturn animation.chart === chart;\n\t\t\t});\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.animations.splice(index, 1);\n\t\t\t\tchart.animating = false;\n\t\t\t}\n\t\t},\n\n\t\trequestAnimationFrame: function() {\n\t\t\tvar me = this;\n\t\t\tif (me.request === null) {\n\t\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\t\tme.request = helpers.requestAnimFrame.call(window, function() {\n\t\t\t\t\tme.request = null;\n\t\t\t\t\tme.startDigest();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tstartDigest: function() {\n\t\t\tvar me = this;\n\t\t\tvar startTime = Date.now();\n\t\t\tvar framesToDrop = 0;\n\n\t\t\tif (me.dropFrames > 1) {\n\t\t\t\tframesToDrop = Math.floor(me.dropFrames);\n\t\t\t\tme.dropFrames = me.dropFrames % 1;\n\t\t\t}\n\n\t\t\tme.advance(1 + framesToDrop);\n\n\t\t\tvar endTime = Date.now();\n\n\t\t\tme.dropFrames += (endTime - startTime) / me.frameDuration;\n\n\t\t\t// Do we have more stuff to animate?\n\t\t\tif (me.animations.length > 0) {\n\t\t\t\tme.requestAnimationFrame();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tadvance: function(count) {\n\t\t\tvar animations = this.animations;\n\t\t\tvar animation, chart;\n\t\t\tvar i = 0;\n\n\t\t\twhile (i < animations.length) {\n\t\t\t\tanimation = animations[i];\n\t\t\t\tchart = animation.chart;\n\n\t\t\t\tanimation.currentStep = (animation.currentStep || 0) + count;\n\t\t\t\tanimation.currentStep = Math.min(animation.currentStep, animation.numSteps);\n\n\t\t\t\thelpers.callback(animation.render, [chart, animation], chart);\n\t\t\t\thelpers.callback(animation.onAnimationProgress, [animation], chart);\n\n\t\t\t\tif (animation.currentStep >= animation.numSteps) {\n\t\t\t\t\thelpers.callback(animation.onAnimationComplete, [animation], chart);\n\t\t\t\t\tchart.animating = false;\n\t\t\t\t\tanimations.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\t++i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Provided for backward compatibility, use Chart.Animation instead\n\t * @prop Chart.Animation#animationObject\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t */\n\tObject.defineProperty(Chart.Animation.prototype, 'animationObject', {\n\t\tget: function() {\n\t\t\treturn this;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart.Animation#chart instead\n\t * @prop Chart.Animation#chartInstance\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t */\n\tObject.defineProperty(Chart.Animation.prototype, 'chartInstance', {\n\t\tget: function() {\n\t\t\treturn this.chart;\n\t\t},\n\t\tset: function(value) {\n\t\t\tthis.chart = value;\n\t\t}\n\t});\n\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = {\n\t/**\n\t * @private\n\t */\n\t_set: function(scope, values) {\n\t\treturn helpers.merge(this[scope] || (this[scope] = {}), values);\n\t}\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('line', {\n\tshowLines: true,\n\tspanGaps: false,\n\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tid: 'x-axis-0'\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tfunction lineEnabled(dataset, options) {\n\t\treturn helpers.valueOrDefault(dataset.showLine, options.showLines);\n\t}\n\n\tChart.controllers.line = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data || [];\n\t\t\tvar options = me.chart.options;\n\t\t\tvar lineElementOptions = options.elements.line;\n\t\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar i, ilen, custom;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar showLine = lineEnabled(dataset, options);\n\n\t\t\t// Update Line\n\t\t\tif (showLine) {\n\t\t\t\tcustom = line.custom || {};\n\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t\t}\n\n\t\t\t\t// Utility\n\t\t\t\tline._scale = scale;\n\t\t\t\tline._datasetIndex = me.index;\n\t\t\t\t// Data\n\t\t\t\tline._children = points;\n\t\t\t\t// Model\n\t\t\t\tline._model = {\n\t\t\t\t\t// Appearance\n\t\t\t\t\t// The default behavior of lines is to break at null values, according\n\t\t\t\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t\t\t\t// This option gives lines the ability to span gaps\n\t\t\t\t\tspanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tsteppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n\t\t\t\t\tcubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\n\t\t\t\t};\n\n\t\t\t\tline.pivot();\n\t\t\t}\n\n\t\t\t// Update Points\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(points[i], i, reset);\n\t\t\t}\n\n\t\t\tif (showLine && line._model.tension !== 0) {\n\t\t\t\tme.updateBezierControlPoints();\n\t\t\t}\n\n\t\t\t// Now pivot the point for animation\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tpoints[i].pivot();\n\t\t\t}\n\t\t},\n\n\t\tgetPointBackgroundColor: function(point, index) {\n\t\t\tvar backgroundColor = this.chart.options.elements.point.backgroundColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.backgroundColor) {\n\t\t\t\tbackgroundColor = custom.backgroundColor;\n\t\t\t} else if (dataset.pointBackgroundColor) {\n\t\t\t\tbackgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n\t\t\t} else if (dataset.backgroundColor) {\n\t\t\t\tbackgroundColor = dataset.backgroundColor;\n\t\t\t}\n\n\t\t\treturn backgroundColor;\n\t\t},\n\n\t\tgetPointBorderColor: function(point, index) {\n\t\t\tvar borderColor = this.chart.options.elements.point.borderColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.borderColor) {\n\t\t\t\tborderColor = custom.borderColor;\n\t\t\t} else if (dataset.pointBorderColor) {\n\t\t\t\tborderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n\t\t\t} else if (dataset.borderColor) {\n\t\t\t\tborderColor = dataset.borderColor;\n\t\t\t}\n\n\t\t\treturn borderColor;\n\t\t},\n\n\t\tgetPointBorderWidth: function(point, index) {\n\t\t\tvar borderWidth = this.chart.options.elements.point.borderWidth;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (!isNaN(custom.borderWidth)) {\n\t\t\t\tborderWidth = custom.borderWidth;\n\t\t\t} else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n\t\t\t\tborderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n\t\t\t} else if (!isNaN(dataset.borderWidth)) {\n\t\t\t\tborderWidth = dataset.borderWidth;\n\t\t\t}\n\n\t\t\treturn borderWidth;\n\t\t},\n\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar value = dataset.data[index];\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar pointOptions = me.chart.options.elements.point;\n\t\t\tvar x, y;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n\t\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t\t// Utility\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._datasetIndex = datasetIndex;\n\t\t\tpoint._index = index;\n\n\t\t\t// Desired view properties\n\t\t\tpoint._model = {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\t// Appearance\n\t\t\t\tradius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n\t\t\t\tpointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n\t\t\t\tbackgroundColor: me.getPointBackgroundColor(point, index),\n\t\t\t\tborderColor: me.getPointBorderColor(point, index),\n\t\t\t\tborderWidth: me.getPointBorderWidth(point, index),\n\t\t\t\ttension: meta.dataset._model ? meta.dataset._model.tension : 0,\n\t\t\t\tsteppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n\t\t\t\t// Tooltip\n\t\t\t\thitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n\t\t\t};\n\t\t},\n\n\t\tcalculatePointY: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar sumPos = 0;\n\t\t\tvar sumNeg = 0;\n\t\t\tvar i, ds, dsMeta;\n\n\t\t\tif (yScale.options.stacked) {\n\t\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\t\tif (rightValue < 0) {\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t\t}\n\t\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t\t}\n\n\t\t\treturn yScale.getPixelForValue(value);\n\t\t},\n\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar area = me.chart.chartArea;\n\t\t\tvar points = (meta.data || []);\n\t\t\tvar i, ilen, point, model, controlPoints;\n\n\t\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\t\tif (meta.dataset._model.spanGaps) {\n\t\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\t\treturn !pt._model.skip;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction capControlPoint(pt, min, max) {\n\t\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t\t}\n\n\t\t\tif (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n\t\t\t\thelpers.splineCurveMonotone(points);\n\t\t\t} else {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tpoint = points[i];\n\t\t\t\t\tmodel = point._model;\n\t\t\t\t\tcontrolPoints = helpers.splineCurve(\n\t\t\t\t\t\thelpers.previousItem(points, i)._model,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\thelpers.nextItem(points, i)._model,\n\t\t\t\t\t\tmeta.dataset._model.tension\n\t\t\t\t\t);\n\t\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.chart.options.elements.line.capBezierPoints) {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tmodel = points[i]._model;\n\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data || [];\n\t\t\tvar area = chart.chartArea;\n\t\t\tvar ilen = points.length;\n\t\t\tvar i = 0;\n\n\t\t\thelpers.canvas.clipArea(chart.ctx, area);\n\n\t\t\tif (lineEnabled(me.getDataset(), chart.options)) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\n\t\t\t// Draw the points\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tpoints[i].draw(area);\n\t\t\t}\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\n\t\t\tmodel.radius = custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\n\t\t\tmodel.backgroundColor = me.getPointBackgroundColor(point, index);\n\t\t\tmodel.borderColor = me.getPointBorderColor(point, index);\n\t\t\tmodel.borderWidth = me.getPointBorderWidth(point, index);\n\t\t}\n\t});\n};\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nmodule.exports = {\n\tacquireContext: function(item) {\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\treturn item && item.getContext('2d') || null;\n\t}\n};\n","function dataHandler(newData, oldData) {\n  if (oldData) {\n    var chart = this.$data._chart;\n    var newDatasetLabels = newData.datasets.map(function (dataset) {\n      return dataset.label;\n    });\n    var oldDatasetLabels = oldData.datasets.map(function (dataset) {\n      return dataset.label;\n    });\n    var oldLabels = JSON.stringify(oldDatasetLabels);\n    var newLabels = JSON.stringify(newDatasetLabels);\n\n    if (newLabels === oldLabels && oldData.datasets.length === newData.datasets.length) {\n      newData.datasets.forEach(function (dataset, i) {\n        var oldDatasetKeys = Object.keys(oldData.datasets[i]);\n        var newDatasetKeys = Object.keys(dataset);\n        var deletionKeys = oldDatasetKeys.filter(function (key) {\n          return key !== '_meta' && newDatasetKeys.indexOf(key) === -1;\n        });\n        deletionKeys.forEach(function (deletionKey) {\n          delete chart.data.datasets[i][deletionKey];\n        });\n\n        for (var attribute in dataset) {\n          if (dataset.hasOwnProperty(attribute)) {\n            chart.data.datasets[i][attribute] = dataset[attribute];\n          }\n        }\n      });\n\n      if (newData.hasOwnProperty('labels')) {\n        chart.data.labels = newData.labels;\n        this.$emit('labels:update');\n      }\n\n      if (newData.hasOwnProperty('xLabels')) {\n        chart.data.xLabels = newData.xLabels;\n        this.$emit('xlabels:update');\n      }\n\n      if (newData.hasOwnProperty('yLabels')) {\n        chart.data.yLabels = newData.yLabels;\n        this.$emit('ylabels:update');\n      }\n\n      chart.update();\n      this.$emit('chart:update');\n    } else {\n      if (chart) {\n        chart.destroy();\n        this.$emit('chart:destroy');\n      }\n\n      this.renderChart(this.chartData, this.options);\n      this.$emit('chart:render');\n    }\n  } else {\n    if (this.$data._chart) {\n      this.$data._chart.destroy();\n\n      this.$emit('chart:destroy');\n    }\n\n    this.renderChart(this.chartData, this.options);\n    this.$emit('chart:render');\n  }\n}\n\nexport var reactiveData = {\n  data: function data() {\n    return {\n      chartData: null\n    };\n  },\n  watch: {\n    'chartData': dataHandler\n  }\n};\nexport var reactiveProp = {\n  props: {\n    chartData: {\n      required: true\n    }\n  },\n  watch: {\n    'chartData': dataHandler\n  }\n};\nexport default {\n  reactiveData: reactiveData,\n  reactiveProp: reactiveProp\n};","import Chart from 'chart.js';\nexport function generateChart(chartId, chartType) {\n  return {\n    render: function render(createElement) {\n      return createElement('div', {\n        style: this.styles,\n        class: this.cssClasses\n      }, [createElement('canvas', {\n        attrs: {\n          id: this.chartId,\n          width: this.width,\n          height: this.height\n        },\n        ref: 'canvas'\n      })]);\n    },\n    props: {\n      chartId: {\n        default: chartId,\n        type: String\n      },\n      width: {\n        default: 400,\n        type: Number\n      },\n      height: {\n        default: 400,\n        type: Number\n      },\n      cssClasses: {\n        type: String,\n        default: ''\n      },\n      styles: {\n        type: Object\n      },\n      plugins: {\n        type: Array,\n        default: function _default() {\n          return [];\n        }\n      }\n    },\n    data: function data() {\n      return {\n        _chart: null,\n        _plugins: this.plugins\n      };\n    },\n    methods: {\n      addPlugin: function addPlugin(plugin) {\n        this.$data._plugins.push(plugin);\n      },\n      generateLegend: function generateLegend() {\n        if (this.$data._chart) {\n          return this.$data._chart.generateLegend();\n        }\n      },\n      renderChart: function renderChart(data, options) {\n        if (this.$data._chart) this.$data._chart.destroy();\n        this.$data._chart = new Chart(this.$refs.canvas.getContext('2d'), {\n          type: chartType,\n          data: data,\n          options: options,\n          plugins: this.$data._plugins\n        });\n      }\n    },\n    beforeDestroy: function beforeDestroy() {\n      if (this.$data._chart) {\n        this.$data._chart.destroy();\n      }\n    }\n  };\n}\nexport var Bar = generateChart('bar-chart', 'bar');\nexport var HorizontalBar = generateChart('horizontalbar-chart', 'horizontalBar');\nexport var Doughnut = generateChart('doughnut-chart', 'doughnut');\nexport var Line = generateChart('line-chart', 'line');\nexport var Pie = generateChart('pie-chart', 'pie');\nexport var PolarArea = generateChart('polar-chart', 'polarArea');\nexport var Radar = generateChart('radar-chart', 'radar');\nexport var Bubble = generateChart('bubble-chart', 'bubble');\nexport var Scatter = generateChart('scatter-chart', 'scatter');\nexport default {\n  Bar: Bar,\n  HorizontalBar: HorizontalBar,\n  Doughnut: Doughnut,\n  Line: Line,\n  Pie: Pie,\n  PolarArea: PolarArea,\n  Radar: Radar,\n  Bubble: Bubble,\n  Scatter: Scatter\n};","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global['custom-tooltips'] = {})));\n}(this, (function (exports) { 'use strict';\n\n  /**\n   * --------------------------------------------------------------------------\n   * CoreUI Plugins - Custom Tooltips for Chart.js (v1.2.0): custom-tooltips.js\n   * Licensed under MIT (https://coreui.io/license)\n   * --------------------------------------------------------------------------\n   */\n  function CustomTooltips(tooltipModel) {\n    var _this = this;\n\n    // Add unique id if not exist\n    var _setCanvasId = function _setCanvasId() {\n      var _idMaker = function _idMaker() {\n        var _hex = 16;\n        var _multiplier = 0x10000;\n        return ((1 + Math.random()) * _multiplier | 0).toString(_hex);\n      };\n\n      var _canvasId = \"_canvas-\" + (_idMaker() + _idMaker());\n\n      _this._chart.canvas.id = _canvasId;\n      return _canvasId;\n    };\n\n    var ClassName = {\n      ABOVE: 'above',\n      BELOW: 'below',\n      CHARTJS_TOOLTIP: 'chartjs-tooltip',\n      NO_TRANSFORM: 'no-transform',\n      TOOLTIP_BODY: 'tooltip-body',\n      TOOLTIP_BODY_ITEM: 'tooltip-body-item',\n      TOOLTIP_BODY_ITEM_COLOR: 'tooltip-body-item-color',\n      TOOLTIP_BODY_ITEM_LABEL: 'tooltip-body-item-label',\n      TOOLTIP_BODY_ITEM_VALUE: 'tooltip-body-item-value',\n      TOOLTIP_HEADER: 'tooltip-header',\n      TOOLTIP_HEADER_ITEM: 'tooltip-header-item'\n    };\n    var Selector = {\n      DIV: 'div',\n      SPAN: 'span',\n      TOOLTIP: (this._chart.canvas.id || _setCanvasId()) + \"-tooltip\"\n    };\n    var tooltip = document.getElementById(Selector.TOOLTIP);\n\n    if (!tooltip) {\n      tooltip = document.createElement('div');\n      tooltip.id = Selector.TOOLTIP;\n      tooltip.className = ClassName.CHARTJS_TOOLTIP;\n\n      this._chart.canvas.parentNode.appendChild(tooltip);\n    } // Hide if no tooltip\n\n\n    if (tooltipModel.opacity === 0) {\n      tooltip.style.opacity = 0;\n      return;\n    } // Set caret Position\n\n\n    tooltip.classList.remove(ClassName.ABOVE, ClassName.BELOW, ClassName.NO_TRANSFORM);\n\n    if (tooltipModel.yAlign) {\n      tooltip.classList.add(tooltipModel.yAlign);\n    } else {\n      tooltip.classList.add(ClassName.NO_TRANSFORM);\n    } // Set Text\n\n\n    if (tooltipModel.body) {\n      var titleLines = tooltipModel.title || [];\n      var tooltipHeader = document.createElement(Selector.DIV);\n      tooltipHeader.className = ClassName.TOOLTIP_HEADER;\n      titleLines.forEach(function (title) {\n        var tooltipHeaderTitle = document.createElement(Selector.DIV);\n        tooltipHeaderTitle.className = ClassName.TOOLTIP_HEADER_ITEM;\n        tooltipHeaderTitle.innerHTML = title;\n        tooltipHeader.appendChild(tooltipHeaderTitle);\n      });\n      var tooltipBody = document.createElement(Selector.DIV);\n      tooltipBody.className = ClassName.TOOLTIP_BODY;\n      var tooltipBodyItems = tooltipModel.body.map(function (item) {\n        return item.lines;\n      });\n      tooltipBodyItems.forEach(function (item, i) {\n        var tooltipBodyItem = document.createElement(Selector.DIV);\n        tooltipBodyItem.className = ClassName.TOOLTIP_BODY_ITEM;\n        var colors = tooltipModel.labelColors[i];\n        var tooltipBodyItemColor = document.createElement(Selector.SPAN);\n        tooltipBodyItemColor.className = ClassName.TOOLTIP_BODY_ITEM_COLOR;\n        tooltipBodyItemColor.style.backgroundColor = colors.backgroundColor;\n        tooltipBodyItem.appendChild(tooltipBodyItemColor);\n\n        if (item[0].split(':').length > 1) {\n          var tooltipBodyItemLabel = document.createElement(Selector.SPAN);\n          tooltipBodyItemLabel.className = ClassName.TOOLTIP_BODY_ITEM_LABEL;\n          tooltipBodyItemLabel.innerHTML = item[0].split(': ')[0];\n          tooltipBodyItem.appendChild(tooltipBodyItemLabel);\n          var tooltipBodyItemValue = document.createElement(Selector.SPAN);\n          tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\n          tooltipBodyItemValue.innerHTML = item[0].split(': ').pop();\n          tooltipBodyItem.appendChild(tooltipBodyItemValue);\n        } else {\n          var _tooltipBodyItemValue = document.createElement(Selector.SPAN);\n\n          _tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\n          _tooltipBodyItemValue.innerHTML = item[0];\n          tooltipBodyItem.appendChild(_tooltipBodyItemValue);\n        }\n\n        tooltipBody.appendChild(tooltipBodyItem);\n      });\n      tooltip.innerHTML = '';\n      tooltip.appendChild(tooltipHeader);\n      tooltip.appendChild(tooltipBody);\n    }\n\n    var positionY = this._chart.canvas.offsetTop;\n    var positionX = this._chart.canvas.offsetLeft; // Display, position, and set styles for font\n\n    tooltip.style.opacity = 1;\n    tooltip.style.left = positionX + tooltipModel.caretX + \"px\";\n    tooltip.style.top = positionY + tooltipModel.caretY + \"px\";\n  }\n\n  exports.CustomTooltips = CustomTooltips;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=custom-tooltips.js.map\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = function(Chart) {\n\n\tvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n\t/**\n\t * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n\t * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n\t * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n\t */\n\tfunction listenArrayEvents(array, listener) {\n\t\tif (array._chartjs) {\n\t\t\tarray._chartjs.listeners.push(listener);\n\t\t\treturn;\n\t\t}\n\n\t\tObject.defineProperty(array, '_chartjs', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: {\n\t\t\t\tlisteners: [listener]\n\t\t\t}\n\t\t});\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\t\tvar base = array[key];\n\n\t\t\tObject.defineProperty(array, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: function() {\n\t\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\t\thelpers.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Removes the given array event listener and cleanup extra attached properties (such as\n\t * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n\t */\n\tfunction unlistenArrayEvents(array, listener) {\n\t\tvar stub = array._chartjs;\n\t\tif (!stub) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar listeners = stub.listeners;\n\t\tvar index = listeners.indexOf(listener);\n\t\tif (index !== -1) {\n\t\t\tlisteners.splice(index, 1);\n\t\t}\n\n\t\tif (listeners.length > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tdelete array[key];\n\t\t});\n\n\t\tdelete array._chartjs;\n\t}\n\n\t// Base class for all dataset controllers (line, bar, etc)\n\tChart.DatasetController = function(chart, datasetIndex) {\n\t\tthis.initialize(chart, datasetIndex);\n\t};\n\n\thelpers.extend(Chart.DatasetController.prototype, {\n\n\t\t/**\n\t\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdatasetElementType: null,\n\n\t\t/**\n\t\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdataElementType: null,\n\n\t\tinitialize: function(chart, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tme.chart = chart;\n\t\t\tme.index = datasetIndex;\n\t\t\tme.linkScales();\n\t\t\tme.addElements();\n\t\t},\n\n\t\tupdateIndex: function(datasetIndex) {\n\t\t\tthis.index = datasetIndex;\n\t\t},\n\n\t\tlinkScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\n\t\t\tif (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n\t\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t\t}\n\t\t\tif (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n\t\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t\t}\n\t\t},\n\n\t\tgetDataset: function() {\n\t\t\treturn this.chart.data.datasets[this.index];\n\t\t},\n\n\t\tgetMeta: function() {\n\t\t\treturn this.chart.getDatasetMeta(this.index);\n\t\t},\n\n\t\tgetScaleForId: function(scaleID) {\n\t\t\treturn this.chart.scales[scaleID];\n\t\t},\n\n\t\treset: function() {\n\t\t\tthis.update(true);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroy: function() {\n\t\t\tif (this._data) {\n\t\t\t\tunlistenArrayEvents(this._data, this);\n\t\t\t}\n\t\t},\n\n\t\tcreateMetaDataset: function() {\n\t\t\tvar me = this;\n\t\t\tvar type = me.datasetElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index\n\t\t\t});\n\t\t},\n\n\t\tcreateMetaData: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar type = me.dataElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index\n\t\t\t});\n\t\t},\n\n\t\taddElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data || [];\n\t\t\tvar metaData = meta.data;\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = data.length; i < ilen; ++i) {\n\t\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t\t}\n\n\t\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t\t},\n\n\t\taddElementAndReset: function(index) {\n\t\t\tvar element = this.createMetaData(index);\n\t\t\tthis.getMeta().data.splice(index, 0, element);\n\t\t\tthis.updateElement(element, index, true);\n\t\t},\n\n\t\tbuildOrUpdateElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t\t// the internal meta data accordingly.\n\t\t\tif (me._data !== data) {\n\t\t\t\tif (me._data) {\n\t\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t\t}\n\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t\tme._data = data;\n\t\t\t}\n\n\t\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\t\tme.resyncElements();\n\t\t},\n\n\t\tupdate: helpers.noop,\n\n\t\ttransition: function(easingValue) {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].transition(easingValue);\n\t\t\t}\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.transition(easingValue);\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].draw();\n\t\t\t}\n\t\t},\n\n\t\tremoveHoverStyle: function(element, elementOpts) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar model = element._model;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n\t\t},\n\n\t\tsetHoverStyle: function(element) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar getHoverColor = helpers.getHoverColor;\n\t\t\tvar model = element._model;\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tresyncElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data;\n\t\t\tvar numMeta = meta.data.length;\n\t\t\tvar numData = data.length;\n\n\t\t\tif (numData < numMeta) {\n\t\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t\t} else if (numData > numMeta) {\n\t\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinsertElements: function(start, count) {\n\t\t\tfor (var i = 0; i < count; ++i) {\n\t\t\t\tthis.addElementAndReset(start + i);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPush: function() {\n\t\t\tthis.insertElements(this.getDataset().data.length - 1, arguments.length);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPop: function() {\n\t\t\tthis.getMeta().data.pop();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataShift: function() {\n\t\t\tthis.getMeta().data.shift();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataSplice: function(start, count) {\n\t\t\tthis.getMeta().data.splice(start, count);\n\t\t\tthis.insertElements(start, arguments.length - 2);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataUnshift: function() {\n\t\t\tthis.insertElements(0, arguments.length);\n\t\t}\n\t});\n\n\tChart.DatasetController.extend = helpers.inherits;\n};\n","'use strict';\n\nvar color = require('chartjs-color');\nvar helpers = require('../helpers/index');\n\nfunction interpolate(start, view, model, ease) {\n\tvar keys = Object.keys(model);\n\tvar i, ilen, key, actual, origin, target, type, c0, c1;\n\n\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\tkey = keys[i];\n\n\t\ttarget = model[key];\n\n\t\t// if a value is added to the model after pivot() has been called, the view\n\t\t// doesn't contain it, so let's initialize the view to the target value.\n\t\tif (!view.hasOwnProperty(key)) {\n\t\t\tview[key] = target;\n\t\t}\n\n\t\tactual = view[key];\n\n\t\tif (actual === target || key[0] === '_') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!start.hasOwnProperty(key)) {\n\t\t\tstart[key] = actual;\n\t\t}\n\n\t\torigin = start[key];\n\n\t\ttype = typeof target;\n\n\t\tif (type === typeof origin) {\n\t\t\tif (type === 'string') {\n\t\t\t\tc0 = color(origin);\n\t\t\t\tif (c0.valid) {\n\t\t\t\t\tc1 = color(target);\n\t\t\t\t\tif (c1.valid) {\n\t\t\t\t\t\tview[key] = c1.mix(c0, ease).rgbString();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type === 'number' && isFinite(origin) && isFinite(target)) {\n\t\t\t\tview[key] = origin + (target - origin) * ease;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tview[key] = target;\n\t}\n}\n\nvar Element = function(configuration) {\n\thelpers.extend(this, configuration);\n\tthis.initialize.apply(this, arguments);\n};\n\nhelpers.extend(Element.prototype, {\n\n\tinitialize: function() {\n\t\tthis.hidden = false;\n\t},\n\n\tpivot: function() {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\tme._view = helpers.clone(me._model);\n\t\t}\n\t\tme._start = {};\n\t\treturn me;\n\t},\n\n\ttransition: function(ease) {\n\t\tvar me = this;\n\t\tvar model = me._model;\n\t\tvar start = me._start;\n\t\tvar view = me._view;\n\n\t\t// No animation -> No Transition\n\t\tif (!model || ease === 1) {\n\t\t\tme._view = model;\n\t\t\tme._start = null;\n\t\t\treturn me;\n\t\t}\n\n\t\tif (!view) {\n\t\t\tview = me._view = {};\n\t\t}\n\n\t\tif (!start) {\n\t\t\tstart = me._start = {};\n\t\t}\n\n\t\tinterpolate(start, view, model, ease);\n\n\t\treturn me;\n\t},\n\n\ttooltipPosition: function() {\n\t\treturn {\n\t\t\tx: this._model.x,\n\t\t\ty: this._model.y\n\t\t};\n\t},\n\n\thasValue: function() {\n\t\treturn helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n\t}\n});\n\nElement.extend = helpers.inherits;\n\nmodule.exports = Element;\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bar = function(context, config) {\n\t\tconfig.type = 'bar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\nvar defaultColor = defaults.global.defaultColor;\n\ndefaults._set('global', {\n\telements: {\n\t\tpoint: {\n\t\t\tradius: 3,\n\t\t\tpointStyle: 'circle',\n\t\t\tbackgroundColor: defaultColor,\n\t\t\tborderColor: defaultColor,\n\t\t\tborderWidth: 1,\n\t\t\t// Hover\n\t\t\thitRadius: 1,\n\t\t\thoverRadius: 4,\n\t\t\thoverBorderWidth: 1\n\t\t}\n\t}\n});\n\nfunction xRange(mouseX) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\n}\n\nfunction yRange(mouseY) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\n}\n\nmodule.exports = Element.extend({\n\tinRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t},\n\n\tinLabelRange: xRange,\n\tinXRange: xRange,\n\tinYRange: yRange,\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y,\n\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t};\n\t},\n\n\tdraw: function(chartArea) {\n\t\tvar vm = this._view;\n\t\tvar model = this._model;\n\t\tvar ctx = this._chart.ctx;\n\t\tvar pointStyle = vm.pointStyle;\n\t\tvar radius = vm.radius;\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\t\tvar color = helpers.color;\n\t\tvar errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\t\tvar ratio = 0;\n\n\t\tif (vm.skip) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\tctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\n\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\n\t\t// Cliping for Points.\n\t\t// going out from inner charArea?\n\t\tif ((chartArea !== undefined) && ((model.x < chartArea.left) || (chartArea.right * errMargin < model.x) || (model.y < chartArea.top) || (chartArea.bottom * errMargin < model.y))) {\n\t\t\t// Point fade out\n\t\t\tif (model.x < chartArea.left) {\n\t\t\t\tratio = (x - model.x) / (chartArea.left - model.x);\n\t\t\t} else if (chartArea.right * errMargin < model.x) {\n\t\t\t\tratio = (model.x - x) / (model.x - chartArea.right);\n\t\t\t} else if (model.y < chartArea.top) {\n\t\t\t\tratio = (y - model.y) / (chartArea.top - model.y);\n\t\t\t} else if (chartArea.bottom * errMargin < model.y) {\n\t\t\t\tratio = (model.y - y) / (model.y - chartArea.bottom);\n\t\t\t}\n\t\t\tratio = Math.round(ratio * 100) / 100;\n\t\t\tctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();\n\t\t\tctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();\n\t\t}\n\n\t\thelpers.canvas.drawPoint(ctx, pointStyle, radius, x, y);\n\t}\n});\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bubble = function(context, config) {\n\t\tconfig.type = 'bubble';\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","/* global window: false */\n'use strict';\n\nvar moment = require('moment');\nmoment = typeof moment === 'function' ? moment : window.moment;\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\n\n// Integer constants are from the ES6 spec.\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nvar INTERVALS = {\n\tmillisecond: {\n\t\tcommon: true,\n\t\tsize: 1,\n\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t},\n\tsecond: {\n\t\tcommon: true,\n\t\tsize: 1000,\n\t\tsteps: [1, 2, 5, 10, 30]\n\t},\n\tminute: {\n\t\tcommon: true,\n\t\tsize: 60000,\n\t\tsteps: [1, 2, 5, 10, 30]\n\t},\n\thour: {\n\t\tcommon: true,\n\t\tsize: 3600000,\n\t\tsteps: [1, 2, 3, 6, 12]\n\t},\n\tday: {\n\t\tcommon: true,\n\t\tsize: 86400000,\n\t\tsteps: [1, 2, 5]\n\t},\n\tweek: {\n\t\tcommon: false,\n\t\tsize: 604800000,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tmonth: {\n\t\tcommon: true,\n\t\tsize: 2.628e9,\n\t\tsteps: [1, 2, 3]\n\t},\n\tquarter: {\n\t\tcommon: false,\n\t\tsize: 7.884e9,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tyear: {\n\t\tcommon: true,\n\t\tsize: 3.154e10\n\t}\n};\n\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n\treturn a - b;\n}\n\nfunction arrayUnique(items) {\n\tvar hash = {};\n\tvar out = [];\n\tvar i, ilen, item;\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\titem = items[i];\n\t\tif (!hash[item]) {\n\t\t\thash[item] = true;\n\t\t\tout.push(item);\n\t\t}\n\t}\n\n\treturn out;\n}\n\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\nfunction buildLookupTable(timestamps, min, max, distribution) {\n\tif (distribution === 'linear' || !timestamps.length) {\n\t\treturn [\n\t\t\t{time: min, pos: 0},\n\t\t\t{time: max, pos: 1}\n\t\t];\n\t}\n\n\tvar table = [];\n\tvar items = [min];\n\tvar i, ilen, prev, curr, next;\n\n\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\tcurr = timestamps[i];\n\t\tif (curr > min && curr < max) {\n\t\t\titems.push(curr);\n\t\t}\n\t}\n\n\titems.push(max);\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\tnext = items[i + 1];\n\t\tprev = items[i - 1];\n\t\tcurr = items[i];\n\n\t\t// only add points that breaks the scale linearity\n\t\tif (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n\t\t\ttable.push({time: curr, pos: i / (ilen - 1)});\n\t\t}\n\t}\n\n\treturn table;\n}\n\n// @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\nfunction lookup(table, key, value) {\n\tvar lo = 0;\n\tvar hi = table.length - 1;\n\tvar mid, i0, i1;\n\n\twhile (lo >= 0 && lo <= hi) {\n\t\tmid = (lo + hi) >> 1;\n\t\ti0 = table[mid - 1] || null;\n\t\ti1 = table[mid];\n\n\t\tif (!i0) {\n\t\t\t// given value is outside table (before first item)\n\t\t\treturn {lo: null, hi: i1};\n\t\t} else if (i1[key] < value) {\n\t\t\tlo = mid + 1;\n\t\t} else if (i0[key] > value) {\n\t\t\thi = mid - 1;\n\t\t} else {\n\t\t\treturn {lo: i0, hi: i1};\n\t\t}\n\t}\n\n\t// given value is outside table (after last item)\n\treturn {lo: i1, hi: null};\n}\n\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\nfunction interpolate(table, skey, sval, tkey) {\n\tvar range = lookup(table, skey, sval);\n\n\t// Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\tvar prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n\tvar next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n\n\tvar span = next[skey] - prev[skey];\n\tvar ratio = span ? (sval - prev[skey]) / span : 0;\n\tvar offset = (next[tkey] - prev[tkey]) * ratio;\n\n\treturn prev[tkey] + offset;\n}\n\n/**\n * Convert the given value to a moment object using the given time options.\n * @see http://momentjs.com/docs/#/parsing/\n */\nfunction momentify(value, options) {\n\tvar parser = options.parser;\n\tvar format = options.parser || options.format;\n\n\tif (typeof parser === 'function') {\n\t\treturn parser(value);\n\t}\n\n\tif (typeof value === 'string' && typeof format === 'string') {\n\t\treturn moment(value, format);\n\t}\n\n\tif (!(value instanceof moment)) {\n\t\tvalue = moment(value);\n\t}\n\n\tif (value.isValid()) {\n\t\treturn value;\n\t}\n\n\t// Labels are in an incompatible moment format and no `parser` has been provided.\n\t// The user might still use the deprecated `format` option to convert his inputs.\n\tif (typeof format === 'function') {\n\t\treturn format(value);\n\t}\n\n\treturn value;\n}\n\nfunction parse(input, scale) {\n\tif (helpers.isNullOrUndef(input)) {\n\t\treturn null;\n\t}\n\n\tvar options = scale.options.time;\n\tvar value = momentify(scale.getRightValue(input), options);\n\tif (!value.isValid()) {\n\t\treturn null;\n\t}\n\n\tif (options.round) {\n\t\tvalue.startOf(options.round);\n\t}\n\n\treturn value.valueOf();\n}\n\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\nfunction determineStepSize(min, max, unit, capacity) {\n\tvar range = max - min;\n\tvar interval = INTERVALS[unit];\n\tvar milliseconds = interval.size;\n\tvar steps = interval.steps;\n\tvar i, ilen, factor;\n\n\tif (!steps) {\n\t\treturn Math.ceil(range / (capacity * milliseconds));\n\t}\n\n\tfor (i = 0, ilen = steps.length; i < ilen; ++i) {\n\t\tfactor = steps[i];\n\t\tif (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn factor;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n\tvar ilen = UNITS.length;\n\tvar i, interval, factor;\n\n\tfor (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n\t\tinterval = INTERVALS[UNITS[i]];\n\t\tfactor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n\t\tif (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n\n\treturn UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n */\nfunction determineUnitForFormatting(ticks, minUnit, min, max) {\n\tvar duration = moment.duration(moment(max).diff(moment(min)));\n\tvar ilen = UNITS.length;\n\tvar i, unit;\n\n\tfor (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n\t\tunit = UNITS[i];\n\t\tif (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {\n\t\t\treturn unit;\n\t\t}\n\t}\n\n\treturn UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n\tfor (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n\t\tif (INTERVALS[UNITS[i]].common) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n}\n\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\nfunction generate(min, max, capacity, options) {\n\tvar timeOpts = options.time;\n\tvar minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n\tvar major = determineMajorUnit(minor);\n\tvar stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n\tvar weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n\tvar majorTicksEnabled = options.ticks.major.enabled;\n\tvar interval = INTERVALS[minor];\n\tvar first = moment(min);\n\tvar last = moment(max);\n\tvar ticks = [];\n\tvar time;\n\n\tif (!stepSize) {\n\t\tstepSize = determineStepSize(min, max, minor, capacity);\n\t}\n\n\t// For 'week' unit, handle the first day of week option\n\tif (weekday) {\n\t\tfirst = first.isoWeekday(weekday);\n\t\tlast = last.isoWeekday(weekday);\n\t}\n\n\t// Align first/last ticks on unit\n\tfirst = first.startOf(weekday ? 'day' : minor);\n\tlast = last.startOf(weekday ? 'day' : minor);\n\n\t// Make sure that the last tick include max\n\tif (last < max) {\n\t\tlast.add(1, minor);\n\t}\n\n\ttime = moment(first);\n\n\tif (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n\t\t// Align the first tick on the previous `minor` unit aligned on the `major` unit:\n\t\t// we first aligned time on the previous `major` unit then add the number of full\n\t\t// stepSize there is between first and the previous major time.\n\t\ttime.startOf(major);\n\t\ttime.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n\t}\n\n\tfor (; time < last; time.add(stepSize, minor)) {\n\t\tticks.push(+time);\n\t}\n\n\tticks.push(+time);\n\n\treturn ticks;\n}\n\n/**\n * Returns the right and left offsets from edges in the form of {left, right}.\n * Offsets are added when the `offset` option is true.\n */\nfunction computeOffsets(table, ticks, min, max, options) {\n\tvar left = 0;\n\tvar right = 0;\n\tvar upper, lower;\n\n\tif (options.offset && ticks.length) {\n\t\tif (!options.time.min) {\n\t\t\tupper = ticks.length > 1 ? ticks[1] : max;\n\t\t\tlower = ticks[0];\n\t\t\tleft = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t\tif (!options.time.max) {\n\t\t\tupper = ticks[ticks.length - 1];\n\t\t\tlower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\n\t\t\tright = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t}\n\n\treturn {left: left, right: right};\n}\n\nfunction ticksFromTimestamps(values, majorUnit) {\n\tvar ticks = [];\n\tvar i, ilen, value, major;\n\n\tfor (i = 0, ilen = values.length; i < ilen; ++i) {\n\t\tvalue = values[i];\n\t\tmajor = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\n\n\t\tticks.push({\n\t\t\tvalue: value,\n\t\t\tmajor: major\n\t\t});\n\t}\n\n\treturn ticks;\n}\n\nfunction determineLabelFormat(data, timeOpts) {\n\tvar i, momentDate, hasTime;\n\tvar ilen = data.length;\n\n\t// find the label with the most parts (milliseconds, minutes, etc.)\n\t// format all labels with the same level of detail as the most specific label\n\tfor (i = 0; i < ilen; i++) {\n\t\tmomentDate = momentify(data[i], timeOpts);\n\t\tif (momentDate.millisecond() !== 0) {\n\t\t\treturn 'MMM D, YYYY h:mm:ss.SSS a';\n\t\t}\n\t\tif (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {\n\t\t\thasTime = true;\n\t\t}\n\t}\n\tif (hasTime) {\n\t\treturn 'MMM D, YYYY h:mm:ss a';\n\t}\n\treturn 'MMM D, YYYY';\n}\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'bottom',\n\n\t\t/**\n\t\t * Data distribution along the scale:\n\t\t * - 'linear': data are spread according to their time (distances can vary),\n\t\t * - 'series': data are spread at the same distance from each other.\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t * @since 2.7.0\n\t\t */\n\t\tdistribution: 'linear',\n\n\t\t/**\n\t\t * Scale boundary strategy (bypassed by min/max time options)\n\t\t * - `data`: make sure data are fully visible, ticks outside are removed\n\t\t * - `ticks`: make sure ticks are fully visible, data outside are truncated\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4556\n\t\t * @since 2.7.0\n\t\t */\n\t\tbounds: 'data',\n\n\t\ttime: {\n\t\t\tparser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n\t\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\t\tround: false, // none, or override with week, month, year, etc.\n\t\t\tdisplayFormat: false, // DEPRECATED\n\t\t\tisoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n\t\t\tminUnit: 'millisecond',\n\n\t\t\t// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n\t\t\tdisplayFormats: {\n\t\t\t\tmillisecond: 'h:mm:ss.SSS a', // 11:20:01.123 AM,\n\t\t\t\tsecond: 'h:mm:ss a', // 11:20:01 AM\n\t\t\t\tminute: 'h:mm a', // 11:20 AM\n\t\t\t\thour: 'hA', // 5PM\n\t\t\t\tday: 'MMM D', // Sep 4\n\t\t\t\tweek: 'll', // Week 46, or maybe \"[W]WW - YYYY\" ?\n\t\t\t\tmonth: 'MMM YYYY', // Sept 2015\n\t\t\t\tquarter: '[Q]Q - YYYY', // Q3\n\t\t\t\tyear: 'YYYY' // 2015\n\t\t\t},\n\t\t},\n\t\tticks: {\n\t\t\tautoSkip: false,\n\n\t\t\t/**\n\t\t\t * Ticks generation input values:\n\t\t\t * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n\t\t\t * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n\t\t\t * - 'labels': generates ticks from user given `data.labels` values ONLY.\n\t\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t\t * @since 2.7.0\n\t\t\t */\n\t\t\tsource: 'auto',\n\n\t\t\tmajor: {\n\t\t\t\tenabled: false\n\t\t\t}\n\t\t}\n\t};\n\n\tvar TimeScale = Chart.Scale.extend({\n\t\tinitialize: function() {\n\t\t\tif (!moment) {\n\t\t\t\tthrow new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n\t\t\t}\n\n\t\t\tthis.mergeTicksOptions();\n\n\t\t\tChart.Scale.prototype.initialize.call(this);\n\t\t},\n\n\t\tupdate: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\n\t\t\t// DEPRECATIONS: output a message only one time per update\n\t\t\tif (options.time && options.time.format) {\n\t\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser.');\n\t\t\t}\n\n\t\t\treturn Chart.Scale.prototype.update.apply(me, arguments);\n\t\t},\n\n\t\t/**\n\t\t * Allows data to be referenced via 't' attribute\n\t\t */\n\t\tgetRightValue: function(rawValue) {\n\t\t\tif (rawValue && rawValue.t !== undefined) {\n\t\t\t\trawValue = rawValue.t;\n\t\t\t}\n\t\t\treturn Chart.Scale.prototype.getRightValue.call(this, rawValue);\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar unit = timeOpts.unit || 'day';\n\t\t\tvar min = MAX_INTEGER;\n\t\t\tvar max = MIN_INTEGER;\n\t\t\tvar timestamps = [];\n\t\t\tvar datasets = [];\n\t\t\tvar labels = [];\n\t\t\tvar i, j, ilen, jlen, data, timestamp;\n\n\t\t\t// Convert labels to timestamps\n\t\t\tfor (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(parse(chart.data.labels[i], me));\n\t\t\t}\n\n\t\t\t// Convert data to timestamps\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\t\tdata = chart.data.datasets[i].data;\n\n\t\t\t\t\t// Let's consider that all data have the same format.\n\t\t\t\t\tif (helpers.isObject(data[0])) {\n\t\t\t\t\t\tdatasets[i] = [];\n\n\t\t\t\t\t\tfor (j = 0, jlen = data.length; j < jlen; ++j) {\n\t\t\t\t\t\t\ttimestamp = parse(data[j], me);\n\t\t\t\t\t\t\ttimestamps.push(timestamp);\n\t\t\t\t\t\t\tdatasets[i][j] = timestamp;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttimestamps.push.apply(timestamps, labels);\n\t\t\t\t\t\tdatasets[i] = labels.slice(0);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdatasets[i] = [];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (labels.length) {\n\t\t\t\t// Sort labels **after** data have been converted\n\t\t\t\tlabels = arrayUnique(labels).sort(sorter);\n\t\t\t\tmin = Math.min(min, labels[0]);\n\t\t\t\tmax = Math.max(max, labels[labels.length - 1]);\n\t\t\t}\n\n\t\t\tif (timestamps.length) {\n\t\t\t\ttimestamps = arrayUnique(timestamps).sort(sorter);\n\t\t\t\tmin = Math.min(min, timestamps[0]);\n\t\t\t\tmax = Math.max(max, timestamps[timestamps.length - 1]);\n\t\t\t}\n\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// In case there is no valid min/max, set limits based on unit time option\n\t\t\tmin = min === MAX_INTEGER ? +moment().startOf(unit) : min;\n\t\t\tmax = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max;\n\n\t\t\t// Make sure that max is strictly higher than min (required by the lookup table)\n\t\t\tme.min = Math.min(min, max);\n\t\t\tme.max = Math.max(min + 1, max);\n\n\t\t\t// PRIVATE\n\t\t\tme._horizontal = me.isHorizontal();\n\t\t\tme._table = [];\n\t\t\tme._timestamps = {\n\t\t\t\tdata: timestamps,\n\t\t\t\tdatasets: datasets,\n\t\t\t\tlabels: labels\n\t\t\t};\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\t\t\tvar options = me.options;\n\t\t\tvar timeOpts = options.time;\n\t\t\tvar timestamps = [];\n\t\t\tvar ticks = [];\n\t\t\tvar i, ilen, timestamp;\n\n\t\t\tswitch (options.ticks.source) {\n\t\t\tcase 'data':\n\t\t\t\ttimestamps = me._timestamps.data;\n\t\t\t\tbreak;\n\t\t\tcase 'labels':\n\t\t\t\ttimestamps = me._timestamps.labels;\n\t\t\t\tbreak;\n\t\t\tcase 'auto':\n\t\t\tdefault:\n\t\t\t\ttimestamps = generate(min, max, me.getLabelCapacity(min), options);\n\t\t\t}\n\n\t\t\tif (options.bounds === 'ticks' && timestamps.length) {\n\t\t\t\tmin = timestamps[0];\n\t\t\t\tmax = timestamps[timestamps.length - 1];\n\t\t\t}\n\n\t\t\t// Enforce limits with user min/max options\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// Remove ticks outside the min/max range\n\t\t\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\t\t\ttimestamp = timestamps[i];\n\t\t\t\tif (timestamp >= min && timestamp <= max) {\n\t\t\t\t\tticks.push(timestamp);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.min = min;\n\t\t\tme.max = max;\n\n\t\t\t// PRIVATE\n\t\t\tme._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);\n\t\t\tme._majorUnit = determineMajorUnit(me._unit);\n\t\t\tme._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n\t\t\tme._offsets = computeOffsets(me._table, ticks, min, max, options);\n\t\t\tme._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);\n\n\t\t\treturn ticksFromTimestamps(ticks, me._majorUnit);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar label = data.labels && index < data.labels.length ? data.labels[index] : '';\n\t\t\tvar value = data.datasets[datasetIndex].data[index];\n\n\t\t\tif (helpers.isObject(value)) {\n\t\t\t\tlabel = me.getRightValue(value);\n\t\t\t}\n\t\t\tif (timeOpts.tooltipFormat) {\n\t\t\t\treturn momentify(label, timeOpts).format(timeOpts.tooltipFormat);\n\t\t\t}\n\t\t\tif (typeof label === 'string') {\n\t\t\t\treturn label;\n\t\t\t}\n\n\t\t\treturn momentify(label, timeOpts).format(me._labelFormat);\n\t\t},\n\n\t\t/**\n\t\t * Function to format an individual tick mark\n\t\t * @private\n\t\t */\n\t\ttickFormatFunction: function(tick, index, ticks, formatOverride) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar time = tick.valueOf();\n\t\t\tvar formats = options.time.displayFormats;\n\t\t\tvar minorFormat = formats[me._unit];\n\t\t\tvar majorUnit = me._majorUnit;\n\t\t\tvar majorFormat = formats[majorUnit];\n\t\t\tvar majorTime = tick.clone().startOf(majorUnit).valueOf();\n\t\t\tvar majorTickOpts = options.ticks.major;\n\t\t\tvar major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n\t\t\tvar label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);\n\t\t\tvar tickOpts = major ? majorTickOpts : options.ticks.minor;\n\t\t\tvar formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n\n\t\t\treturn formatter ? formatter(label, index, ticks) : label;\n\t\t},\n\n\t\tconvertTicksToLabels: function(ticks) {\n\t\t\tvar labels = [];\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\n\t\t\t}\n\n\t\t\treturn labels;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetPixelForOffset: function(time) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = interpolate(me._table, 'time', time, 'pos');\n\n\t\t\treturn start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\n\t\t},\n\n\t\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar time = null;\n\n\t\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\t\ttime = me._timestamps.datasets[datasetIndex][index];\n\t\t\t}\n\n\t\t\tif (time === null) {\n\t\t\t\ttime = parse(value, me);\n\t\t\t}\n\n\t\t\tif (time !== null) {\n\t\t\t\treturn me.getPixelForOffset(time);\n\t\t\t}\n\t\t},\n\n\t\tgetPixelForTick: function(index) {\n\t\t\tvar ticks = this.getTicks();\n\t\t\treturn index >= 0 && index < ticks.length ?\n\t\t\t\tthis.getPixelForOffset(ticks[index].value) :\n\t\t\t\tnull;\n\t\t},\n\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\n\t\t\tvar time = interpolate(me._table, 'pos', pos, 'time');\n\n\t\t\treturn moment(time);\n\t\t},\n\n\t\t/**\n\t\t * Crude approximation of what the label width might be\n\t\t * @private\n\t\t */\n\t\tgetLabelWidth: function(label) {\n\t\t\tvar me = this;\n\t\t\tvar ticksOpts = me.options.ticks;\n\t\t\tvar tickLabelWidth = me.ctx.measureText(label).width;\n\t\t\tvar angle = helpers.toRadians(ticksOpts.maxRotation);\n\t\t\tvar cosRotation = Math.cos(angle);\n\t\t\tvar sinRotation = Math.sin(angle);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n\n\t\t\treturn (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetLabelCapacity: function(exampleTime) {\n\t\t\tvar me = this;\n\n\t\t\tvar formatOverride = me.options.time.displayFormats.millisecond;\t// Pick the longest format for guestimation\n\n\t\t\tvar exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);\n\t\t\tvar tickLabelWidth = me.getLabelWidth(exampleLabel);\n\t\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\n\n\t\t\tvar capacity = Math.floor(innerWidth / tickLabelWidth);\n\t\t\treturn capacity > 0 ? capacity : 1;\n\t\t}\n\t});\n\n\tChart.scaleService.registerScaleType('time', TimeScale, defaultConfig);\n};\n","'use strict';\n\nmodule.exports = require('./helpers.core');\nmodule.exports.easing = require('./helpers.easing');\nmodule.exports.canvas = require('./helpers.canvas');\nmodule.exports.options = require('./helpers.options');\n","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * @namespace Chart.helpers.canvas\n */\nvar exports = module.exports = {\n\t/**\n\t * Clears the entire canvas associated to the given `chart`.\n\t * @param {Chart} chart - The chart for which to clear the canvas.\n\t */\n\tclear: function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t},\n\n\t/**\n\t * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n\t * given size (width, height) and the same `radius` for all corners.\n\t * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n\t * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\n\t * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\n\t * @param {Number} width - The rectangle's width.\n\t * @param {Number} height - The rectangle's height.\n\t * @param {Number} radius - The rounded amount (in pixels) for the four corners.\n\t * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n\t */\n\troundedRect: function(ctx, x, y, width, height, radius) {\n\t\tif (radius) {\n\t\t\tvar rx = Math.min(radius, width / 2);\n\t\t\tvar ry = Math.min(radius, height / 2);\n\n\t\t\tctx.moveTo(x + rx, y);\n\t\t\tctx.lineTo(x + width - rx, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + ry);\n\t\t\tctx.lineTo(x + width, y + height - ry);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - rx, y + height);\n\t\t\tctx.lineTo(x + rx, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - ry);\n\t\t\tctx.lineTo(x, y + ry);\n\t\t\tctx.quadraticCurveTo(x, y, x + rx, y);\n\t\t} else {\n\t\t\tctx.rect(x, y, width, height);\n\t\t}\n\t},\n\n\tdrawPoint: function(ctx, style, radius, x, y) {\n\t\tvar type, edgeLength, xOffset, yOffset, height, size;\n\n\t\tif (style && typeof style === 'object') {\n\t\t\ttype = style.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (style) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(x, y, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tctx.beginPath();\n\t\t\tedgeLength = 3 * radius / Math.sqrt(3);\n\t\t\theight = edgeLength * Math.sqrt(3) / 2;\n\t\t\tctx.moveTo(x - edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x + edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x, y - 2 * height / 3);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.fillRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tbreak;\n\t\tcase 'rectRounded':\n\t\t\tvar offset = radius / Math.SQRT2;\n\t\t\tvar leftX = x - offset;\n\t\t\tvar topY = y - offset;\n\t\t\tvar sideSize = Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tthis.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius / 2);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'rectRot':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - size, y);\n\t\t\tctx.lineTo(x, y + size);\n\t\t\tctx.lineTo(x + size, y);\n\t\t\tctx.lineTo(x, y - size);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'cross':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\tctx.beginPath();\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.stroke();\n\t},\n\n\tclipArea: function(ctx, area) {\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n\t\tctx.clip();\n\t},\n\n\tunclipArea: function(ctx) {\n\t\tctx.restore();\n\t},\n\n\tlineTo: function(ctx, previous, target, flip) {\n\t\tif (target.steppedLine) {\n\t\t\tif ((target.steppedLine === 'after' && !flip) || (target.steppedLine !== 'after' && flip)) {\n\t\t\t\tctx.lineTo(previous.x, target.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(target.x, previous.y);\n\t\t\t}\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target.tension) {\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tctx.bezierCurveTo(\n\t\t\tflip ? previous.controlPointPreviousX : previous.controlPointNextX,\n\t\t\tflip ? previous.controlPointPreviousY : previous.controlPointNextY,\n\t\t\tflip ? target.controlPointNextX : target.controlPointPreviousX,\n\t\t\tflip ? target.controlPointNextY : target.controlPointPreviousY,\n\t\t\ttarget.x,\n\t\t\ttarget.y);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.clear = exports.clear;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.drawRoundedRectangle = function(ctx) {\n\tctx.beginPath();\n\texports.roundedRect.apply(exports, arguments);\n\tctx.closePath();\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\tChart.Scatter = function(context, config) {\n\t\tconfig.type = 'scatter';\n\t\treturn new Chart(context, config);\n\t};\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Doughnut = function(context, config) {\n\t\tconfig.type = 'doughnut';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\n/**\n * @namespace Chart.helpers\n */\nvar helpers = {\n\t/**\n\t * An empty function that can be used, for example, for optional callback.\n\t */\n\tnoop: function() {},\n\n\t/**\n\t * Returns a unique id, sequentially generated from a global variable.\n\t * @returns {Number}\n\t * @function\n\t */\n\tuid: (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}()),\n\n\t/**\n\t * Returns true if `value` is neither null nor undefined, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisNullOrUndef: function(value) {\n\t\treturn value === null || typeof value === 'undefined';\n\t},\n\n\t/**\n\t * Returns true if `value` is an array, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @function\n\t */\n\tisArray: Array.isArray ? Array.isArray : function(value) {\n\t\treturn Object.prototype.toString.call(value) === '[object Array]';\n\t},\n\n\t/**\n\t * Returns true if `value` is an object (excluding null), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisObject: function(value) {\n\t\treturn value !== null && Object.prototype.toString.call(value) === '[object Object]';\n\t},\n\n\t/**\n\t * Returns `value` if defined, else returns `defaultValue`.\n\t * @param {*} value - The value to return if defined.\n\t * @param {*} defaultValue - The value to return if `value` is undefined.\n\t * @returns {*}\n\t */\n\tvalueOrDefault: function(value, defaultValue) {\n\t\treturn typeof value === 'undefined' ? defaultValue : value;\n\t},\n\n\t/**\n\t * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n\t * @param {Array} value - The array to lookup for value at `index`.\n\t * @param {Number} index - The index in `value` to lookup for value.\n\t * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n\t * @returns {*}\n\t */\n\tvalueAtIndexOrDefault: function(value, index, defaultValue) {\n\t\treturn helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n\t},\n\n\t/**\n\t * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n\t * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n\t * @param {Function} fn - The function to call.\n\t * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @returns {*}\n\t */\n\tcallback: function(fn, args, thisArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\treturn fn.apply(thisArg, args);\n\t\t}\n\t},\n\n\t/**\n\t * Note(SB) for performance sake, this method should only be used when loopable type\n\t * is unknown or in none intensive code (not called often and small loopable). Else\n\t * it's preferable to use a regular for() loop and save extra function calls.\n\t * @param {Object|Array} loopable - The object or array to be iterated.\n\t * @param {Function} fn - The function to call for each item.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n\t */\n\teach: function(loopable, fn, thisArg, reverse) {\n\t\tvar i, len, keys;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (helpers.isObject(loopable)) {\n\t\t\tkeys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tfn.call(thisArg, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n\t * @see http://stackoverflow.com/a/14853974\n\t * @param {Array} a0 - The array to compare\n\t * @param {Array} a1 - The array to compare\n\t * @returns {Boolean}\n\t */\n\tarrayEquals: function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen = a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns a deep copy of `source` without keeping references on objects and arrays.\n\t * @param {*} source - The value to clone.\n\t * @returns {*}\n\t */\n\tclone: function(source) {\n\t\tif (helpers.isArray(source)) {\n\t\t\treturn source.map(helpers.clone);\n\t\t}\n\n\t\tif (helpers.isObject(source)) {\n\t\t\tvar target = {};\n\t\t\tvar keys = Object.keys(source);\n\t\t\tvar klen = keys.length;\n\t\t\tvar k = 0;\n\n\t\t\tfor (; k < klen; ++k) {\n\t\t\t\ttarget[keys[k]] = helpers.clone(source[keys[k]]);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\treturn source;\n\t},\n\n\t/**\n\t * The default merger when Chart.helpers.merge is called without merger option.\n\t * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n\t * @private\n\t */\n\t_merger: function(key, target, source, options) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.merge(tval, sval, options);\n\t\t} else {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Merges source[key] in target[key] only if target[key] is undefined.\n\t * @private\n\t */\n\t_mergerIf: function(key, target, source) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.mergeIf(tval, sval);\n\t\t} else if (!target.hasOwnProperty(key)) {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` with the given `options`.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @param {Object} [options] - Merging options:\n\t * @param {Function} [options.merger] - The merge method (key, target, source, options)\n\t * @returns {Object} The `target` object.\n\t */\n\tmerge: function(target, source, options) {\n\t\tvar sources = helpers.isArray(source) ? source : [source];\n\t\tvar ilen = sources.length;\n\t\tvar merge, i, keys, klen, k;\n\n\t\tif (!helpers.isObject(target)) {\n\t\t\treturn target;\n\t\t}\n\n\t\toptions = options || {};\n\t\tmerge = options.merger || helpers._merger;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!helpers.isObject(source)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tkeys = Object.keys(source);\n\t\t\tfor (k = 0, klen = keys.length; k < klen; ++k) {\n\t\t\t\tmerge(keys[k], target, source, options);\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @returns {Object} The `target` object.\n\t */\n\tmergeIf: function(target, source) {\n\t\treturn helpers.merge(target, source, {merger: helpers._mergerIf});\n\t},\n\n\t/**\n\t * Applies the contents of two or more objects together into the first object.\n\t * @param {Object} target - The target object in which all objects are merged into.\n\t * @param {Object} arg1 - Object containing additional properties to merge in target.\n\t * @param {Object} argN - Additional objects containing properties to merge in target.\n\t * @returns {Object} The `target` object.\n\t */\n\textend: function(target) {\n\t\tvar setFn = function(value, key) {\n\t\t\ttarget[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn target;\n\t},\n\n\t/**\n\t * Basic javascript inheritance based on the model created in Backbone.js\n\t */\n\tinherits: function(extensions) {\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\t\treturn ChartElement;\n\t}\n};\n\nmodule.exports = helpers;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nhelpers.callCallback = helpers.callback;\n\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.indexOf = function(array, item, fromIndex) {\n\treturn Array.prototype.indexOf.call(array, item, fromIndex);\n};\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\nvar globalDefaults = defaults.global;\n\ndefaults._set('global', {\n\telements: {\n\t\tline: {\n\t\t\ttension: 0.4,\n\t\t\tbackgroundColor: globalDefaults.defaultColor,\n\t\t\tborderWidth: 3,\n\t\t\tborderColor: globalDefaults.defaultColor,\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tcapBezierPoints: true,\n\t\t\tfill: true, // do we fill in the area between the line and its base axis\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar vm = me._view;\n\t\tvar ctx = me._chart.ctx;\n\t\tvar spanGaps = vm.spanGaps;\n\t\tvar points = me._children.slice(); // clone array\n\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\tvar lastDrawnIndex = -1;\n\t\tvar index, current, previous, currentVM;\n\n\t\t// If we are looping, adding the first point again\n\t\tif (me._loop && points.length) {\n\t\t\tpoints.push(points[0]);\n\t\t}\n\n\t\tctx.save();\n\n\t\t// Stroke Line Options\n\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t// IE 9 and 10 do not support line dash\n\t\tif (ctx.setLineDash) {\n\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t}\n\n\t\tctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\tctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t// Stroke Line\n\t\tctx.beginPath();\n\t\tlastDrawnIndex = -1;\n\n\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\tcurrent = points[index];\n\t\t\tprevious = helpers.previousItem(points, index);\n\t\t\tcurrentVM = current._view;\n\n\t\t\t// First point moves to it's starting position no matter what\n\t\t\tif (index === 0) {\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\thelpers.canvas.lineTo(ctx, previous._view, current._view);\n\t\t\t\t\t}\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\t\tctx.restore();\n\t}\n});\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tplugins: {}\n});\n\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\nmodule.exports = {\n\t/**\n\t * Globally registered plugins.\n\t * @private\n\t */\n\t_plugins: [],\n\n\t/**\n\t * This identifier is used to invalidate the descriptors cache attached to each chart\n\t * when a global plugin is registered or unregistered. In this case, the cache ID is\n\t * incremented and descriptors are regenerated during following API calls.\n\t * @private\n\t */\n\t_cacheId: 0,\n\n\t/**\n\t * Registers the given plugin(s) if not already registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\tp.push(plugin);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Unregisters the given plugin(s) only if registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tunregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tvar idx = p.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\tp.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Remove all registered plugins.\n\t * @since 2.1.5\n\t */\n\tclear: function() {\n\t\tthis._plugins = [];\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Returns the number of registered plugins?\n\t * @returns {Number}\n\t * @since 2.1.5\n\t */\n\tcount: function() {\n\t\treturn this._plugins.length;\n\t},\n\n\t/**\n\t * Returns all registered plugin instances.\n\t * @returns {Array} array of plugin objects.\n\t * @since 2.1.5\n\t */\n\tgetAll: function() {\n\t\treturn this._plugins;\n\t},\n\n\t/**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Object} chart - The chart instance for which plugins should be called.\n\t * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Array} [args] - Extra arguments to apply to the hook call.\n\t * @returns {Boolean} false if any of the plugins return false, else returns true.\n\t */\n\tnotify: function(chart, hook, args) {\n\t\tvar descriptors = this.descriptors(chart);\n\t\tvar ilen = descriptors.length;\n\t\tvar i, descriptor, plugin, params, method;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tdescriptor = descriptors[i];\n\t\t\tplugin = descriptor.plugin;\n\t\t\tmethod = plugin[hook];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\tparams = [chart].concat(args || []);\n\t\t\t\tparams.push(descriptor.options);\n\t\t\t\tif (method.apply(plugin, params) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns descriptors of enabled plugins for the given chart.\n\t * @returns {Array} [{ plugin, options }]\n\t * @private\n\t */\n\tdescriptors: function(chart) {\n\t\tvar cache = chart.$plugins || (chart.$plugins = {});\n\t\tif (cache.id === this._cacheId) {\n\t\t\treturn cache.descriptors;\n\t\t}\n\n\t\tvar plugins = [];\n\t\tvar descriptors = [];\n\t\tvar config = (chart && chart.config) || {};\n\t\tvar options = (config.options && config.options.plugins) || {};\n\n\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\n\t\t\tvar idx = plugins.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar id = plugin.id;\n\t\t\tvar opts = options[id];\n\t\t\tif (opts === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (opts === true) {\n\t\t\t\topts = helpers.clone(defaults.global.plugins[id]);\n\t\t\t}\n\n\t\t\tplugins.push(plugin);\n\t\t\tdescriptors.push({\n\t\t\t\tplugin: plugin,\n\t\t\t\toptions: opts || {}\n\t\t\t});\n\t\t});\n\n\t\tcache.descriptors = descriptors;\n\t\tcache.id = this._cacheId;\n\t\treturn descriptors;\n\t},\n\n\t/**\n\t * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n\t * but in some cases, this reference can be changed by the user when updating options.\n\t * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t * @private\n\t */\n\t_invalidate: function(chart) {\n\t\tdelete chart.$plugins;\n\t}\n};\n\n/**\n * Plugin extension hooks.\n * @interface IPlugin\n * @since 2.1.0\n */\n/**\n * @method IPlugin#beforeInit\n * @desc Called before initializing `chart`.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterInit\n * @desc Called after `chart` has been initialized and before the first update.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeUpdate\n * @desc Called before updating `chart`. If any plugin returns `false`, the update\n * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart update.\n */\n/**\n * @method IPlugin#afterUpdate\n * @desc Called after `chart` has been updated and before rendering. Note that this\n * hook will not be called if the chart update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsUpdate\n * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n * the datasets update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} false to cancel the datasets update.\n * @since version 2.1.5\n*/\n/**\n * @method IPlugin#afterDatasetsUpdate\n * @desc Called after the `chart` datasets have been updated. Note that this hook\n * will not be called if the datasets update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @since version 2.1.5\n */\n/**\n * @method IPlugin#beforeDatasetUpdate\n * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\n * returns `false`, the datasets update is cancelled until another `update` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetUpdate\n * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\n * that this hook will not be called if the datasets update has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeLayout\n * @desc Called before laying out `chart`. If any plugin returns `false`,\n * the layout update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart layout.\n */\n/**\n * @method IPlugin#afterLayout\n * @desc Called after the `chart` has been layed out. Note that this hook will not\n * be called if the layout update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeRender\n * @desc Called before rendering `chart`. If any plugin returns `false`,\n * the rendering is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart rendering.\n */\n/**\n * @method IPlugin#afterRender\n * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n * that this hook will not be called if the rendering has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDraw\n * @desc Called before drawing `chart` at every animation frame specified by the given\n * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n * another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart drawing.\n */\n/**\n * @method IPlugin#afterDraw\n * @desc Called after the `chart` has been drawn for the specific easing value. Note\n * that this hook will not be called if the drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsDraw\n * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n * the datasets drawing is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetsDraw\n * @desc Called after the `chart` datasets have been drawn. Note that this hook\n * will not be called if the datasets drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetDraw\n * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\n * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\n * is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetDraw\n * @desc Called after the `chart` datasets at the given `args.index` have been drawn\n * (datasets are drawn in the reverse order). Note that this hook will not be called\n * if the datasets drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeTooltipDraw\n * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\n * the tooltip drawing is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart tooltip drawing.\n */\n/**\n * @method IPlugin#afterTooltipDraw\n * @desc Called after drawing the `tooltip`. Note that this hook will not\n * be called if the tooltip drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeEvent\n * @desc Called before processing the specified `event`. If any plugin returns `false`,\n * the event will be discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterEvent\n * @desc Called after the `event` has been consumed. Note that this hook\n * will not be called if the `event` has been previously discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#resize\n * @desc Called after the chart as been resized.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#destroy\n * @desc Called after the chart as been destroyed.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n","/**\n * @namespace Chart\n */\nvar Chart = require('./core/core')();\n\nChart.helpers = require('./helpers/index');\n\n// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\nrequire('./core/core.helpers')(Chart);\n\nChart.defaults = require('./core/core.defaults');\nChart.Element = require('./core/core.element');\nChart.elements = require('./elements/index');\nChart.Interaction = require('./core/core.interaction');\nChart.layouts = require('./core/core.layouts');\nChart.platform = require('./platforms/platform');\nChart.plugins = require('./core/core.plugins');\nChart.Ticks = require('./core/core.ticks');\n\nrequire('./core/core.animation')(Chart);\nrequire('./core/core.controller')(Chart);\nrequire('./core/core.datasetController')(Chart);\nrequire('./core/core.scaleService')(Chart);\nrequire('./core/core.scale')(Chart);\nrequire('./core/core.tooltip')(Chart);\n\nrequire('./scales/scale.linearbase')(Chart);\nrequire('./scales/scale.category')(Chart);\nrequire('./scales/scale.linear')(Chart);\nrequire('./scales/scale.logarithmic')(Chart);\nrequire('./scales/scale.radialLinear')(Chart);\nrequire('./scales/scale.time')(Chart);\n\n// Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\nrequire('./controllers/controller.bar')(Chart);\nrequire('./controllers/controller.bubble')(Chart);\nrequire('./controllers/controller.doughnut')(Chart);\nrequire('./controllers/controller.line')(Chart);\nrequire('./controllers/controller.polarArea')(Chart);\nrequire('./controllers/controller.radar')(Chart);\nrequire('./controllers/controller.scatter')(Chart);\n\nrequire('./charts/Chart.Bar')(Chart);\nrequire('./charts/Chart.Bubble')(Chart);\nrequire('./charts/Chart.Doughnut')(Chart);\nrequire('./charts/Chart.Line')(Chart);\nrequire('./charts/Chart.PolarArea')(Chart);\nrequire('./charts/Chart.Radar')(Chart);\nrequire('./charts/Chart.Scatter')(Chart);\n\n// Loading built-it plugins\nvar plugins = require('./plugins');\nfor (var k in plugins) {\n\tif (plugins.hasOwnProperty(k)) {\n\t\tChart.plugins.register(plugins[k]);\n\t}\n}\n\nChart.platform.initialize();\n\nmodule.exports = Chart;\nif (typeof window !== 'undefined') {\n\twindow.Chart = Chart;\n}\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Legend = plugins.legend._element;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Title = plugins.title._element;\n\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.pluginService = Chart.plugins;\n\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\nChart.PluginBase = Chart.Element.extend({});\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nChart.canvasHelpers = Chart.helpers.canvas;\n\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nChart.layoutService = Chart.layouts;\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('doughnut', {\n\tanimation: {\n\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate: true,\n\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale: false\n\t},\n\thover: {\n\t\tmode: 'single'\n\t},\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t// toggle visibility of index if exists\n\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// The percentage of the chart that we cut out of the middle.\n\tcutoutPercentage: 50,\n\n\t// The rotation of the chart, where the first data arc begins.\n\trotation: Math.PI * -0.5,\n\n\t// The total circumference of the chart.\n\tcircumference: Math.PI * 2.0,\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\tif (helpers.isArray(dataLabel)) {\n\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t} else {\n\t\t\t\t\tdataLabel += value;\n\t\t\t\t}\n\n\t\t\t\treturn dataLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\ndefaults._set('pie', {\n\tcutoutPercentage: 0\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\t\tgetRingIndex: function(datasetIndex) {\n\t\t\tvar ringIndex = 0;\n\n\t\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t\t++ringIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ringIndex;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n\t\t\tvar availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n\t\t\tvar minSize = Math.min(availableWidth, availableHeight);\n\t\t\tvar offset = {x: 0, y: 0};\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar cutoutPercentage = opts.cutoutPercentage;\n\t\t\tvar circumference = opts.circumference;\n\n\t\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\t\tif (circumference < Math.PI * 2.0) {\n\t\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\t\tvar endAngle = startAngle + circumference;\n\t\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\t\tvar contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t\t}\n\n\t\t\tchart.borderWidth = me.getMaxBorderWidth(meta.data);\n\t\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\t\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\t\tmeta.total = me.calculateTotal();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\n\t\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\n\t\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\n\t\t\tvar startAngle = opts.rotation; // non reset case handled later\n\t\t\tvar endAngle = opts.rotation; // non reset case handled later\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n\t\t\tvar innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n\t\t\tvar outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\t\tstartAngle: startAngle,\n\t\t\t\t\tendAngle: endAngle,\n\t\t\t\t\tcircumference: circumference,\n\t\t\t\t\touterRadius: outerRadius,\n\t\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\t\tlabel: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar model = arc._model;\n\t\t\t// Resets the visual styles\n\t\t\tthis.removeHoverStyle(arc);\n\n\t\t\t// Set correct angles if not resetting\n\t\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t\t} else {\n\t\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t\t}\n\n\t\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t\t}\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcalculateTotal: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar total = 0;\n\t\t\tvar value;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tvalue = dataset.data[index];\n\t\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/* if (total === 0) {\n\t\t\t\ttotal = NaN;\n\t\t\t}*/\n\n\t\t\treturn total;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar total = this.getMeta().total;\n\t\t\tif (total > 0 && !isNaN(value)) {\n\t\t\t\treturn (Math.PI * 2.0) * (Math.abs(value) / total);\n\t\t\t}\n\t\t\treturn 0;\n\t\t},\n\n\t\t// gets the max border or hover width to properly scale pie charts\n\t\tgetMaxBorderWidth: function(arcs) {\n\t\t\tvar max = 0;\n\t\t\tvar index = this.index;\n\t\t\tvar length = arcs.length;\n\t\t\tvar borderWidth;\n\t\t\tvar hoverWidth;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tborderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n\t\t\t\thoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t\treturn max;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\telements: {\n\t\tarc: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: '#fff',\n\t\t\tborderWidth: 2\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tinLabelRange: function(mouseX) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t}\n\t\treturn false;\n\t},\n\n\tinRange: function(chartX, chartY) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(vm, {x: chartX, y: chartY});\n\t\t\tvar\tangle = pointRelativePosition.angle;\n\t\t\tvar distance = pointRelativePosition.distance;\n\n\t\t\t// Sanitise angle range\n\t\t\tvar startAngle = vm.startAngle;\n\t\t\tvar endAngle = vm.endAngle;\n\t\t\twhile (endAngle < startAngle) {\n\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle > endAngle) {\n\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle < startAngle) {\n\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t}\n\n\t\t\t// Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle);\n\t\t\tvar withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\treturn {\n\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\n\t\tvar rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\n\t\treturn {\n\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar sA = vm.startAngle;\n\t\tvar eA = vm.endAngle;\n\n\t\tctx.beginPath();\n\n\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\n\t\tctx.closePath();\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = vm.borderWidth;\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\n\t\tctx.fill();\n\t\tctx.lineJoin = 'bevel';\n\n\t\tif (vm.borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t}\n});\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.linear\n\t\t}\n\t};\n\n\tvar LinearScale = Chart.LinearScaleBase.extend({\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar DEFAULT_MIN = 0;\n\t\t\tvar DEFAULT_MAX = 1;\n\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// First Calculate the range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store these per type\n\t\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\t\tvar minVal = helpers.min(values);\n\t\t\t\t\tvar maxVal = helpers.max(values);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n\t\t\tme.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar maxTicks;\n\t\t\tvar me = this;\n\t\t\tvar tickOpts = me.options.ticks;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n\t\t\t} else {\n\t\t\t\t// The factor of 2 used to scale the font size has been experimentally determined.\n\t\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n\t\t\t}\n\n\t\t\treturn maxTicks;\n\t\t},\n\t\t// Called after the ticks are built. We need\n\t\thandleDirectionalChanges: function() {\n\t\t\tif (!this.isHorizontal()) {\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\t\tthis.ticks.reverse();\n\t\t\t}\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\t// Utils\n\t\tgetPixelForValue: function(value) {\n\t\t\t// This must be called after fit has been run so that\n\t\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\t\tvar me = this;\n\t\t\tvar start = me.start;\n\n\t\t\tvar rightValue = +me.getRightValue(value);\n\t\t\tvar pixel;\n\t\t\tvar range = me.end - start;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t\t} else {\n\t\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\t\treturn me.start + ((me.end - me.start) * offset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);\n\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\nvar Ticks = require('../core/core.ticks');\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t// Figure out what the max number of ticks we can support it is based on the size of\n\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t// the graph\n\tvar tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n\n\tvar endExp = Math.floor(helpers.log10(dataRange.max));\n\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n\tvar exp, significand;\n\n\tif (tickVal === 0) {\n\t\texp = Math.floor(helpers.log10(dataRange.minNotZero));\n\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\n\t\tticks.push(tickVal);\n\t\ttickVal = significand * Math.pow(10, exp);\n\t} else {\n\t\texp = Math.floor(helpers.log10(tickVal));\n\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\n\t}\n\tvar precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n\tdo {\n\t\tticks.push(tickVal);\n\n\t\t++significand;\n\t\tif (significand === 10) {\n\t\t\tsignificand = 1;\n\t\t\t++exp;\n\t\t\tprecision = exp >= 0 ? 1 : precision;\n\t\t}\n\n\t\ttickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n\tvar lastTick = valueOrDefault(generationOptions.max, tickVal);\n\tticks.push(lastTick);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\n\t\t// label settings\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.logarithmic\n\t\t}\n\t};\n\n\tvar LogarithmicScale = Chart.Scale.extend({\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// Calculate Range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\t\t\tme.minNotZero = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\t\tvaluesPerStack[key] = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar values = valuesPerStack[key];\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\t\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tif (valuesForType.length > 0) {\n\t\t\t\t\t\tvar minVal = helpers.min(valuesForType);\n\t\t\t\t\t\tvar maxVal = helpers.max(valuesForType);\n\t\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar DEFAULT_MIN = 1;\n\t\t\tvar DEFAULT_MAX = 10;\n\n\t\t\tme.min = valueOrDefault(tickOpts.min, me.min);\n\t\t\tme.max = valueOrDefault(tickOpts.max, me.max);\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n\t\t\t\t\tme.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n\t\t\t\t} else {\n\t\t\t\t\tme.min = DEFAULT_MIN;\n\t\t\t\t\tme.max = DEFAULT_MAX;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (me.min === null) {\n\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n\t\t\t}\n\t\t\tif (me.max === null) {\n\t\t\t\tme.max = me.min !== 0\n\t\t\t\t\t? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1)\n\t\t\t\t\t: DEFAULT_MAX;\n\t\t\t}\n\t\t\tif (me.minNotZero === null) {\n\t\t\t\tif (me.min > 0) {\n\t\t\t\t\tme.minNotZero = me.min;\n\t\t\t\t} else if (me.max < 1) {\n\t\t\t\t\tme.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n\t\t\t\t} else {\n\t\t\t\t\tme.minNotZero = DEFAULT_MIN;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar reverse = !me.isHorizontal();\n\n\t\t\tvar generationOptions = {\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(generationOptions, me);\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\treverse = !reverse;\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t\tif (reverse) {\n\t\t\t\tticks.reverse();\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tthis.tickValues = this.ticks.slice();\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(this);\n\t\t},\n\t\t// Get the correct tooltip label\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t\t},\n\t\t/**\n\t\t * Returns the value of the first tick.\n\t\t * @param {Number} value - The minimum not zero value.\n\t\t * @return {Number} The first tick value.\n\t\t * @private\n\t\t */\n\t\t_getFirstTickValue: function(value) {\n\t\t\tvar exp = Math.floor(helpers.log10(value));\n\t\t\tvar significand = Math.floor(value / Math.pow(10, exp));\n\n\t\t\treturn significand * Math.pow(10, exp);\n\t\t},\n\t\tgetPixelForValue: function(value) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar offset = 0;\n\t\t\tvar innerDimension, pixel, start, end, sign;\n\n\t\t\tvalue = +me.getRightValue(value);\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t\tsign = -1;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t\tsign = 1;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tpixel = reverse ? me.right : me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tsign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\t\t\t\tpixel = reverse ? me.top : me.bottom;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\toffset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tif (value !== 0) {\n\t\t\t\t\toffset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n\t\t\t\t}\n\t\t\t\tpixel += sign * offset;\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar innerDimension, start, end, value;\n\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tvalue = reverse ? me.right - pixel : pixel - me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tvalue = reverse ? pixel - me.top : me.bottom - pixel;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\tvar offset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tvalue -= offset;\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tvalue *= log10(end) - log10(start);\n\t\t\t\tvalue /= innerDimension;\n\t\t\t\tvalue = Math.pow(10, log10(start) + value);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('bar', {\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'linear'\n\t\t}]\n\t}\n});\n\ndefaults._set('horizontalBar', {\n\thover: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'bottom'\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\tposition: 'left',\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Horizontal Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}]\n\t},\n\n\telements: {\n\t\trectangle: {\n\t\t\tborderSkipped: 'left'\n\t\t}\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function(item, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\n\t\t\t\tif (item.length > 0) {\n\t\t\t\t\tif (item[0].yLabel) {\n\t\t\t\t\t\ttitle = item[0].yLabel;\n\t\t\t\t\t} else if (data.labels.length > 0 && item[0].index < data.labels.length) {\n\t\t\t\t\t\ttitle = data.labels[item[0].index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\treturn datasetLabel + ': ' + item.xLabel;\n\t\t\t}\n\t\t},\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t}\n});\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(scale, pixels) {\n\tvar min = scale.isHorizontal() ? scale.width : scale.height;\n\tvar ticks = scale.getTicks();\n\tvar prev, curr, i, ilen;\n\n\tfor (i = 1, ilen = pixels.length; i < ilen; ++i) {\n\t\tmin = Math.min(min, pixels[i] - pixels[i - 1]);\n\t}\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tcurr = scale.getPixelForTick(i);\n\t\tmin = i > 0 ? Math.min(min, curr - prev) : min;\n\t\tprev = curr;\n\t}\n\n\treturn min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options) {\n\tvar thickness = options.barThickness;\n\tvar count = ruler.stackCount;\n\tvar curr = ruler.pixels[index];\n\tvar size, ratio;\n\n\tif (helpers.isNullOrUndef(thickness)) {\n\t\tsize = ruler.min * options.categoryPercentage;\n\t\tratio = options.barPercentage;\n\t} else {\n\t\t// When bar thickness is enforced, category and bar percentages are ignored.\n\t\t// Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n\t\t// and deprecate barPercentage since this value is ignored when thickness is absolute.\n\t\tsize = thickness * count;\n\t\tratio = 1;\n\t}\n\n\treturn {\n\t\tchunk: size / count,\n\t\tratio: ratio,\n\t\tstart: curr - (size / 2)\n\t};\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options) {\n\tvar pixels = ruler.pixels;\n\tvar curr = pixels[index];\n\tvar prev = index > 0 ? pixels[index - 1] : null;\n\tvar next = index < pixels.length - 1 ? pixels[index + 1] : null;\n\tvar percent = options.categoryPercentage;\n\tvar start, size;\n\n\tif (prev === null) {\n\t\t// first data: its size is double based on the next point or,\n\t\t// if it's also the last data, we use the scale end extremity.\n\t\tprev = curr - (next === null ? ruler.end - curr : next - curr);\n\t}\n\n\tif (next === null) {\n\t\t// last data: its size is also double based on the previous point.\n\t\tnext = curr + curr - prev;\n\t}\n\n\tstart = curr - ((curr - prev) / 2) * percent;\n\tsize = ((next - prev) / 2) * percent;\n\n\treturn {\n\t\tchunk: size / ruler.stackCount,\n\t\tratio: options.barPercentage,\n\t\tstart: start\n\t};\n}\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bar = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Rectangle,\n\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta;\n\n\t\t\tChart.DatasetController.prototype.initialize.apply(me, arguments);\n\n\t\t\tmeta = me.getMeta();\n\t\t\tmeta.stack = me.getDataset().stack;\n\t\t\tmeta.bar = true;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar i, ilen;\n\n\t\t\tme._ruler = me.getRuler();\n\n\t\t\tfor (i = 0, ilen = rects.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(rects[i], i, reset);\n\t\t\t}\n\t\t},\n\n\t\tupdateElement: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar rectangleOptions = chart.options.elements.rectangle;\n\n\t\t\trectangle._xScale = me.getScaleForId(meta.xAxisID);\n\t\t\trectangle._yScale = me.getScaleForId(meta.yAxisID);\n\t\t\trectangle._datasetIndex = me.index;\n\t\t\trectangle._index = index;\n\n\t\t\trectangle._model = {\n\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\tlabel: chart.data.labels[index],\n\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\n\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\n\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\n\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\n\t\t\t};\n\n\t\t\tme.updateElementGeometry(rectangle, index, reset);\n\n\t\t\trectangle.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tupdateElementGeometry: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar model = rectangle._model;\n\t\t\tvar vscale = me.getValueScale();\n\t\t\tvar base = vscale.getBasePixel();\n\t\t\tvar horizontal = vscale.isHorizontal();\n\t\t\tvar ruler = me._ruler || me.getRuler();\n\t\t\tvar vpixels = me.calculateBarValuePixels(me.index, index);\n\t\t\tvar ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n\n\t\t\tmodel.horizontal = horizontal;\n\t\t\tmodel.base = reset ? base : vpixels.base;\n\t\t\tmodel.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n\t\t\tmodel.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n\t\t\tmodel.height = horizontal ? ipixels.size : undefined;\n\t\t\tmodel.width = horizontal ? undefined : ipixels.size;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScale: function() {\n\t\t\treturn this.getScaleForId(this.getValueScaleId());\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScale: function() {\n\t\t\treturn this.getScaleForId(this.getIndexScaleId());\n\t\t},\n\n\t\t/**\n\t\t * Returns the stacks based on groups and bar visibility.\n\t\t * @param {Number} [last] - The dataset index\n\t\t * @returns {Array} The stack list\n\t\t * @private\n\t\t */\n\t\t_getStacks: function(last) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar ilen = last === undefined ? chart.data.datasets.length : last + 1;\n\t\t\tvar stacks = [];\n\t\t\tvar i, meta;\n\n\t\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tif (meta.bar && chart.isDatasetVisible(i) &&\n\t\t\t\t\t(stacked === false ||\n\t\t\t\t\t(stacked === true && stacks.indexOf(meta.stack) === -1) ||\n\t\t\t\t\t(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\n\t\t\t\t\tstacks.push(meta.stack);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn stacks;\n\t\t},\n\n\t\t/**\n\t\t * Returns the effective number of stacks based on groups and bar visibility.\n\t\t * @private\n\t\t */\n\t\tgetStackCount: function() {\n\t\t\treturn this._getStacks().length;\n\t\t},\n\n\t\t/**\n\t\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t\t * @param {Number} [datasetIndex] - The dataset index\n\t\t * @param {String} [name] - The stack name to find\n\t\t * @returns {Number} The stack index\n\t\t * @private\n\t\t */\n\t\tgetStackIndex: function(datasetIndex, name) {\n\t\t\tvar stacks = this._getStacks(datasetIndex);\n\t\t\tvar index = (name !== undefined)\n\t\t\t\t? stacks.indexOf(name)\n\t\t\t\t: -1; // indexOf returns -1 if element is not present\n\n\t\t\treturn (index === -1)\n\t\t\t\t? stacks.length - 1\n\t\t\t\t: index;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetRuler: function() {\n\t\t\tvar me = this;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stackCount = me.getStackCount();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar isHorizontal = scale.isHorizontal();\n\t\t\tvar start = isHorizontal ? scale.left : scale.top;\n\t\t\tvar end = start + (isHorizontal ? scale.width : scale.height);\n\t\t\tvar pixels = [];\n\t\t\tvar i, ilen, min;\n\n\t\t\tfor (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n\t\t\t\tpixels.push(scale.getPixelForValue(null, i, datasetIndex));\n\t\t\t}\n\n\t\t\tmin = helpers.isNullOrUndef(scale.options.barThickness)\n\t\t\t\t? computeMinSampleSize(scale, pixels)\n\t\t\t\t: -1;\n\n\t\t\treturn {\n\t\t\t\tmin: min,\n\t\t\t\tpixels: pixels,\n\t\t\t\tstart: start,\n\t\t\t\tend: end,\n\t\t\t\tstackCount: stackCount,\n\t\t\t\tscale: scale\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Note: pixel values are not clamped to the scale area.\n\t\t * @private\n\t\t */\n\t\tcalculateBarValuePixels: function(datasetIndex, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar value = scale.getRightValue(datasets[datasetIndex].data[index]);\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar stack = meta.stack;\n\t\t\tvar start = 0;\n\t\t\tvar i, imeta, ivalue, base, head, size;\n\n\t\t\tif (stacked || (stacked === undefined && stack !== undefined)) {\n\t\t\t\tfor (i = 0; i < datasetIndex; ++i) {\n\t\t\t\t\timeta = chart.getDatasetMeta(i);\n\n\t\t\t\t\tif (imeta.bar &&\n\t\t\t\t\t\timeta.stack === stack &&\n\t\t\t\t\t\timeta.controller.getValueScaleId() === scale.id &&\n\t\t\t\t\t\tchart.isDatasetVisible(i)) {\n\n\t\t\t\t\t\tivalue = scale.getRightValue(datasets[i].data[index]);\n\t\t\t\t\t\tif ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\n\t\t\t\t\t\t\tstart += ivalue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbase = scale.getPixelForValue(start);\n\t\t\thead = scale.getPixelForValue(start + value);\n\t\t\tsize = (head - base) / 2;\n\n\t\t\treturn {\n\t\t\t\tsize: size,\n\t\t\t\tbase: base,\n\t\t\t\thead: head,\n\t\t\t\tcenter: head + size / 2\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tcalculateBarIndexPixels: function(datasetIndex, index, ruler) {\n\t\t\tvar me = this;\n\t\t\tvar options = ruler.scale.options;\n\t\t\tvar range = options.barThickness === 'flex'\n\t\t\t\t? computeFlexCategoryTraits(index, ruler, options)\n\t\t\t\t: computeFitCategoryTraits(index, ruler, options);\n\n\t\t\tvar stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n\t\t\tvar center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n\t\t\tvar size = Math.min(\n\t\t\t\thelpers.valueOrDefault(options.maxBarThickness, Infinity),\n\t\t\t\trange.chunk * range.ratio);\n\n\t\t\treturn {\n\t\t\t\tbase: center - size / 2,\n\t\t\t\thead: center + size / 2,\n\t\t\t\tcenter: center,\n\t\t\t\tsize: size\n\t\t\t};\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar ilen = rects.length;\n\t\t\tvar i = 0;\n\n\t\t\thelpers.canvas.clipArea(chart.ctx, chart.chartArea);\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tif (!isNaN(scale.getRightValue(dataset.data[i]))) {\n\t\t\t\t\trects[i].draw();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\t\t},\n\n\t\tsetHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\t\t\tvar rectangleElementOptions = this.chart.options.elements.rectangle;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\n\t\t}\n\t});\n\n\tChart.controllers.horizontalBar = Chart.controllers.bar.extend({\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('radar', {\n\tscale: {\n\t\ttype: 'radialLinear'\n\t},\n\telements: {\n\t\tline: {\n\t\t\ttension: 0 // no bezier in radar\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.radar = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data;\n\t\t\tvar custom = line.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar lineElementOptions = me.chart.options.elements.line;\n\t\t\tvar scale = me.chart.scale;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\thelpers.extend(meta.dataset, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_scale: scale,\n\t\t\t\t// Data\n\t\t\t\t_children: points,\n\t\t\t\t_loop: true,\n\t\t\t\t// Model\n\t\t\t\t_model: {\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmeta.dataset.pivot();\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t}, me);\n\n\t\t\t// Update bezier control points\n\t\t\tme.updateBezierControlPoints();\n\t\t},\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar scale = me.chart.scale;\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\n\t\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\thelpers.extend(point, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\t\t\ty: reset ? scale.yCenter : pointPosition.y,\n\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n\t\t\t\t\tradius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n\t\t\t\t\tpointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n\n\t\t\t\t\t// Tooltip\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tpoint._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\n\t\t},\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar chartArea = this.chart.chartArea;\n\t\t\tvar meta = this.getMeta();\n\n\t\t\thelpers.each(meta.data, function(point, index) {\n\t\t\t\tvar model = point._model;\n\t\t\t\tvar controlPoints = helpers.splineCurve(\n\t\t\t\t\thelpers.previousItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers.nextItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel.tension\n\t\t\t\t);\n\n\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\t\tmodel.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\tmodel.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\t// Now pivot the point for animation\n\t\t\t\tpoint.pivot();\n\t\t\t});\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\t\t\tvar pointElementOptions = this.chart.options.elements.point;\n\n\t\t\tmodel.radius = custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius);\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth);\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('bubble', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\tposition: 'bottom',\n\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\tvar dataPoint = data.datasets[item.datasetIndex].data[item.index];\n\t\t\t\treturn datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bubble = Chart.DatasetController.extend({\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tdataElementType: elements.Point,\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data;\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar options = me._resolveElementOptions(point, index);\n\t\t\tvar data = me.getDataset().data[index];\n\t\t\tvar dsIndex = me.index;\n\n\t\t\tvar x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n\t\t\tvar y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._options = options;\n\t\t\tpoint._datasetIndex = dsIndex;\n\t\t\tpoint._index = index;\n\t\t\tpoint._model = {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\thitRadius: options.hitRadius,\n\t\t\t\tpointStyle: options.pointStyle,\n\t\t\t\tradius: reset ? 0 : options.radius,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t};\n\n\t\t\tpoint.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tsetHoverStyle: function(point) {\n\t\t\tvar model = point._model;\n\t\t\tvar options = point._options;\n\n\t\t\tmodel.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\n\t\t\tmodel.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\n\t\t\tmodel.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n\t\t\tmodel.radius = options.radius + options.hoverRadius;\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar model = point._model;\n\t\t\tvar options = point._options;\n\n\t\t\tmodel.backgroundColor = options.backgroundColor;\n\t\t\tmodel.borderColor = options.borderColor;\n\t\t\tmodel.borderWidth = options.borderWidth;\n\t\t\tmodel.radius = options.radius;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_resolveElementOptions: function(point, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar dataset = datasets[me.index];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar options = chart.options.elements.point;\n\t\t\tvar resolve = helpers.options.resolve;\n\t\t\tvar data = dataset.data[index];\n\t\t\tvar values = {};\n\t\t\tvar i, ilen, key;\n\n\t\t\t// Scriptable options\n\t\t\tvar context = {\n\t\t\t\tchart: chart,\n\t\t\t\tdataIndex: index,\n\t\t\t\tdataset: dataset,\n\t\t\t\tdatasetIndex: me.index\n\t\t\t};\n\n\t\t\tvar keys = [\n\t\t\t\t'backgroundColor',\n\t\t\t\t'borderColor',\n\t\t\t\t'borderWidth',\n\t\t\t\t'hoverBackgroundColor',\n\t\t\t\t'hoverBorderColor',\n\t\t\t\t'hoverBorderWidth',\n\t\t\t\t'hoverRadius',\n\t\t\t\t'hitRadius',\n\t\t\t\t'pointStyle'\n\t\t\t];\n\n\t\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\t\tkey = keys[i];\n\t\t\t\tvalues[key] = resolve([\n\t\t\t\t\tcustom[key],\n\t\t\t\t\tdataset[key],\n\t\t\t\t\toptions[key]\n\t\t\t\t], context, index);\n\t\t\t}\n\n\t\t\t// Custom radius resolution\n\t\t\tvalues.radius = resolve([\n\t\t\t\tcustom.radius,\n\t\t\t\tdata ? data.r : undefined,\n\t\t\t\tdataset.radius,\n\t\t\t\toptions.radius\n\t\t\t], context, index);\n\n\t\t\treturn values;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\nvar Ticks = require('./core.ticks');\n\ndefaults._set('scale', {\n\tdisplay: true,\n\tposition: 'left',\n\toffset: false,\n\n\t// grid line settings\n\tgridLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tdrawBorder: true,\n\t\tdrawOnChartArea: true,\n\t\tdrawTicks: true,\n\t\ttickMarkLength: 10,\n\t\tzeroLineWidth: 1,\n\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\tzeroLineBorderDash: [],\n\t\tzeroLineBorderDashOffset: 0.0,\n\t\toffsetGridLines: false,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\t// scale label\n\tscaleLabel: {\n\t\t// display property\n\t\tdisplay: false,\n\n\t\t// actual label\n\t\tlabelString: '',\n\n\t\t// line height\n\t\tlineHeight: 1.2,\n\n\t\t// top/bottom padding\n\t\tpadding: {\n\t\t\ttop: 4,\n\t\t\tbottom: 4\n\t\t}\n\t},\n\n\t// label settings\n\tticks: {\n\t\tbeginAtZero: false,\n\t\tminRotation: 0,\n\t\tmaxRotation: 50,\n\t\tmirror: false,\n\t\tpadding: 0,\n\t\treverse: false,\n\t\tdisplay: true,\n\t\tautoSkip: true,\n\t\tautoSkipPadding: 0,\n\t\tlabelOffset: 0,\n\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\tcallback: Ticks.formatters.values,\n\t\tminor: {},\n\t\tmajor: {}\n\t}\n});\n\nfunction labelsFromTicks(ticks) {\n\tvar labels = [];\n\tvar i, ilen;\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tlabels.push(ticks[i].label);\n\t}\n\n\treturn labels;\n}\n\nfunction getLineValue(scale, index, offsetGridLines) {\n\tvar lineValue = scale.getPixelForTick(index);\n\n\tif (offsetGridLines) {\n\t\tif (index === 0) {\n\t\t\tlineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n\t\t} else {\n\t\t\tlineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n\t\t}\n\t}\n\treturn lineValue;\n}\n\nmodule.exports = function(Chart) {\n\n\tfunction computeTextSize(context, tick, font) {\n\t\treturn helpers.isArray(tick) ?\n\t\t\thelpers.longestText(context, font, tick) :\n\t\t\tcontext.measureText(tick).width;\n\t}\n\n\tfunction parseFontOptions(options) {\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar globalDefaults = defaults.global;\n\t\tvar size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n\t\tvar style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n\n\t\treturn {\n\t\t\tsize: size,\n\t\t\tstyle: style,\n\t\t\tfamily: family,\n\t\t\tfont: helpers.fontString(size, style, family)\n\t\t};\n\t}\n\n\tfunction parseLineHeight(options) {\n\t\treturn helpers.options.toLineHeight(\n\t\t\thelpers.valueOrDefault(options.lineHeight, 1.2),\n\t\t\thelpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\n\t}\n\n\tChart.Scale = Element.extend({\n\t\t/**\n\t\t * Get the padding needed for the scale\n\t\t * @method getPadding\n\t\t * @private\n\t\t * @returns {Padding} the necessary padding\n\t\t */\n\t\tgetPadding: function() {\n\t\t\tvar me = this;\n\t\t\treturn {\n\t\t\t\tleft: me.paddingLeft || 0,\n\t\t\t\ttop: me.paddingTop || 0,\n\t\t\t\tright: me.paddingRight || 0,\n\t\t\t\tbottom: me.paddingBottom || 0\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Returns the scale tick objects ({label, major})\n\t\t * @since 2.7\n\t\t */\n\t\tgetTicks: function() {\n\t\t\treturn this._ticks;\n\t\t},\n\n\t\t// These methods are ordered by lifecyle. Utilities then follow.\n\t\t// Any function defined here is inherited by all scale types.\n\t\t// Any function can be extended by the scale type\n\n\t\tmergeTicksOptions: function() {\n\t\t\tvar ticks = this.options.ticks;\n\t\t\tif (ticks.minor === false) {\n\t\t\t\tticks.minor = {\n\t\t\t\t\tdisplay: false\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (ticks.major === false) {\n\t\t\t\tticks.major = {\n\t\t\t\t\tdisplay: false\n\t\t\t\t};\n\t\t\t}\n\t\t\tfor (var key in ticks) {\n\t\t\t\tif (key !== 'major' && key !== 'minor') {\n\t\t\t\t\tif (typeof ticks.minor[key] === 'undefined') {\n\t\t\t\t\t\tticks.minor[key] = ticks[key];\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof ticks.major[key] === 'undefined') {\n\t\t\t\t\t\tticks.major[key] = ticks[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbeforeUpdate: function() {\n\t\t\thelpers.callback(this.options.beforeUpdate, [this]);\n\t\t},\n\t\tupdate: function(maxWidth, maxHeight, margins) {\n\t\t\tvar me = this;\n\t\t\tvar i, ilen, labels, label, ticks, tick;\n\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\t\tme.beforeUpdate();\n\n\t\t\t// Absorb the master measurements\n\t\t\tme.maxWidth = maxWidth;\n\t\t\tme.maxHeight = maxHeight;\n\t\t\tme.margins = helpers.extend({\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tbottom: 0\n\t\t\t}, margins);\n\t\t\tme.longestTextCache = me.longestTextCache || {};\n\n\t\t\t// Dimensions\n\t\t\tme.beforeSetDimensions();\n\t\t\tme.setDimensions();\n\t\t\tme.afterSetDimensions();\n\n\t\t\t// Data min/max\n\t\t\tme.beforeDataLimits();\n\t\t\tme.determineDataLimits();\n\t\t\tme.afterDataLimits();\n\n\t\t\t// Ticks - `this.ticks` is now DEPRECATED!\n\t\t\t// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n\t\t\t// and must not be accessed directly from outside this class. `this.ticks` being\n\t\t\t// around for long time and not marked as private, we can't change its structure\n\t\t\t// without unexpected breaking changes. If you need to access the scale ticks,\n\t\t\t// use scale.getTicks() instead.\n\n\t\t\tme.beforeBuildTicks();\n\n\t\t\t// New implementations should return an array of objects but for BACKWARD COMPAT,\n\t\t\t// we still support no return (`this.ticks` internally set by calling this method).\n\t\t\tticks = me.buildTicks() || [];\n\n\t\t\tme.afterBuildTicks();\n\n\t\t\tme.beforeTickToLabelConversion();\n\n\t\t\t// New implementations should return the formatted tick labels but for BACKWARD\n\t\t\t// COMPAT, we still support no return (`this.ticks` internally changed by calling\n\t\t\t// this method and supposed to contain only string values).\n\t\t\tlabels = me.convertTicksToLabels(ticks) || me.ticks;\n\n\t\t\tme.afterTickToLabelConversion();\n\n\t\t\tme.ticks = labels;   // BACKWARD COMPATIBILITY\n\n\t\t\t// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n\n\t\t\t// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\t\t\tfor (i = 0, ilen = labels.length; i < ilen; ++i) {\n\t\t\t\tlabel = labels[i];\n\t\t\t\ttick = ticks[i];\n\t\t\t\tif (!tick) {\n\t\t\t\t\tticks.push(tick = {\n\t\t\t\t\t\tlabel: label,\n\t\t\t\t\t\tmajor: false\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\ttick.label = label;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme._ticks = ticks;\n\n\t\t\t// Tick Rotation\n\t\t\tme.beforeCalculateTickRotation();\n\t\t\tme.calculateTickRotation();\n\t\t\tme.afterCalculateTickRotation();\n\t\t\t// Fit\n\t\t\tme.beforeFit();\n\t\t\tme.fit();\n\t\t\tme.afterFit();\n\t\t\t//\n\t\t\tme.afterUpdate();\n\n\t\t\treturn me.minSize;\n\n\t\t},\n\t\tafterUpdate: function() {\n\t\t\thelpers.callback(this.options.afterUpdate, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeSetDimensions: function() {\n\t\t\thelpers.callback(this.options.beforeSetDimensions, [this]);\n\t\t},\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.width = me.maxWidth;\n\t\t\t\tme.left = 0;\n\t\t\t\tme.right = me.width;\n\t\t\t} else {\n\t\t\t\tme.height = me.maxHeight;\n\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.top = 0;\n\t\t\t\tme.bottom = me.height;\n\t\t\t}\n\n\t\t\t// Reset padding\n\t\t\tme.paddingLeft = 0;\n\t\t\tme.paddingTop = 0;\n\t\t\tme.paddingRight = 0;\n\t\t\tme.paddingBottom = 0;\n\t\t},\n\t\tafterSetDimensions: function() {\n\t\t\thelpers.callback(this.options.afterSetDimensions, [this]);\n\t\t},\n\n\t\t// Data limits\n\t\tbeforeDataLimits: function() {\n\t\t\thelpers.callback(this.options.beforeDataLimits, [this]);\n\t\t},\n\t\tdetermineDataLimits: helpers.noop,\n\t\tafterDataLimits: function() {\n\t\t\thelpers.callback(this.options.afterDataLimits, [this]);\n\t\t},\n\n\t\t//\n\t\tbeforeBuildTicks: function() {\n\t\t\thelpers.callback(this.options.beforeBuildTicks, [this]);\n\t\t},\n\t\tbuildTicks: helpers.noop,\n\t\tafterBuildTicks: function() {\n\t\t\thelpers.callback(this.options.afterBuildTicks, [this]);\n\t\t},\n\n\t\tbeforeTickToLabelConversion: function() {\n\t\t\thelpers.callback(this.options.beforeTickToLabelConversion, [this]);\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\t// Convert ticks to strings\n\t\t\tvar tickOpts = me.options.ticks;\n\t\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n\t\t},\n\t\tafterTickToLabelConversion: function() {\n\t\t\thelpers.callback(this.options.afterTickToLabelConversion, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeCalculateTickRotation: function() {\n\t\t\thelpers.callback(this.options.beforeCalculateTickRotation, [this]);\n\t\t},\n\t\tcalculateTickRotation: function() {\n\t\t\tvar me = this;\n\t\t\tvar context = me.ctx;\n\t\t\tvar tickOpts = me.options.ticks;\n\t\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t\t// Get the width of each grid by calculating the difference\n\t\t\t// between x offsets between 0 and 1.\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\t\tcontext.font = tickFont.font;\n\n\t\t\tvar labelRotation = tickOpts.minRotation || 0;\n\n\t\t\tif (labels.length && me.options.display && me.isHorizontal()) {\n\t\t\t\tvar originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\n\t\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\t\tvar cosRotation, sinRotation;\n\n\t\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n\t\t\t\t\tvar angleRadians = helpers.toRadians(labelRotation);\n\t\t\t\t\tcosRotation = Math.cos(angleRadians);\n\t\t\t\t\tsinRotation = Math.sin(angleRadians);\n\n\t\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t\t// go back one step\n\t\t\t\t\t\tlabelRotation--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tlabelRotation++;\n\t\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.labelRotation = labelRotation;\n\t\t},\n\t\tafterCalculateTickRotation: function() {\n\t\t\thelpers.callback(this.options.afterCalculateTickRotation, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeFit: function() {\n\t\t\thelpers.callback(this.options.beforeFit, [this]);\n\t\t},\n\t\tfit: function() {\n\t\t\tvar me = this;\n\t\t\t// Reset\n\t\t\tvar minSize = me.minSize = {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0\n\t\t\t};\n\n\t\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar display = opts.display;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t\t// Width\n\t\t\tif (isHorizontal) {\n\t\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t\t} else {\n\t\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t}\n\n\t\t\t// height\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t} else {\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t\t}\n\n\t\t\t// Are we showing a title for the scale?\n\t\t\tif (scaleLabelOpts.display && display) {\n\t\t\t\tvar scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\n\t\t\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n\t\t\t\tvar deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tminSize.height += deltaHeight;\n\t\t\t\t} else {\n\t\t\t\t\tminSize.width += deltaHeight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Don't bother fitting the ticks if we are not showing them\n\t\t\tif (tickOpts.display && display) {\n\t\t\t\tvar largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\n\t\t\t\tvar tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n\t\t\t\tvar lineSpace = tickFont.size * 0.5;\n\t\t\t\tvar tickPadding = me.options.ticks.padding;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t// A horizontal axis is more constrained by the height.\n\t\t\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\t\t\tvar angleRadians = helpers.toRadians(me.labelRotation);\n\t\t\t\t\tvar cosRotation = Math.cos(angleRadians);\n\t\t\t\t\tvar sinRotation = Math.sin(angleRadians);\n\n\t\t\t\t\t// TODO - improve this calculation\n\t\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\n\t\t\t\t\t\t+ (tickFont.size * tallestLabelHeightInLines)\n\t\t\t\t\t\t+ (lineSpace * (tallestLabelHeightInLines - 1))\n\t\t\t\t\t\t+ lineSpace; // padding\n\n\t\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n\n\t\t\t\t\tme.ctx.font = tickFont.font;\n\t\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\n\t\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font);\n\n\t\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n\t\t\t\t\t// which means that the right padding is dominated by the font height\n\t\t\t\t\tif (me.labelRotation !== 0) {\n\t\t\t\t\t\tme.paddingLeft = opts.position === 'bottom' ? (cosRotation * firstLabelWidth) + 3 : (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\t\tme.paddingRight = opts.position === 'bottom' ? (cosRotation * lineSpace) + 3 : (cosRotation * lastLabelWidth) + 3;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\t\tme.paddingRight = lastLabelWidth / 2 + 3;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// A vertical axis is more constrained by the width. Labels are the\n\t\t\t\t\t// dominant factor here, so get that length first and account for padding\n\t\t\t\t\tif (tickOpts.mirror) {\n\t\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// use lineSpace for consistency with horizontal axis\n\t\t\t\t\t\t// tickPadding is not implemented for horizontal\n\t\t\t\t\t\tlargestTextWidth += tickPadding + lineSpace;\n\t\t\t\t\t}\n\n\t\t\t\t\tminSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n\n\t\t\t\t\tme.paddingTop = tickFont.size / 2;\n\t\t\t\t\tme.paddingBottom = tickFont.size / 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.handleMargins();\n\n\t\t\tme.width = minSize.width;\n\t\t\tme.height = minSize.height;\n\t\t},\n\n\t\t/**\n\t\t * Handle margins and padding interactions\n\t\t * @private\n\t\t */\n\t\thandleMargins: function() {\n\t\t\tvar me = this;\n\t\t\tif (me.margins) {\n\t\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t\t}\n\t\t},\n\n\t\tafterFit: function() {\n\t\t\thelpers.callback(this.options.afterFit, [this]);\n\t\t},\n\n\t\t// Shared Methods\n\t\tisHorizontal: function() {\n\t\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t\t},\n\t\tisFullWidth: function() {\n\t\t\treturn (this.options.fullWidth);\n\t\t},\n\n\t\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\t\tgetRightValue: function(rawValue) {\n\t\t\t// Null and undefined values first\n\t\t\tif (helpers.isNullOrUndef(rawValue)) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\t\tif (typeof rawValue === 'number' && !isFinite(rawValue)) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// If it is in fact an object, dive in one more level\n\t\t\tif (rawValue) {\n\t\t\t\tif (this.isHorizontal()) {\n\t\t\t\t\tif (rawValue.x !== undefined) {\n\t\t\t\t\t\treturn this.getRightValue(rawValue.x);\n\t\t\t\t\t}\n\t\t\t\t} else if (rawValue.y !== undefined) {\n\t\t\t\t\treturn this.getRightValue(rawValue.y);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Value is good, return it\n\t\t\treturn rawValue;\n\t\t},\n\n\t\t/**\n\t\t * Used to get the value to display in the tooltip for the data at the given index\n\t\t * @param index\n\t\t * @param datasetIndex\n\t\t */\n\t\tgetLabelForIndex: helpers.noop,\n\n\t\t/**\n\t\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t * @param value\n\t\t * @param index\n\t\t * @param datasetIndex\n\t\t */\n\t\tgetPixelForValue: helpers.noop,\n\n\t\t/**\n\t\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t * @param pixel\n\t\t */\n\t\tgetValueForPixel: helpers.noop,\n\n\t\t/**\n\t\t * Returns the location of the tick at the given index\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetPixelForTick: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\t\tif (offset) {\n\t\t\t\t\tpixel += tickWidth / 2;\n\t\t\t\t}\n\n\t\t\t\tvar finalVal = me.left + Math.round(pixel);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\t\treturn me.top + (index * (innerHeight / (me._ticks.length - 1)));\n\t\t},\n\n\t\t/**\n\t\t * Utility for getting the pixel location of a percentage of scale\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetPixelForDecimal: function(decimal) {\n\t\t\tvar me = this;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\t\tvar finalVal = me.left + Math.round(valueOffset);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\treturn me.top + (decimal * me.height);\n\t\t},\n\n\t\t/**\n\t\t * Returns the pixel for the minimum chart value\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetBasePixel: function() {\n\t\t\treturn this.getPixelForValue(this.getBaseValue());\n\t\t},\n\n\t\tgetBaseValue: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.beginAtZero ? 0 :\n\t\t\t\tmin < 0 && max < 0 ? max :\n\t\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t\t0;\n\t\t},\n\n\t\t/**\n\t\t * Returns a subset of ticks to be plotted to avoid overlapping labels.\n\t\t * @private\n\t\t */\n\t\t_autoSkip: function(ticks) {\n\t\t\tvar skipRatio;\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar optionTicks = me.options.ticks.minor;\n\t\t\tvar tickCount = ticks.length;\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\t\t\tvar cosRotation = Math.cos(labelRotationRadians);\n\t\t\tvar longestRotatedLabel = me.longestLabelWidth * cosRotation;\n\t\t\tvar result = [];\n\t\t\tvar i, tick, shouldSkip;\n\n\t\t\t// figure out the maximum number of gridlines to show\n\t\t\tvar maxTicks;\n\t\t\tif (optionTicks.maxTicksLimit) {\n\t\t\t\tmaxTicks = optionTicks.maxTicksLimit;\n\t\t\t}\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tskipRatio = false;\n\n\t\t\t\tif ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > (me.width - (me.paddingLeft + me.paddingRight))) {\n\t\t\t\t\tskipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount) / (me.width - (me.paddingLeft + me.paddingRight)));\n\t\t\t\t}\n\n\t\t\t\t// if they defined a max number of optionTicks,\n\t\t\t\t// increase skipRatio until that number is met\n\t\t\t\tif (maxTicks && tickCount > maxTicks) {\n\t\t\t\t\tskipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < tickCount; i++) {\n\t\t\t\ttick = ticks[i];\n\n\t\t\t\t// Since we always show the last tick,we need may need to hide the last shown one before\n\t\t\t\tshouldSkip = (skipRatio > 1 && i % skipRatio > 0) || (i % skipRatio === 0 && i + skipRatio >= tickCount);\n\t\t\t\tif (shouldSkip && i !== tickCount - 1) {\n\t\t\t\t\t// leave tick in place but make sure it's not displayed (#4635)\n\t\t\t\t\tdelete tick.label;\n\t\t\t\t}\n\t\t\t\tresult.push(tick);\n\t\t\t}\n\t\t\treturn result;\n\t\t},\n\n\t\t// Actually draw the scale on the canvas\n\t\t// @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n\t\tdraw: function(chartArea) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tif (!options.display) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar context = me.ctx;\n\t\t\tvar globalDefaults = defaults.global;\n\t\t\tvar optionTicks = options.ticks.minor;\n\t\t\tvar optionMajorTicks = options.ticks.major || optionTicks;\n\t\t\tvar gridLines = options.gridLines;\n\t\t\tvar scaleLabel = options.scaleLabel;\n\n\t\t\tvar isRotated = me.labelRotation !== 0;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tvar ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n\t\t\tvar tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar tickFont = parseFontOptions(optionTicks);\n\t\t\tvar majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar majorTickFont = parseFontOptions(optionMajorTicks);\n\n\t\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\n\t\t\tvar scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar scaleLabelFont = parseFontOptions(scaleLabel);\n\t\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\n\t\t\tvar itemsToDraw = [];\n\n\t\t\tvar axisWidth = me.options.gridLines.lineWidth;\n\t\t\tvar xTickStart = options.position === 'right' ? me.right : me.right - axisWidth - tl;\n\t\t\tvar xTickEnd = options.position === 'right' ? me.right + tl : me.right;\n\t\t\tvar yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\n\t\t\tvar yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\n\n\t\t\thelpers.each(ticks, function(tick, index) {\n\t\t\t\t// autoskipper skipped this tick (#4635)\n\t\t\t\tif (helpers.isNullOrUndef(tick.label)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar label = tick.label;\n\t\t\t\tvar lineWidth, lineColor, borderDash, borderDashOffset;\n\t\t\t\tif (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n\t\t\t\t\t// Draw the first index specially\n\t\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\t\tborderDash = gridLines.zeroLineBorderDash;\n\t\t\t\t\tborderDashOffset = gridLines.zeroLineBorderDashOffset;\n\t\t\t\t} else {\n\t\t\t\t\tlineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\t\tlineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\t\tborderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n\t\t\t\t\tborderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n\t\t\t\t}\n\n\t\t\t\t// Common properties\n\t\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n\t\t\t\tvar textAlign = 'middle';\n\t\t\t\tvar textBaseline = 'middle';\n\t\t\t\tvar tickPadding = optionTicks.padding;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tvar labelYOffset = tl + tickPadding;\n\n\t\t\t\t\tif (options.position === 'bottom') {\n\t\t\t\t\t\t// bottom\n\t\t\t\t\t\ttextBaseline = !isRotated ? 'top' : 'middle';\n\t\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'right';\n\t\t\t\t\t\tlabelY = me.top + labelYOffset;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// top\n\t\t\t\t\t\ttextBaseline = !isRotated ? 'bottom' : 'middle';\n\t\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'left';\n\t\t\t\t\t\tlabelY = me.bottom - labelYOffset;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\t\tif (xLineValue < me.left) {\n\t\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t\t}\n\t\t\t\t\txLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\t\tlabelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n\t\t\t\t\ttx1 = tx2 = x1 = x2 = xLineValue;\n\t\t\t\t\tty1 = yTickStart;\n\t\t\t\t\tty2 = yTickEnd;\n\t\t\t\t\ty1 = chartArea.top;\n\t\t\t\t\ty2 = chartArea.bottom + axisWidth;\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tvar labelXOffset;\n\n\t\t\t\t\tif (optionTicks.mirror) {\n\t\t\t\t\t\ttextAlign = isLeft ? 'left' : 'right';\n\t\t\t\t\t\tlabelXOffset = tickPadding;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttextAlign = isLeft ? 'right' : 'left';\n\t\t\t\t\t\tlabelXOffset = tl + tickPadding;\n\t\t\t\t\t}\n\n\t\t\t\t\tlabelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n\n\t\t\t\t\tvar yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\t\tif (yLineValue < me.top) {\n\t\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t\t}\n\t\t\t\t\tyLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\t\tlabelY = me.getPixelForTick(index) + optionTicks.labelOffset;\n\n\t\t\t\t\ttx1 = xTickStart;\n\t\t\t\t\ttx2 = xTickEnd;\n\t\t\t\t\tx1 = chartArea.left;\n\t\t\t\t\tx2 = chartArea.right + axisWidth;\n\t\t\t\t\tty1 = ty2 = y1 = y2 = yLineValue;\n\t\t\t\t}\n\n\t\t\t\titemsToDraw.push({\n\t\t\t\t\ttx1: tx1,\n\t\t\t\t\tty1: ty1,\n\t\t\t\t\ttx2: tx2,\n\t\t\t\t\tty2: ty2,\n\t\t\t\t\tx1: x1,\n\t\t\t\t\ty1: y1,\n\t\t\t\t\tx2: x2,\n\t\t\t\t\ty2: y2,\n\t\t\t\t\tlabelX: labelX,\n\t\t\t\t\tlabelY: labelY,\n\t\t\t\t\tglWidth: lineWidth,\n\t\t\t\t\tglColor: lineColor,\n\t\t\t\t\tglBorderDash: borderDash,\n\t\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\t\tlabel: label,\n\t\t\t\t\tmajor: tick.major,\n\t\t\t\t\ttextBaseline: textBaseline,\n\t\t\t\t\ttextAlign: textAlign\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\t\thelpers.each(itemsToDraw, function(itemToDraw) {\n\t\t\t\tif (gridLines.display) {\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.lineWidth = itemToDraw.glWidth;\n\t\t\t\t\tcontext.strokeStyle = itemToDraw.glColor;\n\t\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.beginPath();\n\n\t\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.stroke();\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\n\t\t\t\tif (optionTicks.display) {\n\t\t\t\t\t// Make sure we draw text in the correct color and font\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\t\tcontext.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\n\t\t\t\t\tcontext.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n\t\t\t\t\tcontext.textBaseline = itemToDraw.textBaseline;\n\t\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\t\tif (helpers.isArray(label)) {\n\t\t\t\t\t\tvar lineCount = label.length;\n\t\t\t\t\t\tvar lineHeight = tickFont.size * 1.5;\n\t\t\t\t\t\tvar y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\n\n\t\t\t\t\t\tfor (var i = 0; i < lineCount; ++i) {\n\t\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\t\t// apply same lineSpacing as calculated @ L#320\n\t\t\t\t\t\t\ty += lineHeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.fillText(label, 0, 0);\n\t\t\t\t\t}\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (scaleLabel.display) {\n\t\t\t\t// Draw the scale label\n\t\t\t\tvar scaleLabelX;\n\t\t\t\tvar scaleLabelY;\n\t\t\t\tvar rotation = 0;\n\t\t\t\tvar halfLineHeight = parseLineHeight(scaleLabel) / 2;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\t\tscaleLabelY = options.position === 'bottom'\n\t\t\t\t\t\t? me.bottom - halfLineHeight - scaleLabelPadding.bottom\n\t\t\t\t\t\t: me.top + halfLineHeight + scaleLabelPadding.top;\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tscaleLabelX = isLeft\n\t\t\t\t\t\t? me.left + halfLineHeight + scaleLabelPadding.top\n\t\t\t\t\t\t: me.right - halfLineHeight - scaleLabelPadding.top;\n\t\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t\t}\n\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\t\tcontext.rotate(rotation);\n\t\t\t\tcontext.textAlign = 'center';\n\t\t\t\tcontext.textBaseline = 'middle';\n\t\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\t\tcontext.font = scaleLabelFont.font;\n\t\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (gridLines.drawBorder) {\n\t\t\t\t// Draw the line at the edge of the axis\n\t\t\t\tcontext.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\n\t\t\t\tcontext.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\n\t\t\t\tvar x1 = me.left;\n\t\t\t\tvar x2 = me.right + axisWidth;\n\t\t\t\tvar y1 = me.top;\n\t\t\t\tvar y2 = me.bottom + axisWidth;\n\n\t\t\t\tvar aliasPixel = helpers.aliasPixel(context.lineWidth);\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\ty1 = y2 = options.position === 'top' ? me.bottom : me.top;\n\t\t\t\t\ty1 += aliasPixel;\n\t\t\t\t\ty2 += aliasPixel;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = x2 = options.position === 'left' ? me.right : me.left;\n\t\t\t\t\tx1 += aliasPixel;\n\t\t\t\t\tx2 += aliasPixel;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.moveTo(x1, y1);\n\t\t\t\tcontext.lineTo(x2, y2);\n\t\t\t\tcontext.stroke();\n\t\t\t}\n\t\t}\n\t});\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\nfunction filterByPosition(array, position) {\n\treturn helpers.where(array, function(v) {\n\t\treturn v.position === position;\n\t});\n}\n\nfunction sortByWeight(array, reverse) {\n\tarray.forEach(function(v, i) {\n\t\tv._tmpIndex_ = i;\n\t\treturn v;\n\t});\n\tarray.sort(function(a, b) {\n\t\tvar v0 = reverse ? b : a;\n\t\tvar v1 = reverse ? a : b;\n\t\treturn v0.weight === v1.weight ?\n\t\t\tv0._tmpIndex_ - v1._tmpIndex_ :\n\t\t\tv0.weight - v1.weight;\n\t});\n\tarray.forEach(function(v) {\n\t\tdelete v._tmpIndex_;\n\t});\n}\n\n/**\n * @interface ILayoutItem\n * @prop {String} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {Function} update - Takes two parameters: width and height. Returns size of item\n * @prop {Function} getPadding -  Returns an object with padding on the edges\n * @prop {Number} width - Width of item. Must be valid after update()\n * @prop {Number} height - Height of item. Must be valid after update()\n * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nmodule.exports = {\n\tdefaults: {},\n\n\t/**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {ILayoutItem} item - the item to add to be layed out\n\t */\n\taddBox: function(chart, item) {\n\t\tif (!chart.boxes) {\n\t\t\tchart.boxes = [];\n\t\t}\n\n\t\t// initialize item with default values\n\t\titem.fullWidth = item.fullWidth || false;\n\t\titem.position = item.position || 'top';\n\t\titem.weight = item.weight || 0;\n\n\t\tchart.boxes.push(item);\n\t},\n\n\t/**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {Object} layoutItem - the item to remove from the layout\n\t */\n\tremoveBox: function(chart, layoutItem) {\n\t\tvar index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\t\tif (index !== -1) {\n\t\t\tchart.boxes.splice(index, 1);\n\t\t}\n\t},\n\n\t/**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {Object} item - the item to configure with the given options\n\t * @param {Object} options - the new item options.\n\t */\n\tconfigure: function(chart, item, options) {\n\t\tvar props = ['fullWidth', 'position', 'weight'];\n\t\tvar ilen = props.length;\n\t\tvar i = 0;\n\t\tvar prop;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tprop = props[i];\n\t\t\tif (options.hasOwnProperty(prop)) {\n\t\t\t\titem[prop] = options[prop];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {Number} width - the width to fit into\n\t * @param {Number} height - the height to fit into\n\t */\n\tupdate: function(chart, width, height) {\n\t\tif (!chart) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar layoutOptions = chart.options.layout || {};\n\t\tvar padding = helpers.options.toPadding(layoutOptions.padding);\n\t\tvar leftPadding = padding.left;\n\t\tvar rightPadding = padding.right;\n\t\tvar topPadding = padding.top;\n\t\tvar bottomPadding = padding.bottom;\n\n\t\tvar leftBoxes = filterByPosition(chart.boxes, 'left');\n\t\tvar rightBoxes = filterByPosition(chart.boxes, 'right');\n\t\tvar topBoxes = filterByPosition(chart.boxes, 'top');\n\t\tvar bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n\t\tvar chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\n\n\t\t// Sort boxes by weight. A higher weight is further away from the chart area\n\t\tsortByWeight(leftBoxes, true);\n\t\tsortByWeight(rightBoxes, false);\n\t\tsortByWeight(topBoxes, true);\n\t\tsortByWeight(bottomBoxes, false);\n\n\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t// Our canvas looks like the following.\n\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t// B1 is the bottom axis\n\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t// an error will be thrown.\n\t\t//\n\t\t// |----------------------------------------------------|\n\t\t// |                  T1 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t// |    |    |                 T2                  |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    | C1 |                           | C2 |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    |                                     |    |\n\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t// |    |    |                                     |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    | C3 |                           | C4 |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    |                 B1                  |    |\n\t\t// |----------------------------------------------------|\n\t\t// |                  B2 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t//\n\t\t// What we do to find the best sizing, we do the following\n\t\t// 1. Determine the minimum size of the chart area.\n\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t// 6. Refit each axis\n\t\t// 7. Position each axis in the final location\n\t\t// 8. Tell the chart the final location of the chart area\n\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t// Step 1\n\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\t\tvar chartAreaHeight = chartHeight / 2; // min 50%\n\n\t\t// Step 2\n\t\tvar verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\n\n\t\t// Step 3\n\t\tvar horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\n\n\t\t// Step 4\n\t\tvar maxChartAreaWidth = chartWidth;\n\t\tvar maxChartAreaHeight = chartHeight;\n\t\tvar minBoxSizes = [];\n\n\t\tfunction getMinimumBoxSize(box) {\n\t\t\tvar minSize;\n\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t} else {\n\t\t\t\tminSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t}\n\n\t\t\tminBoxSizes.push({\n\t\t\t\thorizontal: isHorizontal,\n\t\t\t\tminSize: minSize,\n\t\t\t\tbox: box,\n\t\t\t});\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\n\n\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\t\tvar maxHorizontalLeftPadding = 0;\n\t\tvar maxHorizontalRightPadding = 0;\n\t\tvar maxVerticalTopPadding = 0;\n\t\tvar maxVerticalBottomPadding = 0;\n\n\t\thelpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\n\t\t\tif (horizontalBox.getPadding) {\n\t\t\t\tvar boxPadding = horizontalBox.getPadding();\n\t\t\t\tmaxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n\t\t\t\tmaxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\n\t\t\tif (verticalBox.getPadding) {\n\t\t\t\tvar boxPadding = verticalBox.getPadding();\n\t\t\t\tmaxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n\t\t\t\tmaxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n\t\t\t}\n\t\t});\n\n\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t// be if the axes are drawn at their minimum sizes.\n\t\t// Steps 5 & 6\n\t\tvar totalLeftBoxesWidth = leftPadding;\n\t\tvar totalRightBoxesWidth = rightPadding;\n\t\tvar totalTopBoxesHeight = topPadding;\n\t\tvar totalBottomBoxesHeight = bottomPadding;\n\n\t\t// Function to fit a box\n\t\tfunction fitBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\treturn minBox.box === box;\n\t\t\t});\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tif (box.isHorizontal()) {\n\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\tleft: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n\t\t\t\t\t\tright: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t};\n\n\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\tbox.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t} else {\n\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\thelpers.each(leftBoxes.concat(rightBoxes), fitBox);\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\t// Set the Left and Right margins for the horizontal boxes\n\t\thelpers.each(topBoxes.concat(bottomBoxes), fitBox);\n\n\t\t// Figure out how much margin is on the top and bottom of the vertical boxes\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\tfunction finalFitVerticalBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\treturn minSize.box === box;\n\t\t\t});\n\n\t\t\tvar scaleMargin = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: totalTopBoxesHeight,\n\t\t\t\tbottom: totalBottomBoxesHeight\n\t\t\t};\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t}\n\t\t}\n\n\t\t// Let the left layout know the final margin\n\t\thelpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\n\n\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\ttotalLeftBoxesWidth = leftPadding;\n\t\ttotalRightBoxesWidth = rightPadding;\n\t\ttotalTopBoxesHeight = topPadding;\n\t\ttotalBottomBoxesHeight = bottomPadding;\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\t// We may be adding some padding to account for rotated x axis labels\n\t\tvar leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n\t\ttotalLeftBoxesWidth += leftPaddingAddition;\n\t\ttotalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n\n\t\tvar topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n\t\ttotalTopBoxesHeight += topPaddingAddition;\n\t\ttotalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\n\n\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t// without calling `fit` again\n\t\tvar newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n\t\tvar newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t}\n\n\t\t// Step 7 - Position the boxes\n\t\tvar left = leftPadding + leftPaddingAddition;\n\t\tvar top = topPadding + topPaddingAddition;\n\n\t\tfunction placeBox(box) {\n\t\t\tif (box.isHorizontal()) {\n\t\t\t\tbox.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\n\t\t\t\tbox.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n\t\t\t\tbox.top = top;\n\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t// Move to next point\n\t\t\t\ttop = box.bottom;\n\n\t\t\t} else {\n\n\t\t\t\tbox.left = left;\n\t\t\t\tbox.right = left + box.width;\n\t\t\t\tbox.top = totalTopBoxesHeight;\n\t\t\t\tbox.bottom = totalTopBoxesHeight + maxChartAreaHeight;\n\n\t\t\t\t// Move to next point\n\t\t\t\tleft = box.right;\n\t\t\t}\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t// Account for chart width and height\n\t\tleft += maxChartAreaWidth;\n\t\ttop += maxChartAreaHeight;\n\n\t\thelpers.each(rightBoxes, placeBox);\n\t\thelpers.each(bottomBoxes, placeBox);\n\n\t\t// Step 8\n\t\tchart.chartArea = {\n\t\t\tleft: totalLeftBoxesWidth,\n\t\t\ttop: totalTopBoxesHeight,\n\t\t\tright: totalLeftBoxesWidth + maxChartAreaWidth,\n\t\t\tbottom: totalTopBoxesHeight + maxChartAreaHeight\n\t\t};\n\n\t\t// Step 9\n\t\thelpers.each(chartAreaBoxes, function(box) {\n\t\t\tbox.left = chart.chartArea.left;\n\t\t\tbox.top = chart.chartArea.top;\n\t\t\tbox.right = chart.chartArea.right;\n\t\t\tbox.bottom = chart.chartArea.bottom;\n\n\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t});\n\t}\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nmodule.exports = {\n\t/**\n\t * Namespace to hold formatters for different types of ticks\n\t * @namespace Chart.Ticks.formatters\n\t */\n\tformatters: {\n\t\t/**\n\t\t * Formatter for value labels\n\t\t * @method Chart.Ticks.formatters.values\n\t\t * @param value the value to display\n\t\t * @return {String|Array} the label to display\n\t\t */\n\t\tvalues: function(value) {\n\t\t\treturn helpers.isArray(value) ? value : '' + value;\n\t\t},\n\n\t\t/**\n\t\t * Formatter for linear numeric ticks\n\t\t * @method Chart.Ticks.formatters.linear\n\t\t * @param tickValue {Number} the value to be formatted\n\t\t * @param index {Number} the position of the tickValue parameter in the ticks array\n\t\t * @param ticks {Array<Number>} the list of ticks being converted\n\t\t * @return {String} string representation of the tickValue parameter\n\t\t */\n\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t// not an integer\n\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar logDelta = helpers.log10(Math.abs(delta));\n\t\t\tvar tickString = '';\n\n\t\t\tif (tickValue !== 0) {\n\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t} else {\n\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t}\n\n\t\t\treturn tickString;\n\t\t},\n\n\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\n\n\t\t\tif (tickValue === 0) {\n\t\t\t\treturn '0';\n\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\treturn tickValue.toExponential();\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\t}\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\nvar basic = require('./platform.basic');\nvar dom = require('./platform.dom');\n\n// @TODO Make possible to select another platform at build time.\nvar implementation = dom._enabled ? dom : basic;\n\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\nmodule.exports = helpers.extend({\n\t/**\n\t * @since 2.7.0\n\t */\n\tinitialize: function() {},\n\n\t/**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {*} item - The native item from which to acquire context (platform specific)\n\t * @param {Object} options - The chart options\n\t * @returns {CanvasRenderingContext2D} context2d instance\n\t */\n\tacquireContext: function() {},\n\n\t/**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {Boolean} true if the method succeeded, else false\n\t */\n\treleaseContext: function() {},\n\n\t/**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {String} type - The ({@link IEvent}) type to listen for\n\t * @param {Function} listener - Receives a notification (an object that implements\n\t * the {@link IEvent} interface) when an event of the specified type occurs.\n\t */\n\taddEventListener: function() {},\n\n\t/**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart -Chart from which to remove the listener\n\t * @param {String} type - The ({@link IEvent}) type to remove\n\t * @param {Function} listener - The listener function to remove from the event target.\n\t */\n\tremoveEventListener: function() {}\n\n}, implementation);\n\n/**\n * @interface IPlatform\n * Allows abstracting platform dependencies away from the chart\n * @borrows Chart.platform.acquireContext as acquireContext\n * @borrows Chart.platform.releaseContext as releaseContext\n * @borrows Chart.platform.addEventListener as addEventListener\n * @borrows Chart.platform.removeEventListener as removeEventListener\n */\n\n/**\n * @interface IEvent\n * @prop {String} type - The event type name, possible values are:\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n */\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Radar = function(context, config) {\n\t\tconfig.type = 'radar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = {};\nmodule.exports.filler = require('./plugin.filler');\nmodule.exports.legend = require('./plugin.legend');\nmodule.exports.title = require('./plugin.title');\n","/* MIT license */\nvar colorNames = require('color-name');\n\nmodule.exports = {\n   getRgba: getRgba,\n   getHsla: getHsla,\n   getRgb: getRgb,\n   getHsl: getHsl,\n   getHwb: getHwb,\n   getAlpha: getAlpha,\n\n   hexString: hexString,\n   rgbString: rgbString,\n   rgbaString: rgbaString,\n   percentString: percentString,\n   percentaString: percentaString,\n   hslString: hslString,\n   hslaString: hslaString,\n   hwbString: hwbString,\n   keyword: keyword\n}\n\nfunction getRgba(string) {\n   if (!string) {\n      return;\n   }\n   var abbr =  /^#([a-fA-F0-9]{3})$/i,\n       hex =  /^#([a-fA-F0-9]{6})$/i,\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       keyword = /(\\w+)/;\n\n   var rgb = [0, 0, 0],\n       a = 1,\n       match = string.match(abbr);\n   if (match) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n   }\n   else if (match = string.match(hex)) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n   }\n   else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i + 1]);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n         return [0, 0, 0, 0];\n      }\n      rgb = colorNames[match[1]];\n      if (!rgb) {\n         return;\n      }\n   }\n\n   for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n   }\n   if (!a && a != 0) {\n      a = 1;\n   }\n   else {\n      a = scale(a, 0, 1);\n   }\n   rgb[3] = a;\n   return rgb;\n}\n\nfunction getHsla(string) {\n   if (!string) {\n      return;\n   }\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hsl);\n   if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n   }\n}\n\nfunction getHwb(string) {\n   if (!string) {\n      return;\n   }\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hwb);\n   if (match) {\n    var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n   }\n}\n\nfunction getRgb(string) {\n   var rgba = getRgba(string);\n   return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n   var vals = getRgba(string);\n   if (vals) {\n      return vals[3];\n   }\n   else if (vals = getHsla(string)) {\n      return vals[3];\n   }\n   else if (vals = getHwb(string)) {\n      return vals[3];\n   }\n}\n\n// generators\nfunction hexString(rgb) {\n   return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\n              + hexDouble(rgb[2]);\n}\n\nfunction rgbString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return rgbaString(rgba, alpha);\n   }\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n   if (alpha === undefined) {\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\n   }\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\n           + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return percentaString(rgba, alpha);\n   }\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\n      return hslaString(hsla, alpha);\n   }\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n   if (alpha === undefined) {\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\n   }\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\n           + alpha + \")\";\n}\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\nfunction hwbString(hwb, alpha) {\n   if (alpha === undefined) {\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\n   }\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n}\n\n// helpers\nfunction scale(num, min, max) {\n   return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return (str.length < 2) ? \"0\" + str : str;\n}\n\n\n//create a list of reverse color names\nvar reverseNames = {};\nfor (var name in colorNames) {\n   reverseNames[colorNames[name]] = name;\n}\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\ttitle: {\n\t\tdisplay: false,\n\t\tfontStyle: 'bold',\n\t\tfullWidth: true,\n\t\tlineHeight: 1.2,\n\t\tpadding: 10,\n\t\tposition: 'top',\n\t\ttext: '',\n\t\tweight: 2000         // by default greater than legend (1000) to be above\n\t}\n});\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Title = Element.extend({\n\tinitialize: function(config) {\n\t\tvar me = this;\n\t\thelpers.extend(me, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tme.legendHitBoxes = [];\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: noop,\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar display = opts.display;\n\t\tvar fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\n\t\tvar minSize = me.minSize;\n\t\tvar lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\tvar textSize = display ? (lineCount * lineHeight) + (opts.padding * 2) : 0;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = textSize;\n\t\t} else {\n\t\t\tminSize.width = textSize;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\tvar pos = this.options.position;\n\t\treturn pos === 'top' || pos === 'bottom';\n\t},\n\n\t// Actually draw the title block on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar ctx = me.ctx;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar globalDefaults = defaults.global;\n\n\t\tif (opts.display) {\n\t\t\tvar fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\tvar titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\t\tvar offset = lineHeight / 2 + opts.padding;\n\t\t\tvar rotation = 0;\n\t\t\tvar top = me.top;\n\t\t\tvar left = me.left;\n\t\t\tvar bottom = me.bottom;\n\t\t\tvar right = me.right;\n\t\t\tvar maxWidth, titleX, titleY;\n\n\t\t\tctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\t\t\tctx.font = titleFont;\n\n\t\t\t// Horizontal\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\ttitleY = top + offset;\n\t\t\t\tmaxWidth = right - left;\n\t\t\t} else {\n\t\t\t\ttitleX = opts.position === 'left' ? left + offset : right - offset;\n\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.translate(titleX, titleY);\n\t\t\tctx.rotate(rotation);\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.textBaseline = 'middle';\n\n\t\t\tvar text = opts.text;\n\t\t\tif (helpers.isArray(text)) {\n\t\t\t\tvar y = 0;\n\t\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\t\tctx.fillText(text[i], 0, y, maxWidth);\n\t\t\t\t\ty += lineHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.fillText(text, 0, 0, maxWidth);\n\t\t\t}\n\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n\tvar title = new Title({\n\t\tctx: chart.ctx,\n\t\toptions: titleOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, title, titleOpts);\n\tlayouts.addBox(chart, title);\n\tchart.titleBlock = title;\n}\n\nmodule.exports = {\n\tid: 'title',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n\t * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Title,\n\n\tbeforeInit: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\n\t\tif (titleOpts) {\n\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\t\tvar titleBlock = chart.titleBlock;\n\n\t\tif (titleOpts) {\n\t\t\thelpers.mergeIf(titleOpts, defaults.global.title);\n\n\t\t\tif (titleBlock) {\n\t\t\t\tlayouts.configure(chart, titleBlock, titleOpts);\n\t\t\t\ttitleBlock.options = titleOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t\t}\n\t\t} else if (titleBlock) {\n\t\t\tlayouts.removeBox(chart, titleBlock);\n\t\t\tdelete chart.titleBlock;\n\t\t}\n\t}\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {Point} the event position\n */\nfunction getRelativePosition(e, chart) {\n\tif (e.native) {\n\t\treturn {\n\t\t\tx: e.x,\n\t\t\ty: e.y\n\t\t};\n\t}\n\n\treturn helpers.getRelativePosition(e, chart);\n}\n\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param chart {chart} the chart\n * @param handler {Function} the callback to execute for each visible item\n */\nfunction parseVisibleItems(chart, handler) {\n\tvar datasets = chart.data.datasets;\n\tvar meta, i, j, ilen, jlen;\n\n\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmeta = chart.getDatasetMeta(i);\n\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\tvar element = meta.data[j];\n\t\t\tif (!element._view.skip) {\n\t\t\t\thandler(element);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param items {ChartElement[]} elements to filter\n * @param position {Point} the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\nfunction getIntersectItems(chart, position) {\n\tvar elements = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (element.inRange(position.x, position.y)) {\n\t\t\telements.push(element);\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param chart {Chart} the chart to look at elements from\n * @param position {Point} the point to be nearest to\n * @param intersect {Boolean} if true, only consider items that intersect the position\n * @param distanceMetric {Function} function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\tvar minDistance = Number.POSITIVE_INFINITY;\n\tvar nearestItems = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar center = element.getCenterPoint();\n\t\tvar distance = distanceMetric(position, center);\n\n\t\tif (distance < minDistance) {\n\t\t\tnearestItems = [element];\n\t\t\tminDistance = distance;\n\t\t} else if (distance === minDistance) {\n\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\tnearestItems.push(element);\n\t\t}\n\t});\n\n\treturn nearestItems;\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {String} axis the axis mode. x|y|xy\n */\nfunction getDistanceMetricForAxis(axis) {\n\tvar useX = axis.indexOf('x') !== -1;\n\tvar useY = axis.indexOf('y') !== -1;\n\n\treturn function(pt1, pt2) {\n\t\tvar deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n\t\tvar deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n\t\treturn Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n\t};\n}\n\nfunction indexMode(chart, e, options) {\n\tvar position = getRelativePosition(e, chart);\n\t// Default axis for index mode is 'x' to match old behaviour\n\toptions.axis = options.axis || 'x';\n\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\tvar elements = [];\n\n\tif (!items.length) {\n\t\treturn [];\n\t}\n\n\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\tvar element = meta.data[items[0]._index];\n\n\t\t\t// don't count items that are skipped (null data)\n\t\t\tif (element && !element._view.skip) {\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * @interface IInteractionOptions\n */\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nmodule.exports = {\n\t// Helper function for different modes\n\tmodes: {\n\t\tsingle: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar elements = [];\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t\treturn elements;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn elements.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.label\n\t\t * @deprecated since version 2.4.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tlabel: indexMode,\n\n\t\t/**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tindex: indexMode,\n\n\t\t/**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tdataset: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n\t\t\tif (items.length > 0) {\n\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t}\n\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.x-axis\n\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\t'x-axis': function(chart, e) {\n\t\t\treturn indexMode(chart, e, {intersect: false});\n\t\t},\n\n\t\t/**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tpoint: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\treturn getIntersectItems(chart, position);\n\t\t},\n\n\t\t/**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tnearest: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric);\n\n\t\t\t// We have multiple items at the same distance from the event. Now sort by smallest\n\t\t\tif (nearestItems.length > 1) {\n\t\t\t\tnearestItems.sort(function(a, b) {\n\t\t\t\t\tvar sizeA = a.getArea();\n\t\t\t\t\tvar sizeB = b.getArea();\n\t\t\t\t\tvar ret = sizeA - sizeB;\n\n\t\t\t\t\tif (ret === 0) {\n\t\t\t\t\t\t// if equal sort by dataset index\n\t\t\t\t\t\tret = a._datasetIndex - b._datasetIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn ret;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Return only 1 item\n\t\t\treturn nearestItems.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tx: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\ty: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n};\n","/* global window: false */\n/* global document: false */\n'use strict';\n\nvar color = require('chartjs-color');\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\n\nmodule.exports = function(Chart) {\n\n\t// -- Basic js utility methods\n\n\thelpers.configMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tvar tval = target[key] || {};\n\t\t\t\tvar sval = source[key];\n\n\t\t\t\tif (key === 'scales') {\n\t\t\t\t\t// scale config merging is complex. Add our own function here for that\n\t\t\t\t\ttarget[key] = helpers.scaleMerge(tval, sval);\n\t\t\t\t} else if (key === 'scale') {\n\t\t\t\t\t// used in polar area & radar charts since there is only one scale\n\t\t\t\t\ttarget[key] = helpers.merge(tval, [Chart.scaleService.getScaleDefaults(sval.type), sval]);\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.scaleMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\t\tvar slen = source[key].length;\n\t\t\t\t\tvar i, type, scale;\n\n\t\t\t\t\tif (!target[key]) {\n\t\t\t\t\t\ttarget[key] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (i = 0; i < slen; ++i) {\n\t\t\t\t\t\tscale = source[key][i];\n\t\t\t\t\t\ttype = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n\t\t\t\t\t\tif (i >= target[key].length) {\n\t\t\t\t\t\t\ttarget[key].push({});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\n\t\t\t\t\t\t\t// new/untyped scale or type changed: let's apply the new defaults\n\t\t\t\t\t\t\t// then merge source scale to correctly overwrite the defaults.\n\t\t\t\t\t\t\thelpers.merge(target[key][i], [Chart.scaleService.getScaleDefaults(type), scale]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// scales type are the same\n\t\t\t\t\t\t\thelpers.merge(target[key][i], scale);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.where = function(collection, filterCallback) {\n\t\tif (helpers.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers.findIndex = Array.prototype.findIndex ?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined ? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\n\t// -- Math methods\n\thelpers.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers.almostWhole = function(x, epsilon) {\n\t\tvar rounded = Math.round(x);\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n\t};\n\thelpers.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers.sign = Math.sign ?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers.log10 = Math.log10 ?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tvar exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n\t\t\t// Check for whole powers of 10,\n\t\t\t// which due to floating point rounding error should be corrected.\n\t\t\tvar powerOf10 = Math.round(exponent);\n\t\t\tvar isPowerOf10 = x === Math.pow(10, powerOf10);\n\n\t\t\treturn isPowerOf10 ? powerOf10 : exponent;\n\t\t};\n\thelpers.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x;\n\t\tvar distanceFromYCenter = anglePoint.y - centrePoint.y;\n\t\tvar radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers.distanceBetweenPoints = function(pt1, pt2) {\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t};\n\thelpers.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\thelpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint;\n\t\tvar current = middlePoint;\n\t\tvar next = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers.EPSILON = Number.EPSILON || 1e-14;\n\thelpers.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers.requestAnimFrame = (function() {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn function(callback) {\n\t\t\t\tcallback();\n\t\t\t};\n\t\t}\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt;\n\t\tvar canvas = evt.currentTarget || evt.srcElement;\n\t\tvar boundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof styleValue === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t// Private helper to get a constraint dimension\n\t// @param domNode : the node to check the constraint on\n\t// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n\t// @param percentageProperty : property of parent to use when calculating width as a percentage\n\t// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = domNode.parentNode;\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\thelpers.getMaximumWidth = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tif (!container) {\n\t\t\treturn domNode.clientWidth;\n\t\t}\n\n\t\tvar paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);\n\t\tvar paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);\n\t\tvar w = container.clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers.getConstraintWidth(domNode);\n\t\treturn isNaN(cw) ? w : Math.min(w, cw);\n\t};\n\thelpers.getMaximumHeight = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tif (!container) {\n\t\t\treturn domNode.clientHeight;\n\t\t}\n\n\t\tvar paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);\n\t\tvar paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);\n\t\tvar h = container.clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers.getConstraintHeight(domNode);\n\t\treturn isNaN(ch) ? h : Math.min(h, ch);\n\t};\n\thelpers.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers.retinaScale = function(chart, forceRatio) {\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = forceRatio || window.devicePixelRatio || 1;\n\t\tif (pixelRatio === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar canvas = chart.canvas;\n\t\tvar height = chart.height;\n\t\tvar width = chart.width;\n\n\t\tcanvas.height = height * pixelRatio;\n\t\tcanvas.width = width * pixelRatio;\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\n\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\tif (!canvas.style.height && !canvas.style.width) {\n\t\t\tcanvas.style.height = height + 'px';\n\t\t\tcanvas.style.width = width + 'px';\n\t\t}\n\t};\n\t// -- Canvas methods\n\thelpers.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\n\thelpers.color = !color ?\n\t\tfunction(value) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn value;\n\t\t} :\n\t\tfunction(value) {\n\t\t\t/* global CanvasGradient */\n\t\t\tif (value instanceof CanvasGradient) {\n\t\t\t\tvalue = defaults.global.defaultColor;\n\t\t\t}\n\n\t\t\treturn color(value);\n\t\t};\n\n\thelpers.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern) ?\n\t\t\tcolorValue :\n\t\t\thelpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t// for details.\n\n\tvar spacing;\n\tif (generationOptions.stepSize && generationOptions.stepSize > 0) {\n\t\tspacing = generationOptions.stepSize;\n\t} else {\n\t\tvar niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n\t\tspacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n\t}\n\tvar niceMin = Math.floor(dataRange.min / spacing) * spacing;\n\tvar niceMax = Math.ceil(dataRange.max / spacing) * spacing;\n\n\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\tif (generationOptions.min && generationOptions.max && generationOptions.stepSize) {\n\t\t// If very close to our whole number, use it.\n\t\tif (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n\t\t\tniceMin = generationOptions.min;\n\t\t\tniceMax = generationOptions.max;\n\t\t}\n\t}\n\n\tvar numSpaces = (niceMax - niceMin) / spacing;\n\t// If very close to our rounded value, use it.\n\tif (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\tnumSpaces = Math.round(numSpaces);\n\t} else {\n\t\tnumSpaces = Math.ceil(numSpaces);\n\t}\n\n\tvar precision = 1;\n\tif (spacing < 1) {\n\t\tprecision = Math.pow(10, spacing.toString().length - 2);\n\t\tniceMin = Math.round(niceMin * precision) / precision;\n\t\tniceMax = Math.round(niceMax * precision) / precision;\n\t}\n\tticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\tfor (var j = 1; j < numSpaces; ++j) {\n\t\tticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n\t}\n\tticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar noop = helpers.noop;\n\n\tChart.LinearScaleBase = Chart.Scale.extend({\n\t\tgetRightValue: function(value) {\n\t\t\tif (typeof value === 'string') {\n\t\t\t\treturn +value;\n\t\t\t}\n\t\t\treturn Chart.Scale.prototype.getRightValue.call(this, value);\n\t\t},\n\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t\t// axis, they can manually override it\n\t\t\tif (tickOpts.beginAtZero) {\n\t\t\t\tvar minSign = helpers.sign(me.min);\n\t\t\t\tvar maxSign = helpers.sign(me.max);\n\n\t\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t\t// move the top up to 0\n\t\t\t\t\tme.max = 0;\n\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t\t// move the bottom down to 0\n\t\t\t\t\tme.min = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n\t\t\tvar setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n\t\t\tif (tickOpts.min !== undefined) {\n\t\t\t\tme.min = tickOpts.min;\n\t\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\t\tif (me.min === null) {\n\t\t\t\t\tme.min = tickOpts.suggestedMin;\n\t\t\t\t} else {\n\t\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tickOpts.max !== undefined) {\n\t\t\t\tme.max = tickOpts.max;\n\t\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\t\tif (me.max === null) {\n\t\t\t\t\tme.max = tickOpts.suggestedMax;\n\t\t\t\t} else {\n\t\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (setMin !== setMax) {\n\t\t\t\t// We set the min or the max but not both.\n\t\t\t\t// So ensure that our range is good\n\t\t\t\t// Inverted or 0 length range can happen when\n\t\t\t\t// ticks.min is set, and no datasets are visible\n\t\t\t\tif (me.min >= me.max) {\n\t\t\t\t\tif (setMin) {\n\t\t\t\t\t\tme.max = me.min + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.min = me.max - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tme.max++;\n\n\t\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\t\tme.min--;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetTickLimit: noop,\n\t\thandleDirectionalChanges: noop,\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t\t// the graph. Make sure we always have at least 2 ticks\n\t\t\tvar maxTicks = me.getTickLimit();\n\t\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\t\tvar numericGeneratorOptions = {\n\t\t\t\tmaxTicks: maxTicks,\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max,\n\t\t\t\tstepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n\n\t\t\tme.handleDirectionalChanges();\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\tticks.reverse();\n\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(me);\n\t\t}\n\t});\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.PolarArea = function(context, config) {\n\t\tconfig.type = 'polarArea';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\n'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nvar EVENT_TYPES = {\n\ttouchstart: 'mousedown',\n\ttouchmove: 'mousemove',\n\ttouchend: 'mouseup',\n\tpointerenter: 'mouseenter',\n\tpointerdown: 'mousedown',\n\tpointermove: 'mousemove',\n\tpointerup: 'mouseup',\n\tpointerleave: 'mouseout',\n\tpointerout: 'mouseout'\n};\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {Number} Size in pixels or undefined if unknown.\n */\nfunction readUsedSize(element, property) {\n\tvar value = helpers.getStyle(element, property);\n\tvar matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n\treturn matches ? Number(matches[1]) : undefined;\n}\n\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\nfunction initCanvas(canvas, config) {\n\tvar style = canvas.style;\n\n\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\tvar renderHeight = canvas.getAttribute('height');\n\tvar renderWidth = canvas.getAttribute('width');\n\n\t// Chart.js modifies some canvas values that we want to restore on destroy\n\tcanvas[EXPANDO_KEY] = {\n\t\tinitial: {\n\t\t\theight: renderHeight,\n\t\t\twidth: renderWidth,\n\t\t\tstyle: {\n\t\t\t\tdisplay: style.display,\n\t\t\t\theight: style.height,\n\t\t\t\twidth: style.width\n\t\t\t}\n\t\t}\n\t};\n\n\t// Force canvas to display as block to avoid extra space caused by inline\n\t// elements, which would interfere with the responsive resize process.\n\t// https://github.com/chartjs/Chart.js/issues/2538\n\tstyle.display = style.display || 'block';\n\n\tif (renderWidth === null || renderWidth === '') {\n\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\tif (displayWidth !== undefined) {\n\t\t\tcanvas.width = displayWidth;\n\t\t}\n\t}\n\n\tif (renderHeight === null || renderHeight === '') {\n\t\tif (canvas.style.height === '') {\n\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t} else {\n\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\tif (displayWidth !== undefined) {\n\t\t\t\tcanvas.height = displayHeight;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn canvas;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nvar supportsEventListenerOptions = (function() {\n\tvar supports = false;\n\ttry {\n\t\tvar options = Object.defineProperty({}, 'passive', {\n\t\t\tget: function() {\n\t\t\t\tsupports = true;\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('e', null, options);\n\t} catch (e) {\n\t\t// continue regardless of error\n\t}\n\treturn supports;\n}());\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nvar eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addEventListener(node, type, listener) {\n\tnode.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeEventListener(node, type, listener) {\n\tnode.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n\treturn {\n\t\ttype: type,\n\t\tchart: chart,\n\t\tnative: nativeEvent || null,\n\t\tx: x !== undefined ? x : null,\n\t\ty: y !== undefined ? y : null,\n\t};\n}\n\nfunction fromNativeEvent(event, chart) {\n\tvar type = EVENT_TYPES[event.type] || event.type;\n\tvar pos = helpers.getRelativePosition(event, chart);\n\treturn createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n\tvar ticking = false;\n\tvar args = [];\n\n\treturn function() {\n\t\targs = Array.prototype.slice.call(arguments);\n\t\tthisArg = thisArg || this;\n\n\t\tif (!ticking) {\n\t\t\tticking = true;\n\t\t\thelpers.requestAnimFrame.call(window, function() {\n\t\t\t\tticking = false;\n\t\t\t\tfn.apply(thisArg, args);\n\t\t\t});\n\t\t}\n\t};\n}\n\n// Implementation based on https://github.com/marcj/css-element-queries\nfunction createResizer(handler) {\n\tvar resizer = document.createElement('div');\n\tvar cls = CSS_PREFIX + 'size-monitor';\n\tvar maxSize = 1000000;\n\tvar style =\n\t\t'position:absolute;' +\n\t\t'left:0;' +\n\t\t'top:0;' +\n\t\t'right:0;' +\n\t\t'bottom:0;' +\n\t\t'overflow:hidden;' +\n\t\t'pointer-events:none;' +\n\t\t'visibility:hidden;' +\n\t\t'z-index:-1;';\n\n\tresizer.style.cssText = style;\n\tresizer.className = cls;\n\tresizer.innerHTML =\n\t\t'<div class=\"' + cls + '-expand\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:' + maxSize + 'px;' +\n\t\t\t\t'height:' + maxSize + 'px;' +\n\t\t\t\t'left:0;' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>' +\n\t\t'<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:200%;' +\n\t\t\t\t'height:200%;' +\n\t\t\t\t'left:0; ' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>';\n\n\tvar expand = resizer.childNodes[0];\n\tvar shrink = resizer.childNodes[1];\n\n\tresizer._reset = function() {\n\t\texpand.scrollLeft = maxSize;\n\t\texpand.scrollTop = maxSize;\n\t\tshrink.scrollLeft = maxSize;\n\t\tshrink.scrollTop = maxSize;\n\t};\n\tvar onScroll = function() {\n\t\tresizer._reset();\n\t\thandler();\n\t};\n\n\taddEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\taddEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n\treturn resizer;\n}\n\n// https://davidwalsh.name/detect-node-insertion\nfunction watchForRender(node, handler) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\tvar proxy = expando.renderProxy = function(e) {\n\t\tif (e.animationName === CSS_RENDER_ANIMATION) {\n\t\t\thandler();\n\t\t}\n\t};\n\n\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\taddEventListener(node, type, proxy);\n\t});\n\n\t// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n\t// is removed then added back immediately (same animation frame?). Accessing the\n\t// `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n\t// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n\t// https://github.com/chartjs/Chart.js/issues/4737\n\texpando.reflow = !!node.offsetParent;\n\n\tnode.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar proxy = expando.renderProxy;\n\n\tif (proxy) {\n\t\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\t\tremoveEventListener(node, type, proxy);\n\t\t});\n\n\t\tdelete expando.renderProxy;\n\t}\n\n\tnode.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n\t// Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\tvar resizer = expando.resizer = createResizer(throttled(function() {\n\t\tif (expando.resizer) {\n\t\t\treturn listener(createEvent('resize', chart));\n\t\t}\n\t}));\n\n\t// The resizer needs to be attached to the node parent, so we first need to be\n\t// sure that `node` is attached to the DOM before injecting the resizer element.\n\twatchForRender(node, function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = node.parentNode;\n\t\t\tif (container && container !== resizer.parentNode) {\n\t\t\t\tcontainer.insertBefore(resizer, container.firstChild);\n\t\t\t}\n\n\t\t\t// The container size might have changed, let's reset the resizer state.\n\t\t\tresizer._reset();\n\t\t}\n\t});\n}\n\nfunction removeResizeListener(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar resizer = expando.resizer;\n\n\tdelete expando.resizer;\n\tunwatchForRender(node);\n\n\tif (resizer && resizer.parentNode) {\n\t\tresizer.parentNode.removeChild(resizer);\n\t}\n}\n\nfunction injectCSS(platform, css) {\n\t// http://stackoverflow.com/q/3922139\n\tvar style = platform._style || document.createElement('style');\n\tif (!platform._style) {\n\t\tplatform._style = style;\n\t\tcss = '/* Chart.js */\\n' + css;\n\t\tstyle.setAttribute('type', 'text/css');\n\t\tdocument.getElementsByTagName('head')[0].appendChild(style);\n\t}\n\n\tstyle.appendChild(document.createTextNode(css));\n}\n\nmodule.exports = {\n\t/**\n\t * This property holds whether this platform is enabled for the current environment.\n\t * Currently used by platform.js to select the proper implementation.\n\t * @private\n\t */\n\t_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n\tinitialize: function() {\n\t\tvar keyframes = 'from{opacity:0.99}to{opacity:1}';\n\n\t\tinjectCSS(this,\n\t\t\t// DOM rendering detection\n\t\t\t// https://davidwalsh.name/detect-node-insertion\n\t\t\t'@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'.' + CSS_RENDER_MONITOR + '{' +\n\t\t\t\t'-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t\t'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t'}'\n\t\t);\n\t},\n\n\tacquireContext: function(item, config) {\n\t\tif (typeof item === 'string') {\n\t\t\titem = document.getElementById(item);\n\t\t} else if (item.length) {\n\t\t\t// Support for array based queries (such as jQuery)\n\t\t\titem = item[0];\n\t\t}\n\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\tvar context = item && item.getContext && item.getContext('2d');\n\n\t\t// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n\t\t// inside an iframe or when running in a protected environment. We could guess the\n\t\t// types from their toString() value but let's keep things flexible and assume it's\n\t\t// a sufficient condition if the item has a context2D which has item as `canvas`.\n\t\t// https://github.com/chartjs/Chart.js/issues/3887\n\t\t// https://github.com/chartjs/Chart.js/issues/4102\n\t\t// https://github.com/chartjs/Chart.js/issues/4152\n\t\tif (context && context.canvas === item) {\n\t\t\tinitCanvas(item, config);\n\t\t\treturn context;\n\t\t}\n\n\t\treturn null;\n\t},\n\n\treleaseContext: function(context) {\n\t\tvar canvas = context.canvas;\n\t\tif (!canvas[EXPANDO_KEY]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar initial = canvas[EXPANDO_KEY].initial;\n\t\t['height', 'width'].forEach(function(prop) {\n\t\t\tvar value = initial[prop];\n\t\t\tif (helpers.isNullOrUndef(value)) {\n\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t} else {\n\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(initial.style || {}, function(value, key) {\n\t\t\tcanvas.style[key] = value;\n\t\t});\n\n\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\tcanvas.width = canvas.width;\n\n\t\tdelete canvas[EXPANDO_KEY];\n\t},\n\n\taddEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\taddResizeListener(canvas, listener, chart);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n\t\tvar proxies = expando.proxies || (expando.proxies = {});\n\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\n\t\t\tlistener(fromNativeEvent(event, chart));\n\t\t};\n\n\t\taddEventListener(canvas, type, proxy);\n\t},\n\n\tremoveEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\tremoveResizeListener(canvas, listener);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || {};\n\t\tvar proxies = expando.proxies || {};\n\t\tvar proxy = proxies[chart.id + '_' + type];\n\t\tif (!proxy) {\n\t\t\treturn;\n\t\t}\n\n\t\tremoveEventListener(canvas, type, proxy);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.addEvent = addEventListener;\n\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.removeEvent = removeEventListener;\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar layouts = require('./core.layouts');\n\nmodule.exports = function(Chart) {\n\n\tChart.scaleService = {\n\t\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t\t// use the new chart options to grab the correct scale\n\t\tconstructors: {},\n\t\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t\t// old browsers\n\n\t\t// Scale config defaults\n\t\tdefaults: {},\n\t\tregisterScaleType: function(type, scaleConstructor, scaleDefaults) {\n\t\t\tthis.constructors[type] = scaleConstructor;\n\t\t\tthis.defaults[type] = helpers.clone(scaleDefaults);\n\t\t},\n\t\tgetScaleConstructor: function(type) {\n\t\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t\t},\n\t\tgetScaleDefaults: function(type) {\n\t\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\t\treturn this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n\t\t},\n\t\tupdateScaleDefaults: function(type, additions) {\n\t\t\tvar me = this;\n\t\t\tif (me.defaults.hasOwnProperty(type)) {\n\t\t\t\tme.defaults[type] = helpers.extend(me.defaults[type], additions);\n\t\t\t}\n\t\t},\n\t\taddScalesToLayout: function(chart) {\n\t\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\t\thelpers.each(chart.scales, function(scale) {\n\t\t\t\t// Set ILayoutItem parameters for backwards compatibility\n\t\t\t\tscale.fullWidth = scale.options.fullWidth;\n\t\t\t\tscale.position = scale.options.position;\n\t\t\t\tscale.weight = scale.options.weight;\n\t\t\t\tlayouts.addBox(chart, scale);\n\t\t\t});\n\t\t}\n\t};\n};\n","/* MIT license */\n\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n}\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n","var conversions = require(\"./conversions\");\n\nvar convert = function() {\n   return new Converter();\n}\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   }\n});\n\nmodule.exports = convert;","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\nvar effects = {\n\tlinear: function(t) {\n\t\treturn t;\n\t},\n\n\teaseInQuad: function(t) {\n\t\treturn t * t;\n\t},\n\n\teaseOutQuad: function(t) {\n\t\treturn -t * (t - 2);\n\t},\n\n\teaseInOutQuad: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t;\n\t\t}\n\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t},\n\n\teaseInCubic: function(t) {\n\t\treturn t * t * t;\n\t},\n\n\teaseOutCubic: function(t) {\n\t\treturn (t = t - 1) * t * t + 1;\n\t},\n\n\teaseInOutCubic: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t},\n\n\teaseInQuart: function(t) {\n\t\treturn t * t * t * t;\n\t},\n\n\teaseOutQuart: function(t) {\n\t\treturn -((t = t - 1) * t * t * t - 1);\n\t},\n\n\teaseInOutQuart: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t;\n\t\t}\n\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t},\n\n\teaseInQuint: function(t) {\n\t\treturn t * t * t * t * t;\n\t},\n\n\teaseOutQuint: function(t) {\n\t\treturn (t = t - 1) * t * t * t * t + 1;\n\t},\n\n\teaseInOutQuint: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t},\n\n\teaseInSine: function(t) {\n\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t},\n\n\teaseOutSine: function(t) {\n\t\treturn Math.sin(t * (Math.PI / 2));\n\t},\n\n\teaseInOutSine: function(t) {\n\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t},\n\n\teaseInExpo: function(t) {\n\t\treturn (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\n\t},\n\n\teaseOutExpo: function(t) {\n\t\treturn (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\n\t},\n\n\teaseInOutExpo: function(t) {\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t}\n\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t},\n\n\teaseInCirc: function(t) {\n\t\tif (t >= 1) {\n\t\t\treturn t;\n\t\t}\n\t\treturn -(Math.sqrt(1 - t * t) - 1);\n\t},\n\n\teaseOutCirc: function(t) {\n\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t},\n\n\teaseInOutCirc: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t}\n\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t},\n\n\teaseInElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t},\n\n\teaseOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t},\n\n\teaseInOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif ((t /= 0.5) === 2) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.45;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\tif (t < 1) {\n\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t\t}\n\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t},\n\teaseInBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn t * t * ((s + 1) * t - s);\n\t},\n\n\teaseOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t},\n\n\teaseInOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t},\n\n\teaseInBounce: function(t) {\n\t\treturn 1 - effects.easeOutBounce(1 - t);\n\t},\n\n\teaseOutBounce: function(t) {\n\t\tif (t < (1 / 2.75)) {\n\t\t\treturn 7.5625 * t * t;\n\t\t}\n\t\tif (t < (2 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t}\n\t\tif (t < (2.5 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t}\n\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t},\n\n\teaseInOutBounce: function(t) {\n\t\tif (t < 0.5) {\n\t\t\treturn effects.easeInBounce(t * 2) * 0.5;\n\t\t}\n\t\treturn effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t}\n};\n\nmodule.exports = {\n\teffects: effects\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.easingEffects = effects;\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\n'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tplugins: {\n\t\tfiller: {\n\t\t\tpropagate: true\n\t\t}\n\t}\n});\n\nvar mappers = {\n\tdataset: function(source) {\n\t\tvar index = source.fill;\n\t\tvar chart = source.chart;\n\t\tvar meta = chart.getDatasetMeta(index);\n\t\tvar visible = meta && chart.isDatasetVisible(index);\n\t\tvar points = (visible && meta.dataset._children) || [];\n\t\tvar length = points.length || 0;\n\n\t\treturn !length ? null : function(point, i) {\n\t\t\treturn (i < length && points[i]._view) || null;\n\t\t};\n\t},\n\n\tboundary: function(source) {\n\t\tvar boundary = source.boundary;\n\t\tvar x = boundary ? boundary.x : null;\n\t\tvar y = boundary ? boundary.y : null;\n\n\t\treturn function(point) {\n\t\t\treturn {\n\t\t\t\tx: x === null ? point.x : x,\n\t\t\t\ty: y === null ? point.y : y,\n\t\t\t};\n\t\t};\n\t}\n};\n\n// @todo if (fill[0] === '#')\nfunction decodeFill(el, index, count) {\n\tvar model = el._model || {};\n\tvar fill = model.fill;\n\tvar target;\n\n\tif (fill === undefined) {\n\t\tfill = !!model.backgroundColor;\n\t}\n\n\tif (fill === false || fill === null) {\n\t\treturn false;\n\t}\n\n\tif (fill === true) {\n\t\treturn 'origin';\n\t}\n\n\ttarget = parseFloat(fill, 10);\n\tif (isFinite(target) && Math.floor(target) === target) {\n\t\tif (fill[0] === '-' || fill[0] === '+') {\n\t\t\ttarget = index + target;\n\t\t}\n\n\t\tif (target === index || target < 0 || target >= count) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn target;\n\t}\n\n\tswitch (fill) {\n\t// compatibility\n\tcase 'bottom':\n\t\treturn 'start';\n\tcase 'top':\n\t\treturn 'end';\n\tcase 'zero':\n\t\treturn 'origin';\n\t// supported boundaries\n\tcase 'origin':\n\tcase 'start':\n\tcase 'end':\n\t\treturn fill;\n\t// invalid fill values\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nfunction computeBoundary(source) {\n\tvar model = source.el._model || {};\n\tvar scale = source.el._scale || {};\n\tvar fill = source.fill;\n\tvar target = null;\n\tvar horizontal;\n\n\tif (isFinite(fill)) {\n\t\treturn null;\n\t}\n\n\t// Backward compatibility: until v3, we still need to support boundary values set on\n\t// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n\t// controllers might still use it (e.g. the Smith chart).\n\n\tif (fill === 'start') {\n\t\ttarget = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n\t} else if (fill === 'end') {\n\t\ttarget = model.scaleTop === undefined ? scale.top : model.scaleTop;\n\t} else if (model.scaleZero !== undefined) {\n\t\ttarget = model.scaleZero;\n\t} else if (scale.getBasePosition) {\n\t\ttarget = scale.getBasePosition();\n\t} else if (scale.getBasePixel) {\n\t\ttarget = scale.getBasePixel();\n\t}\n\n\tif (target !== undefined && target !== null) {\n\t\tif (target.x !== undefined && target.y !== undefined) {\n\t\t\treturn target;\n\t\t}\n\n\t\tif (typeof target === 'number' && isFinite(target)) {\n\t\t\thorizontal = scale.isHorizontal();\n\t\t\treturn {\n\t\t\t\tx: horizontal ? target : null,\n\t\t\t\ty: horizontal ? null : target\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n\tvar source = sources[index];\n\tvar fill = source.fill;\n\tvar visited = [index];\n\tvar target;\n\n\tif (!propagate) {\n\t\treturn fill;\n\t}\n\n\twhile (fill !== false && visited.indexOf(fill) === -1) {\n\t\tif (!isFinite(fill)) {\n\t\t\treturn fill;\n\t\t}\n\n\t\ttarget = sources[fill];\n\t\tif (!target) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (target.visible) {\n\t\t\treturn fill;\n\t\t}\n\n\t\tvisited.push(fill);\n\t\tfill = target.fill;\n\t}\n\n\treturn false;\n}\n\nfunction createMapper(source) {\n\tvar fill = source.fill;\n\tvar type = 'dataset';\n\n\tif (fill === false) {\n\t\treturn null;\n\t}\n\n\tif (!isFinite(fill)) {\n\t\ttype = 'boundary';\n\t}\n\n\treturn mappers[type](source);\n}\n\nfunction isDrawable(point) {\n\treturn point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n\tvar i;\n\n\tif (!len0 || !len1) {\n\t\treturn;\n\t}\n\n\t// building first area curve (normal)\n\tctx.moveTo(curve0[0].x, curve0[0].y);\n\tfor (i = 1; i < len0; ++i) {\n\t\thelpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n\t}\n\n\t// joining the two area curves\n\tctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\n\n\t// building opposite area curve (reverse)\n\tfor (i = len1 - 1; i > 0; --i) {\n\t\thelpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n\t}\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n\tvar count = points.length;\n\tvar span = view.spanGaps;\n\tvar curve0 = [];\n\tvar curve1 = [];\n\tvar len0 = 0;\n\tvar len1 = 0;\n\tvar i, ilen, index, p0, p1, d0, d1;\n\n\tctx.beginPath();\n\n\tfor (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\n\t\tindex = i % count;\n\t\tp0 = points[index]._view;\n\t\tp1 = mapper(p0, index, view);\n\t\td0 = isDrawable(p0);\n\t\td1 = isDrawable(p1);\n\n\t\tif (d0 && d1) {\n\t\t\tlen0 = curve0.push(p0);\n\t\t\tlen1 = curve1.push(p1);\n\t\t} else if (len0 && len1) {\n\t\t\tif (!span) {\n\t\t\t\tdrawArea(ctx, curve0, curve1, len0, len1);\n\t\t\t\tlen0 = len1 = 0;\n\t\t\t\tcurve0 = [];\n\t\t\t\tcurve1 = [];\n\t\t\t} else {\n\t\t\t\tif (d0) {\n\t\t\t\t\tcurve0.push(p0);\n\t\t\t\t}\n\t\t\t\tif (d1) {\n\t\t\t\t\tcurve1.push(p1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawArea(ctx, curve0, curve1, len0, len1);\n\n\tctx.closePath();\n\tctx.fillStyle = color;\n\tctx.fill();\n}\n\nmodule.exports = {\n\tid: 'filler',\n\n\tafterDatasetsUpdate: function(chart, options) {\n\t\tvar count = (chart.data.datasets || []).length;\n\t\tvar propagate = options.propagate;\n\t\tvar sources = [];\n\t\tvar meta, i, el, source;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tel = meta.dataset;\n\t\t\tsource = null;\n\n\t\t\tif (el && el._model && el instanceof elements.Line) {\n\t\t\t\tsource = {\n\t\t\t\t\tvisible: chart.isDatasetVisible(i),\n\t\t\t\t\tfill: decodeFill(el, i, count),\n\t\t\t\t\tchart: chart,\n\t\t\t\t\tel: el\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tmeta.$filler = source;\n\t\t\tsources.push(source);\n\t\t}\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!source) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsource.fill = resolveTarget(sources, i, propagate);\n\t\t\tsource.boundary = computeBoundary(source);\n\t\t\tsource.mapper = createMapper(source);\n\t\t}\n\t},\n\n\tbeforeDatasetDraw: function(chart, args) {\n\t\tvar meta = args.meta.$filler;\n\t\tif (!meta) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ctx = chart.ctx;\n\t\tvar el = meta.el;\n\t\tvar view = el._view;\n\t\tvar points = el._children || [];\n\t\tvar mapper = meta.mapper;\n\t\tvar color = view.backgroundColor || defaults.global.defaultColor;\n\n\t\tif (mapper && color && points.length) {\n\t\t\thelpers.canvas.clipArea(ctx, chart.chartArea);\n\t\t\tdoFill(ctx, points, mapper, view, color, el._loop);\n\t\t\thelpers.canvas.unclipArea(ctx);\n\t\t}\n\t}\n};\n","'use strict';\n\nmodule.exports = {};\nmodule.exports.Arc = require('./element.arc');\nmodule.exports.Line = require('./element.line');\nmodule.exports.Point = require('./element.point');\nmodule.exports.Rectangle = require('./element.rectangle');\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\ttooltips: {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'nearest',\n\t\tposition: 'average',\n\t\tintersect: true,\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tcaretPadding: 2,\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tdisplayColors: true,\n\t\tborderColor: 'rgba(0,0,0,0)',\n\t\tborderWidth: 0,\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\n\t\t\t\t\tif (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel += ': ';\n\t\t\t\t}\n\t\t\t\tlabel += tooltipItem.yLabel;\n\t\t\t\treturn label;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chart) {\n\t\t\t\tvar meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tlabelTextColor: function() {\n\t\t\t\treturn this._options.bodyFontColor;\n\t\t\t},\n\t\t\tafterLabel: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers.noop,\n\t\t\tfooter: helpers.noop,\n\t\t\tafterFooter: helpers.noop\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\t/**\n \t * Helper method to merge the opacity into a color\n \t */\n\tfunction mergeOpacity(colorString, opacity) {\n\t\tvar color = helpers.color(colorString);\n\t\treturn color.alpha(opacity * color.alpha()).rgbaString();\n\t}\n\n\t// Helper to push or concat based on if the 2nd parameter is an array or not\n\tfunction pushOrConcat(base, toPush) {\n\t\tif (toPush) {\n\t\t\tif (helpers.isArray(toPush)) {\n\t\t\t\t// base = base.concat(toPush);\n\t\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t\t} else {\n\t\t\t\tbase.push(toPush);\n\t\t\t}\n\t\t}\n\n\t\treturn base;\n\t}\n\n\t// Private helper to create a tooltip item model\n\t// @param element : the chart element (point, arc, bar) to create the tooltip item for\n\t// @return : new tooltip item\n\tfunction createTooltipItem(element) {\n\t\tvar xScale = element._xScale;\n\t\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\t\tvar index = element._index;\n\t\tvar datasetIndex = element._datasetIndex;\n\n\t\treturn {\n\t\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tindex: index,\n\t\t\tdatasetIndex: datasetIndex,\n\t\t\tx: element._model.x,\n\t\t\ty: element._model.y\n\t\t};\n\t}\n\n\t/**\n\t * Helper to get the reset model for the tooltip\n\t * @param tooltipOpts {Object} the tooltip options\n\t */\n\tfunction getBaseModel(tooltipOpts) {\n\t\tvar globalDefaults = defaults.global;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t\treturn {\n\t\t\t// Positioning\n\t\t\txPadding: tooltipOpts.xPadding,\n\t\t\tyPadding: tooltipOpts.yPadding,\n\t\t\txAlign: tooltipOpts.xAlign,\n\t\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t\t// Body\n\t\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t\t_bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\t\tbodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t\t// Title\n\t\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t\t_titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\t\ttitleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t\t// Footer\n\t\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t\t_footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\t\tfooterFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t\t// Appearance\n\t\t\tcaretSize: tooltipOpts.caretSize,\n\t\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\t\topacity: 0,\n\t\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\t\tdisplayColors: tooltipOpts.displayColors,\n\t\t\tborderColor: tooltipOpts.borderColor,\n\t\t\tborderWidth: tooltipOpts.borderWidth\n\t\t};\n\t}\n\n\t/**\n\t * Get the size of the tooltip\n\t */\n\tfunction getTooltipSize(tooltip, model) {\n\t\tvar ctx = tooltip._chart.ctx;\n\n\t\tvar height = model.yPadding * 2; // Tooltip Padding\n\t\tvar width = 0;\n\n\t\t// Count of all lines in the body\n\t\tvar body = model.body;\n\t\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t\t}, 0);\n\t\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n\t\tvar titleLineCount = model.title.length;\n\t\tvar footerLineCount = model.footer.length;\n\t\tvar titleFontSize = model.titleFontSize;\n\t\tvar bodyFontSize = model.bodyFontSize;\n\t\tvar footerFontSize = model.footerFontSize;\n\n\t\theight += titleLineCount * titleFontSize; // Title Lines\n\t\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\t\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\t\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\t\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\t\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\t\theight += footerLineCount * (footerFontSize); // Footer Lines\n\t\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n\t\t// Title width\n\t\tvar widthPadding = 0;\n\t\tvar maxLineWidth = function(line) {\n\t\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t\t};\n\n\t\tctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\t\thelpers.each(model.title, maxLineWidth);\n\n\t\t// Body width\n\t\tctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\t\thelpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n\t\t// Body lines may include some extra width due to the color box\n\t\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\t\thelpers.each(body, function(bodyItem) {\n\t\t\thelpers.each(bodyItem.before, maxLineWidth);\n\t\t\thelpers.each(bodyItem.lines, maxLineWidth);\n\t\t\thelpers.each(bodyItem.after, maxLineWidth);\n\t\t});\n\n\t\t// Reset back to 0\n\t\twidthPadding = 0;\n\n\t\t// Footer width\n\t\tctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\t\thelpers.each(model.footer, maxLineWidth);\n\n\t\t// Add padding\n\t\twidth += 2 * model.xPadding;\n\n\t\treturn {\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\t}\n\n\t/**\n\t * Helper to get the alignment of a tooltip given the size\n\t */\n\tfunction determineAlignment(tooltip, size) {\n\t\tvar model = tooltip._model;\n\t\tvar chart = tooltip._chart;\n\t\tvar chartArea = tooltip._chart.chartArea;\n\t\tvar xAlign = 'center';\n\t\tvar yAlign = 'center';\n\n\t\tif (model.y < size.height) {\n\t\t\tyAlign = 'top';\n\t\t} else if (model.y > (chart.height - size.height)) {\n\t\t\tyAlign = 'bottom';\n\t\t}\n\n\t\tvar lf, rf; // functions to determine left, right alignment\n\t\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\t\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\t\tvar midX = (chartArea.left + chartArea.right) / 2;\n\t\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\t\tif (yAlign === 'center') {\n\t\t\tlf = function(x) {\n\t\t\t\treturn x <= midX;\n\t\t\t};\n\t\t\trf = function(x) {\n\t\t\t\treturn x > midX;\n\t\t\t};\n\t\t} else {\n\t\t\tlf = function(x) {\n\t\t\t\treturn x <= (size.width / 2);\n\t\t\t};\n\t\t\trf = function(x) {\n\t\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t\t};\n\t\t}\n\n\t\tolf = function(x) {\n\t\t\treturn x + size.width + model.caretSize + model.caretPadding > chart.width;\n\t\t};\n\t\torf = function(x) {\n\t\t\treturn x - size.width - model.caretSize - model.caretPadding < 0;\n\t\t};\n\t\tyf = function(y) {\n\t\t\treturn y <= midY ? 'top' : 'bottom';\n\t\t};\n\n\t\tif (lf(model.x)) {\n\t\t\txAlign = 'left';\n\n\t\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\t\tif (olf(model.x)) {\n\t\t\t\txAlign = 'center';\n\t\t\t\tyAlign = yf(model.y);\n\t\t\t}\n\t\t} else if (rf(model.x)) {\n\t\t\txAlign = 'right';\n\n\t\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\t\tif (orf(model.x)) {\n\t\t\t\txAlign = 'center';\n\t\t\t\tyAlign = yf(model.y);\n\t\t\t}\n\t\t}\n\n\t\tvar opts = tooltip._options;\n\t\treturn {\n\t\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t\t};\n\t}\n\n\t/**\n\t * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n\t */\n\tfunction getBackgroundPoint(vm, size, alignment, chart) {\n\t\t// Background Position\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\n\t\tvar caretSize = vm.caretSize;\n\t\tvar caretPadding = vm.caretPadding;\n\t\tvar cornerRadius = vm.cornerRadius;\n\t\tvar xAlign = alignment.xAlign;\n\t\tvar yAlign = alignment.yAlign;\n\t\tvar paddingAndSize = caretSize + caretPadding;\n\t\tvar radiusAndPadding = cornerRadius + caretPadding;\n\n\t\tif (xAlign === 'right') {\n\t\t\tx -= size.width;\n\t\t} else if (xAlign === 'center') {\n\t\t\tx -= (size.width / 2);\n\t\t\tif (x + size.width > chart.width) {\n\t\t\t\tx = chart.width - size.width;\n\t\t\t}\n\t\t\tif (x < 0) {\n\t\t\t\tx = 0;\n\t\t\t}\n\t\t}\n\n\t\tif (yAlign === 'top') {\n\t\t\ty += paddingAndSize;\n\t\t} else if (yAlign === 'bottom') {\n\t\t\ty -= size.height + paddingAndSize;\n\t\t} else {\n\t\t\ty -= (size.height / 2);\n\t\t}\n\n\t\tif (yAlign === 'center') {\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx += paddingAndSize;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx -= paddingAndSize;\n\t\t\t}\n\t\t} else if (xAlign === 'left') {\n\t\t\tx -= radiusAndPadding;\n\t\t} else if (xAlign === 'right') {\n\t\t\tx += radiusAndPadding;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n\n\tChart.Tooltip = Element.extend({\n\t\tinitialize: function() {\n\t\t\tthis._model = getBaseModel(this._options);\n\t\t\tthis._lastActive = [];\n\t\t},\n\n\t\t// Get the title\n\t\t// Args are: (tooltipItem, data)\n\t\tgetTitle: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\t\t\tvar callbacks = opts.callbacks;\n\n\t\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n\t\t\tvar title = callbacks.title.apply(me, arguments);\n\t\t\tvar afterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeTitle);\n\t\t\tlines = pushOrConcat(lines, title);\n\t\t\tlines = pushOrConcat(lines, afterTitle);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBeforeBody: function() {\n\t\t\tvar lines = this._options.callbacks.beforeBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBody: function(tooltipItems, data) {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\t\t\tvar bodyItems = [];\n\n\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tvar bodyItem = {\n\t\t\t\t\tbefore: [],\n\t\t\t\t\tlines: [],\n\t\t\t\t\tafter: []\n\t\t\t\t};\n\t\t\t\tpushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\n\n\t\t\t\tbodyItems.push(bodyItem);\n\t\t\t});\n\n\t\t\treturn bodyItems;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetAfterBody: function() {\n\t\t\tvar lines = this._options.callbacks.afterBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Get the footer and beforeFooter and afterFooter lines\n\t\t// Args are: (tooltipItem, data)\n\t\tgetFooter: function() {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\n\t\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeFooter);\n\t\t\tlines = pushOrConcat(lines, footer);\n\t\t\tlines = pushOrConcat(lines, afterFooter);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\tupdate: function(changed) {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\n\t\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t\t// which breaks any animations.\n\t\t\tvar existingModel = me._model;\n\t\t\tvar model = me._model = getBaseModel(opts);\n\t\t\tvar active = me._active;\n\n\t\t\tvar data = me._data;\n\n\t\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\t\tvar alignment = {\n\t\t\t\txAlign: existingModel.xAlign,\n\t\t\t\tyAlign: existingModel.yAlign\n\t\t\t};\n\t\t\tvar backgroundPoint = {\n\t\t\t\tx: existingModel.x,\n\t\t\t\ty: existingModel.y\n\t\t\t};\n\t\t\tvar tooltipSize = {\n\t\t\t\twidth: existingModel.width,\n\t\t\t\theight: existingModel.height\n\t\t\t};\n\t\t\tvar tooltipPosition = {\n\t\t\t\tx: existingModel.caretX,\n\t\t\t\ty: existingModel.caretY\n\t\t\t};\n\n\t\t\tvar i, len;\n\n\t\t\tif (active.length) {\n\t\t\t\tmodel.opacity = 1;\n\n\t\t\t\tvar labelColors = [];\n\t\t\t\tvar labelTextColors = [];\n\t\t\t\ttooltipPosition = Chart.Tooltip.positioners[opts.position].call(me, active, me._eventPosition);\n\n\t\t\t\tvar tooltipItems = [];\n\t\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\t\tif (opts.filter) {\n\t\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\t\tif (opts.itemSort) {\n\t\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Determine colors for boxes\n\t\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n\t\t\t\t\tlabelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n\t\t\t\t});\n\n\n\t\t\t\t// Build the Text Lines\n\t\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\n\t\t\t\t// Initial positioning and colors\n\t\t\t\tmodel.x = Math.round(tooltipPosition.x);\n\t\t\t\tmodel.y = Math.round(tooltipPosition.y);\n\t\t\t\tmodel.caretPadding = opts.caretPadding;\n\t\t\t\tmodel.labelColors = labelColors;\n\t\t\t\tmodel.labelTextColors = labelTextColors;\n\n\t\t\t\t// data points\n\t\t\t\tmodel.dataPoints = tooltipItems;\n\n\t\t\t\t// We need to determine alignment of the tooltip\n\t\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t\t// Final Size and Position\n\t\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n\t\t\t} else {\n\t\t\t\tmodel.opacity = 0;\n\t\t\t}\n\n\t\t\tmodel.xAlign = alignment.xAlign;\n\t\t\tmodel.yAlign = alignment.yAlign;\n\t\t\tmodel.x = backgroundPoint.x;\n\t\t\tmodel.y = backgroundPoint.y;\n\t\t\tmodel.width = tooltipSize.width;\n\t\t\tmodel.height = tooltipSize.height;\n\n\t\t\t// Point where the caret on the tooltip points to\n\t\t\tmodel.caretX = tooltipPosition.x;\n\t\t\tmodel.caretY = tooltipPosition.y;\n\n\t\t\tme._model = model;\n\n\t\t\tif (changed && opts.custom) {\n\t\t\t\topts.custom.call(me, model);\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\t\tdrawCaret: function(tooltipPoint, size) {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\t\t\tvar caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n\n\t\t\tctx.lineTo(caretPosition.x1, caretPosition.y1);\n\t\t\tctx.lineTo(caretPosition.x2, caretPosition.y2);\n\t\t\tctx.lineTo(caretPosition.x3, caretPosition.y3);\n\t\t},\n\t\tgetCaretPosition: function(tooltipPoint, size, vm) {\n\t\t\tvar x1, x2, x3, y1, y2, y3;\n\t\t\tvar caretSize = vm.caretSize;\n\t\t\tvar cornerRadius = vm.cornerRadius;\n\t\t\tvar xAlign = vm.xAlign;\n\t\t\tvar yAlign = vm.yAlign;\n\t\t\tvar ptX = tooltipPoint.x;\n\t\t\tvar ptY = tooltipPoint.y;\n\t\t\tvar width = size.width;\n\t\t\tvar height = size.height;\n\n\t\t\tif (yAlign === 'center') {\n\t\t\t\ty2 = ptY + (height / 2);\n\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx1 = ptX;\n\t\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\t\tx3 = x1;\n\n\t\t\t\t\ty1 = y2 + caretSize;\n\t\t\t\t\ty3 = y2 - caretSize;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = ptX + width;\n\t\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\t\tx3 = x1;\n\n\t\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\t\ty3 = y2 + caretSize;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx2 = ptX + cornerRadius + (caretSize);\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t} else if (xAlign === 'right') {\n\t\t\t\t\tx2 = ptX + width - cornerRadius - caretSize;\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t} else {\n\t\t\t\t\tx2 = vm.caretX;\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t}\n\t\t\t\tif (yAlign === 'top') {\n\t\t\t\t\ty1 = ptY;\n\t\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t} else {\n\t\t\t\t\ty1 = ptY + height;\n\t\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t\t// invert drawing order\n\t\t\t\t\tvar tmp = x3;\n\t\t\t\t\tx3 = x1;\n\t\t\t\t\tx1 = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};\n\t\t},\n\t\tdrawTitle: function(pt, vm, ctx, opacity) {\n\t\t\tvar title = vm.title;\n\n\t\t\tif (title.length) {\n\t\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tvar titleFontSize = vm.titleFontSize;\n\t\t\t\tvar titleSpacing = vm.titleSpacing;\n\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n\t\t\t\tctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\t\tvar i, len;\n\t\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tdrawBody: function(pt, vm, ctx, opacity) {\n\t\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\t\tvar bodySpacing = vm.bodySpacing;\n\t\t\tvar body = vm.body;\n\n\t\t\tctx.textAlign = vm._bodyAlign;\n\t\t\tctx.textBaseline = 'top';\n\t\t\tctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\t\t// Before Body\n\t\t\tvar xLinePadding = 0;\n\t\t\tvar fillLineOfText = function(line) {\n\t\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t\t};\n\n\t\t\t// Before body lines\n\t\t\tctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\n\t\t\thelpers.each(vm.beforeBody, fillLineOfText);\n\n\t\t\tvar drawColorBoxes = vm.displayColors;\n\t\t\txLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\n\n\t\t\t// Draw body lines now\n\t\t\thelpers.each(body, function(bodyItem, i) {\n\t\t\t\tvar textColor = mergeOpacity(vm.labelTextColors[i], opacity);\n\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\thelpers.each(bodyItem.before, fillLineOfText);\n\n\t\t\t\thelpers.each(bodyItem.lines, function(line) {\n\t\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n\t\t\t\t\t\tctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Border\n\t\t\t\t\t\tctx.lineWidth = 1;\n\t\t\t\t\t\tctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n\t\t\t\t\t\tctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Inner square\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n\t\t\t\t\t\tctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\t\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tfillLineOfText(line);\n\t\t\t\t});\n\n\t\t\t\thelpers.each(bodyItem.after, fillLineOfText);\n\t\t\t});\n\n\t\t\t// Reset back to 0 for after body\n\t\t\txLinePadding = 0;\n\n\t\t\t// After body lines\n\t\t\thelpers.each(vm.afterBody, fillLineOfText);\n\t\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t\t},\n\t\tdrawFooter: function(pt, vm, ctx, opacity) {\n\t\t\tvar footer = vm.footer;\n\n\t\t\tif (footer.length) {\n\t\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n\t\t\t\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\t\thelpers.each(footer, function(line) {\n\t\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tdrawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\n\t\t\tctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n\t\t\tctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\n\t\t\tctx.lineWidth = vm.borderWidth;\n\t\t\tvar xAlign = vm.xAlign;\n\t\t\tvar yAlign = vm.yAlign;\n\t\t\tvar x = pt.x;\n\t\t\tvar y = pt.y;\n\t\t\tvar width = tooltipSize.width;\n\t\t\tvar height = tooltipSize.height;\n\t\t\tvar radius = vm.cornerRadius;\n\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x + radius, y);\n\t\t\tif (yAlign === 'top') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + width - radius, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\t\tif (yAlign === 'center' && xAlign === 'right') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + width, y + height - radius);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\t\tif (yAlign === 'bottom') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + radius, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\t\tif (yAlign === 'center' && xAlign === 'left') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x, y + radius);\n\t\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\t\tctx.closePath();\n\n\t\t\tctx.fill();\n\n\t\t\tif (vm.borderWidth > 0) {\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t},\n\t\tdraw: function() {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\n\t\t\tif (vm.opacity === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar tooltipSize = {\n\t\t\t\twidth: vm.width,\n\t\t\t\theight: vm.height\n\t\t\t};\n\t\t\tvar pt = {\n\t\t\t\tx: vm.x,\n\t\t\t\ty: vm.y\n\t\t\t};\n\n\t\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t\t// Truthy/falsey value for empty tooltip\n\t\t\tvar hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n\t\t\tif (this._options.enabled && hasTooltipContent) {\n\t\t\t\t// Draw Background\n\t\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize, opacity);\n\n\t\t\t\t// Draw Title, Body, and Footer\n\t\t\t\tpt.x += vm.xPadding;\n\t\t\t\tpt.y += vm.yPadding;\n\n\t\t\t\t// Titles\n\t\t\t\tthis.drawTitle(pt, vm, ctx, opacity);\n\n\t\t\t\t// Body\n\t\t\t\tthis.drawBody(pt, vm, ctx, opacity);\n\n\t\t\t\t// Footer\n\t\t\t\tthis.drawFooter(pt, vm, ctx, opacity);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event - The event to handle\n\t\t * @returns {Boolean} true if the tooltip changed\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me._options;\n\t\t\tvar changed = false;\n\n\t\t\tme._lastActive = me._lastActive || [];\n\n\t\t\t// Find Active Elements for tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme._active = [];\n\t\t\t} else {\n\t\t\t\tme._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n\t\t\t}\n\n\t\t\t// Remember Last Actives\n\t\t\tchanged = !helpers.arrayEquals(me._active, me._lastActive);\n\n\t\t\t// Only handle target event on tooltip change\n\t\t\tif (changed) {\n\t\t\t\tme._lastActive = me._active;\n\n\t\t\t\tif (options.enabled || options.custom) {\n\t\t\t\t\tme._eventPosition = {\n\t\t\t\t\t\tx: e.x,\n\t\t\t\t\t\ty: e.y\n\t\t\t\t\t};\n\n\t\t\t\t\tme.update(true);\n\t\t\t\t\tme.pivot();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * @namespace Chart.Tooltip.positioners\n\t */\n\tChart.Tooltip.positioners = {\n\t\t/**\n\t\t * Average mode places the tooltip at the average position of the elements shown\n\t\t * @function Chart.Tooltip.positioners.average\n\t\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t\t * @returns {Point} tooltip position\n\t\t */\n\t\taverage: function(elements) {\n\t\t\tif (!elements.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar i, len;\n\t\t\tvar x = 0;\n\t\t\tvar y = 0;\n\t\t\tvar count = 0;\n\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\tvar el = elements[i];\n\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\t\tx += pos.x;\n\t\t\t\t\ty += pos.y;\n\t\t\t\t\t++count;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: Math.round(x / count),\n\t\t\t\ty: Math.round(y / count)\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Gets the tooltip position nearest of the item nearest to the event position\n\t\t * @function Chart.Tooltip.positioners.nearest\n\t\t * @param elements {Chart.Element[]} the tooltip elements\n\t\t * @param eventPosition {Point} the position of the event in canvas coordinates\n\t\t * @returns {Point} the tooltip position\n\t\t */\n\t\tnearest: function(elements, eventPosition) {\n\t\t\tvar x = eventPosition.x;\n\t\t\tvar y = eventPosition.y;\n\t\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\t\tvar i, len, nearestElement;\n\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\tvar el = elements[i];\n\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\t\tvar d = helpers.distanceBetweenPoints(eventPosition, center);\n\n\t\t\t\t\tif (d < minDistance) {\n\t\t\t\t\t\tminDistance = d;\n\t\t\t\t\t\tnearestElement = el;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (nearestElement) {\n\t\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\t\tx = tp.x;\n\t\t\t\ty = tp.y;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: y\n\t\t\t};\n\t\t}\n\t};\n};\n","'use strict';\n\nvar defaults = require('./core.defaults');\n\ndefaults._set('global', {\n\tresponsive: true,\n\tresponsiveAnimationDuration: 0,\n\tmaintainAspectRatio: true,\n\tevents: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n\thover: {\n\t\tonHover: null,\n\t\tmode: 'nearest',\n\t\tintersect: true,\n\t\tanimationDuration: 400\n\t},\n\tonClick: null,\n\tdefaultColor: 'rgba(0,0,0,0.1)',\n\tdefaultFontColor: '#666',\n\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\tdefaultFontSize: 12,\n\tdefaultFontStyle: 'normal',\n\tshowLines: true,\n\n\t// Element defaults defined in element extensions\n\telements: {},\n\n\t// Layout options such as padding\n\tlayout: {\n\t\tpadding: {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0\n\t\t}\n\t}\n});\n\nmodule.exports = function() {\n\n\t// Occupy the global variable of Chart, and create a simple base class\n\tvar Chart = function(item, config) {\n\t\tthis.construct(item, config);\n\t\treturn this;\n\t};\n\n\tChart.Chart = Chart;\n\n\treturn Chart;\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\n\ndefaults._set('global', {\n\telements: {\n\t\trectangle: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: defaults.global.defaultColor,\n\t\t\tborderSkipped: 'bottom',\n\t\t\tborderWidth: 0\n\t\t}\n\t}\n});\n\nfunction isVertical(bar) {\n\treturn bar._view.width !== undefined;\n}\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar) {\n\tvar vm = bar._view;\n\tvar x1, x2, y1, y2;\n\n\tif (isVertical(bar)) {\n\t\t// vertical\n\t\tvar halfWidth = vm.width / 2;\n\t\tx1 = vm.x - halfWidth;\n\t\tx2 = vm.x + halfWidth;\n\t\ty1 = Math.min(vm.y, vm.base);\n\t\ty2 = Math.max(vm.y, vm.base);\n\t} else {\n\t\t// horizontal bar\n\t\tvar halfHeight = vm.height / 2;\n\t\tx1 = Math.min(vm.x, vm.base);\n\t\tx2 = Math.max(vm.x, vm.base);\n\t\ty1 = vm.y - halfHeight;\n\t\ty2 = vm.y + halfHeight;\n\t}\n\n\treturn {\n\t\tleft: x1,\n\t\ttop: y1,\n\t\tright: x2,\n\t\tbottom: y2\n\t};\n}\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar left, right, top, bottom, signX, signY, borderSkipped;\n\t\tvar borderWidth = vm.borderWidth;\n\n\t\tif (!vm.horizontal) {\n\t\t\t// bar\n\t\t\tleft = vm.x - vm.width / 2;\n\t\t\tright = vm.x + vm.width / 2;\n\t\t\ttop = vm.y;\n\t\t\tbottom = vm.base;\n\t\t\tsignX = 1;\n\t\t\tsignY = bottom > top ? 1 : -1;\n\t\t\tborderSkipped = vm.borderSkipped || 'bottom';\n\t\t} else {\n\t\t\t// horizontal bar\n\t\t\tleft = vm.base;\n\t\t\tright = vm.x;\n\t\t\ttop = vm.y - vm.height / 2;\n\t\t\tbottom = vm.y + vm.height / 2;\n\t\t\tsignX = right > left ? 1 : -1;\n\t\t\tsignY = 1;\n\t\t\tborderSkipped = vm.borderSkipped || 'left';\n\t\t}\n\n\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\tif (borderWidth) {\n\t\t\t// borderWidth shold be less than bar width and bar height.\n\t\t\tvar barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n\t\t\tborderWidth = borderWidth > barSize ? barSize : borderWidth;\n\t\t\tvar halfStroke = borderWidth / 2;\n\t\t\t// Adjust borderWidth when bar top position is near vm.base(zero).\n\t\t\tvar borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n\t\t\tvar borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n\t\t\tvar borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n\t\t\tvar borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n\t\t\t// not become a vertical line?\n\t\t\tif (borderLeft !== borderRight) {\n\t\t\t\ttop = borderTop;\n\t\t\t\tbottom = borderBottom;\n\t\t\t}\n\t\t\t// not become a horizontal line?\n\t\t\tif (borderTop !== borderBottom) {\n\t\t\t\tleft = borderLeft;\n\t\t\t\tright = borderRight;\n\t\t\t}\n\t\t}\n\n\t\tctx.beginPath();\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = borderWidth;\n\n\t\t// Corner points, from bottom-left to bottom-right clockwise\n\t\t// | 1 2 |\n\t\t// | 0 3 |\n\t\tvar corners = [\n\t\t\t[left, bottom],\n\t\t\t[left, top],\n\t\t\t[right, top],\n\t\t\t[right, bottom]\n\t\t];\n\n\t\t// Find first (starting) corner with fallback to 'bottom'\n\t\tvar borders = ['bottom', 'left', 'top', 'right'];\n\t\tvar startCorner = borders.indexOf(borderSkipped, 0);\n\t\tif (startCorner === -1) {\n\t\t\tstartCorner = 0;\n\t\t}\n\n\t\tfunction cornerAt(index) {\n\t\t\treturn corners[(startCorner + index) % 4];\n\t\t}\n\n\t\t// Draw rectangle from 'startCorner'\n\t\tvar corner = cornerAt(0);\n\t\tctx.moveTo(corner[0], corner[1]);\n\n\t\tfor (var i = 1; i < 4; i++) {\n\t\t\tcorner = cornerAt(i);\n\t\t\tctx.lineTo(corner[0], corner[1]);\n\t\t}\n\n\t\tctx.fill();\n\t\tif (borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\theight: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.base - vm.y;\n\t},\n\n\tinRange: function(mouseX, mouseY) {\n\t\tvar inRange = false;\n\n\t\tif (this._view) {\n\t\t\tvar bounds = getBarBounds(this);\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinLabelRange: function(mouseX, mouseY) {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar inRange = false;\n\t\tvar bounds = getBarBounds(me);\n\n\t\tif (isVertical(me)) {\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right;\n\t\t} else {\n\t\t\tinRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinXRange: function(mouseX) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseX >= bounds.left && mouseX <= bounds.right;\n\t},\n\n\tinYRange: function(mouseY) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar x, y;\n\t\tif (isVertical(this)) {\n\t\t\tx = vm.x;\n\t\t\ty = (vm.y + vm.base) / 2;\n\t\t} else {\n\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\ty = vm.y;\n\t\t}\n\n\t\treturn {x: x, y: y};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.width * Math.abs(vm.y - vm.base);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t}\n});\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\ndefaults._set('scatter', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\tid: 'x-axis-1',    // need an ID so datasets can reference the scale\n\t\t\ttype: 'linear',    // scatter should not use a category axis\n\t\t\tposition: 'bottom'\n\t\t}],\n\t\tyAxes: [{\n\t\t\tid: 'y-axis-1',\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left'\n\t\t}]\n\t},\n\n\tshowLines: false,\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';     // doesn't make sense for scatter since data are formatted as a point\n\t\t\t},\n\t\t\tlabel: function(item) {\n\t\t\t\treturn '(' + item.xLabel + ', ' + item.yLabel + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\t// Scatter charts use line controllers\n\tChart.controllers.scatter = Chart.controllers.line;\n\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('polarArea', {\n\tscale: {\n\t\ttype: 'radialLinear',\n\t\tangleLines: {\n\t\t\tdisplay: false\n\t\t},\n\t\tgridLines: {\n\t\t\tcircular: true\n\t\t},\n\t\tpointLabels: {\n\t\t\tdisplay: false\n\t\t},\n\t\tticks: {\n\t\t\tbeginAtZero: true\n\t\t}\n\t},\n\n\t// Boolean - Whether to animate the rotation of the chart\n\tanimation: {\n\t\tanimateRotate: true,\n\t\tanimateScale: true\n\t},\n\n\tstartAngle: -0.5 * Math.PI,\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\treturn data.labels[item.index] + ': ' + item.yLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.polarArea = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\t\t\tchart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\n\t\t\tmeta.count = me.countVisibleElements();\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar scale = chart.scale;\n\t\t\tvar labels = chart.data.labels;\n\n\t\t\tvar circumference = me.calculateCircumference(dataset.data[index]);\n\t\t\tvar centerX = scale.xCenter;\n\t\t\tvar centerY = scale.yCenter;\n\n\t\t\t// If there is NaN data before us, we need to calculate the starting angle correctly.\n\t\t\t// We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data\n\t\t\tvar visibleCount = 0;\n\t\t\tvar meta = me.getMeta();\n\t\t\tfor (var i = 0; i < index; ++i) {\n\t\t\t\tif (!isNaN(dataset.data[i]) && !meta.data[i].hidden) {\n\t\t\t\t\t++visibleCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\t\tvar datasetStartAngle = opts.startAngle;\n\t\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\t\tvar startAngle = datasetStartAngle + (circumference * visibleCount);\n\t\t\tvar endAngle = startAngle + (arc.hidden ? 0 : circumference);\n\n\t\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX,\n\t\t\t\t\ty: centerY,\n\t\t\t\t\tinnerRadius: 0,\n\t\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\t\tlabel: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Apply border and fill style\n\t\t\tme.removeHoverStyle(arc);\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcountVisibleElements: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar count = 0;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn count;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar count = this.getMeta().count;\n\t\t\tif (count > 0 && !isNaN(value)) {\n\t\t\t\treturn (2 * Math.PI) / count;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar Interaction = require('./core.interaction');\nvar layouts = require('./core.layouts');\nvar platform = require('../platforms/platform');\nvar plugins = require('./core.plugins');\n\nmodule.exports = function(Chart) {\n\n\t// Create a dictionary of chart types, to allow for extension of existing types\n\tChart.types = {};\n\n\t// Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n\t// Destroy method on the chart will remove the instance of the chart from this reference.\n\tChart.instances = {};\n\n\t// Controllers available for dataset visualization eg. bar, line, slice, etc.\n\tChart.controllers = {};\n\n\t/**\n\t * Initializes the given config with global and chart default values.\n\t */\n\tfunction initConfig(config) {\n\t\tconfig = config || {};\n\n\t\t// Do NOT use configMerge() for the data object because this method merges arrays\n\t\t// and so would change references to labels and datasets, preventing data updates.\n\t\tvar data = config.data = config.data || {};\n\t\tdata.datasets = data.datasets || [];\n\t\tdata.labels = data.labels || [];\n\n\t\tconfig.options = helpers.configMerge(\n\t\t\tdefaults.global,\n\t\t\tdefaults[config.type],\n\t\t\tconfig.options || {});\n\n\t\treturn config;\n\t}\n\n\t/**\n\t * Updates the config of the chart\n\t * @param chart {Chart} chart to update the options for\n\t */\n\tfunction updateConfig(chart) {\n\t\tvar newOptions = chart.options;\n\n\t\thelpers.each(chart.scales, function(scale) {\n\t\t\tlayouts.removeBox(chart, scale);\n\t\t});\n\n\t\tnewOptions = helpers.configMerge(\n\t\t\tChart.defaults.global,\n\t\t\tChart.defaults[chart.config.type],\n\t\t\tnewOptions);\n\n\t\tchart.options = chart.config.options = newOptions;\n\t\tchart.ensureScalesHaveIDs();\n\t\tchart.buildOrUpdateScales();\n\t\t// Tooltip\n\t\tchart.tooltip._options = newOptions.tooltips;\n\t\tchart.tooltip.initialize();\n\t}\n\n\tfunction positionIsHorizontal(position) {\n\t\treturn position === 'top' || position === 'bottom';\n\t}\n\n\thelpers.extend(Chart.prototype, /** @lends Chart */ {\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tconstruct: function(item, config) {\n\t\t\tvar me = this;\n\n\t\t\tconfig = initConfig(config);\n\n\t\t\tvar context = platform.acquireContext(item, config);\n\t\t\tvar canvas = context && context.canvas;\n\t\t\tvar height = canvas && canvas.height;\n\t\t\tvar width = canvas && canvas.width;\n\n\t\t\tme.id = helpers.uid();\n\t\t\tme.ctx = context;\n\t\t\tme.canvas = canvas;\n\t\t\tme.config = config;\n\t\t\tme.width = width;\n\t\t\tme.height = height;\n\t\t\tme.aspectRatio = height ? width / height : null;\n\t\t\tme.options = config.options;\n\t\t\tme._bufferedRender = false;\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n\t\t\t * the \"instance\" still need to be defined since it might be called from plugins.\n\t\t\t * @prop Chart#chart\n\t\t\t * @deprecated since version 2.6.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tme.chart = me;\n\t\t\tme.controller = me; // chart.chart.controller #inception\n\n\t\t\t// Add the chart instance to the global namespace\n\t\t\tChart.instances[me.id] = me;\n\n\t\t\t// Define alias to the config data: `chart.data === chart.config.data`\n\t\t\tObject.defineProperty(me, 'data', {\n\t\t\t\tget: function() {\n\t\t\t\t\treturn me.config.data;\n\t\t\t\t},\n\t\t\t\tset: function(value) {\n\t\t\t\t\tme.config.data = value;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!context || !canvas) {\n\t\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tme.initialize();\n\t\t\tme.update();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\n\t\t\t// Before init plugin notification\n\t\t\tplugins.notify(me, 'beforeInit');\n\n\t\t\thelpers.retinaScale(me, me.options.devicePixelRatio);\n\n\t\t\tme.bindEvents();\n\n\t\t\tif (me.options.responsive) {\n\t\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\t\tme.resize(true);\n\t\t\t}\n\n\t\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\t\tme.ensureScalesHaveIDs();\n\t\t\tme.buildOrUpdateScales();\n\t\t\tme.initToolTip();\n\n\t\t\t// After init plugin notification\n\t\t\tplugins.notify(me, 'afterInit');\n\n\t\t\treturn me;\n\t\t},\n\n\t\tclear: function() {\n\t\t\thelpers.canvas.clear(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tstop: function() {\n\t\t\t// Stops any current animation loop occurring\n\t\t\tChart.animationService.cancelAnimation(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tresize: function(silent) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\n\n\t\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\n\t\t\t// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collased\n\t\t\tvar newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n\t\t\tvar newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n\t\t\tif (me.width === newWidth && me.height === newHeight) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcanvas.width = me.width = newWidth;\n\t\t\tcanvas.height = me.height = newHeight;\n\t\t\tcanvas.style.width = newWidth + 'px';\n\t\t\tcanvas.style.height = newHeight + 'px';\n\n\t\t\thelpers.retinaScale(me, options.devicePixelRatio);\n\n\t\t\tif (!silent) {\n\t\t\t\t// Notify any plugins about the resize\n\t\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\t\tplugins.notify(me, 'resize', [newSize]);\n\n\t\t\t\t// Notify of resize\n\t\t\t\tif (me.options.onResize) {\n\t\t\t\t\tme.options.onResize(me, newSize);\n\t\t\t\t}\n\n\t\t\t\tme.stop();\n\t\t\t\tme.update(me.options.responsiveAnimationDuration);\n\t\t\t}\n\t\t},\n\n\t\tensureScalesHaveIDs: function() {\n\t\t\tvar options = this.options;\n\t\t\tvar scalesOptions = options.scales || {};\n\t\t\tvar scaleOptions = options.scale;\n\n\t\t\thelpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t\t});\n\n\t\t\thelpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t\t});\n\n\t\t\tif (scaleOptions) {\n\t\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Builds a map of scale ID to scale object for future lookup.\n\t\t */\n\t\tbuildOrUpdateScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar scales = me.scales || {};\n\t\t\tvar items = [];\n\t\t\tvar updated = Object.keys(scales).reduce(function(obj, id) {\n\t\t\t\tobj[id] = false;\n\t\t\t\treturn obj;\n\t\t\t}, {});\n\n\t\t\tif (options.scales) {\n\t\t\t\titems = items.concat(\n\t\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};\n\t\t\t\t\t}),\n\t\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear', dposition: 'left'};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (options.scale) {\n\t\t\t\titems.push({\n\t\t\t\t\toptions: options.scale,\n\t\t\t\t\tdtype: 'radialLinear',\n\t\t\t\t\tisDefault: true,\n\t\t\t\t\tdposition: 'chartArea'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thelpers.each(items, function(item) {\n\t\t\t\tvar scaleOptions = item.options;\n\t\t\t\tvar id = scaleOptions.id;\n\t\t\t\tvar scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\n\t\t\t\tif (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n\t\t\t\t\tscaleOptions.position = item.dposition;\n\t\t\t\t}\n\n\t\t\t\tupdated[id] = true;\n\t\t\t\tvar scale = null;\n\t\t\t\tif (id in scales && scales[id].type === scaleType) {\n\t\t\t\t\tscale = scales[id];\n\t\t\t\t\tscale.options = scaleOptions;\n\t\t\t\t\tscale.ctx = me.ctx;\n\t\t\t\t\tscale.chart = me;\n\t\t\t\t} else {\n\t\t\t\t\tvar scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\n\t\t\t\t\tif (!scaleClass) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tscale = new scaleClass({\n\t\t\t\t\t\tid: id,\n\t\t\t\t\t\ttype: scaleType,\n\t\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\t\tctx: me.ctx,\n\t\t\t\t\t\tchart: me\n\t\t\t\t\t});\n\t\t\t\t\tscales[scale.id] = scale;\n\t\t\t\t}\n\n\t\t\t\tscale.mergeTicksOptions();\n\n\t\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\t\tif (item.isDefault) {\n\t\t\t\t\tme.scale = scale;\n\t\t\t\t}\n\t\t\t});\n\t\t\t// clear up discarded scales\n\t\t\thelpers.each(updated, function(hasUpdated, id) {\n\t\t\t\tif (!hasUpdated) {\n\t\t\t\t\tdelete scales[id];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.scales = scales;\n\n\t\t\tChart.scaleService.addScalesToLayout(this);\n\t\t},\n\n\t\tbuildOrUpdateControllers: function() {\n\t\t\tvar me = this;\n\t\t\tvar types = [];\n\t\t\tvar newControllers = [];\n\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\t\tvar type = dataset.type || me.config.type;\n\n\t\t\t\tif (meta.type && meta.type !== type) {\n\t\t\t\t\tme.destroyDatasetMeta(datasetIndex);\n\t\t\t\t\tmeta = me.getDatasetMeta(datasetIndex);\n\t\t\t\t}\n\t\t\t\tmeta.type = type;\n\n\t\t\t\ttypes.push(meta.type);\n\n\t\t\t\tif (meta.controller) {\n\t\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\t\tmeta.controller.linkScales();\n\t\t\t\t} else {\n\t\t\t\t\tvar ControllerClass = Chart.controllers[meta.type];\n\t\t\t\t\tif (ControllerClass === undefined) {\n\t\t\t\t\t\tthrow new Error('\"' + meta.type + '\" is not a chart type.');\n\t\t\t\t\t}\n\n\t\t\t\t\tmeta.controller = new ControllerClass(me, datasetIndex);\n\t\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\treturn newControllers;\n\t\t},\n\n\t\t/**\n\t\t * Reset the elements of all datasets\n\t\t * @private\n\t\t */\n\t\tresetElements: function() {\n\t\t\tvar me = this;\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t* Resets the chart back to it's state before the initial animation\n\t\t*/\n\t\treset: function() {\n\t\t\tthis.resetElements();\n\t\t\tthis.tooltip.initialize();\n\t\t},\n\n\t\tupdate: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tupdateConfig(me);\n\n\t\t\t// plugins options references might have change, let's invalidate the cache\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t\t\tplugins._invalidate(me);\n\n\t\t\tif (plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// In case the entire data object changed\n\t\t\tme.tooltip._data = me.data;\n\n\t\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t\t// Make sure all dataset controllers have correct meta data counts\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t\t}, me);\n\n\t\t\tme.updateLayout();\n\n\t\t\t// Can only reset the new controllers after the scales have been updated\n\t\t\tif (me.options.animation && me.options.animation.duration) {\n\t\t\t\thelpers.each(newControllers, function(controller) {\n\t\t\t\t\tcontroller.reset();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.updateDatasets();\n\n\t\t\t// Need to reset tooltip in case it is displayed with elements that are removed\n\t\t\t// after update.\n\t\t\tme.tooltip.initialize();\n\n\t\t\t// Last active contains items that were previously in the tooltip.\n\t\t\t// When we reset the tooltip, we need to clear it\n\t\t\tme.lastActive = [];\n\n\t\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\t\tplugins.notify(me, 'afterUpdate');\n\n\t\t\tif (me._bufferedRender) {\n\t\t\t\tme._bufferedRequest = {\n\t\t\t\t\tduration: config.duration,\n\t\t\t\t\teasing: config.easing,\n\t\t\t\t\tlazy: config.lazy\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tme.render(config);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t\t * @private\n\t\t */\n\t\tupdateLayout: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeLayout') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlayouts.update(this, this.width, this.height);\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t\t * @method IPlugin#afterScaleUpdate\n\t\t\t * @deprecated since version 2.5.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tplugins.notify(me, 'afterScaleUpdate');\n\t\t\tplugins.notify(me, 'afterLayout');\n\t\t},\n\n\t\t/**\n\t\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDatasets: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.updateDataset(i);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsUpdate');\n\t\t},\n\n\t\t/**\n\t\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDataset: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.update();\n\n\t\t\tplugins.notify(me, 'afterDatasetUpdate', [args]);\n\t\t},\n\n\t\trender: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar duration = config.duration;\n\t\t\tvar lazy = config.lazy;\n\n\t\t\tif (plugins.notify(me, 'beforeRender') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar animationOptions = me.options.animation;\n\t\t\tvar onComplete = function(animation) {\n\t\t\t\tplugins.notify(me, 'afterRender');\n\t\t\t\thelpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n\t\t\t};\n\n\t\t\tif (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\n\t\t\t\tvar animation = new Chart.Animation({\n\t\t\t\t\tnumSteps: (duration || animationOptions.duration) / 16.66, // 60 fps\n\t\t\t\t\teasing: config.easing || animationOptions.easing,\n\n\t\t\t\t\trender: function(chart, animationObject) {\n\t\t\t\t\t\tvar easingFunction = helpers.easing.effects[animationObject.easing];\n\t\t\t\t\t\tvar currentStep = animationObject.currentStep;\n\t\t\t\t\t\tvar stepDecimal = currentStep / animationObject.numSteps;\n\n\t\t\t\t\t\tchart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n\t\t\t\t\t},\n\n\t\t\t\t\tonAnimationProgress: animationOptions.onProgress,\n\t\t\t\t\tonAnimationComplete: onComplete\n\t\t\t\t});\n\n\t\t\t\tChart.animationService.addAnimation(me, animation, duration, lazy);\n\t\t\t} else {\n\t\t\t\tme.draw();\n\n\t\t\t\t// See https://github.com/chartjs/Chart.js/issues/3781\n\t\t\t\tonComplete(new Chart.Animation({numSteps: 0, chart: me}));\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\n\t\tdraw: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tme.clear();\n\n\t\t\tif (helpers.isNullOrUndef(easingValue)) {\n\t\t\t\teasingValue = 1;\n\t\t\t}\n\n\t\t\tme.transition(easingValue);\n\n\t\t\tif (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw all the scales\n\t\t\thelpers.each(me.boxes, function(box) {\n\t\t\t\tbox.draw(me.chartArea);\n\t\t\t}, me);\n\n\t\t\tif (me.scale) {\n\t\t\t\tme.scale.draw();\n\t\t\t}\n\n\t\t\tme.drawDatasets(easingValue);\n\t\t\tme._drawTooltip(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\ttransition: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tfor (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.getDatasetMeta(i).controller.transition(easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.tooltip.transition(easingValue);\n\t\t},\n\n\t\t/**\n\t\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDatasets: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw datasets reversed to support proper line stacking\n\t\t\tfor (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.drawDataset(i, easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDataset: function(index, easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.draw(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDatasetDraw', [args]);\n\t\t},\n\n\t\t/**\n\t\t * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n\t\t * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n\t\t * @private\n\t\t */\n\t\t_drawTooltip: function(easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\t\t\tvar args = {\n\t\t\t\ttooltip: tooltip,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttooltip.draw();\n\n\t\t\tplugins.notify(me, 'afterTooltipDraw', [args]);\n\t\t},\n\n\t\t// Get the single element that was clicked on\n\t\t// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t\tgetElementAtEvent: function(e) {\n\t\t\treturn Interaction.modes.single(this, e);\n\t\t},\n\n\t\tgetElementsAtEvent: function(e) {\n\t\t\treturn Interaction.modes.label(this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtXAxis: function(e) {\n\t\t\treturn Interaction.modes['x-axis'](this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\t\tvar method = Interaction.modes[mode];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\treturn method(this, e, options);\n\t\t\t}\n\n\t\t\treturn [];\n\t\t},\n\n\t\tgetDatasetAtEvent: function(e) {\n\t\t\treturn Interaction.modes.dataset(this, e, {intersect: true});\n\t\t},\n\n\t\tgetDatasetMeta: function(datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\t\tif (!dataset._meta) {\n\t\t\t\tdataset._meta = {};\n\t\t\t}\n\n\t\t\tvar meta = dataset._meta[me.id];\n\t\t\tif (!meta) {\n\t\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\t\ttype: null,\n\t\t\t\t\tdata: [],\n\t\t\t\t\tdataset: null,\n\t\t\t\t\tcontroller: null,\n\t\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\t\txAxisID: null,\n\t\t\t\t\tyAxisID: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn meta;\n\t\t},\n\n\t\tgetVisibleDatasetCount: function() {\n\t\t\tvar count = 0;\n\t\t\tfor (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t},\n\n\t\tisDatasetVisible: function(datasetIndex) {\n\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\t\treturn typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t\t},\n\n\t\tgenerateLegend: function() {\n\t\t\treturn this.options.legendCallback(this);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroyDatasetMeta: function(datasetIndex) {\n\t\t\tvar id = this.id;\n\t\t\tvar dataset = this.data.datasets[datasetIndex];\n\t\t\tvar meta = dataset._meta && dataset._meta[id];\n\n\t\t\tif (meta) {\n\t\t\t\tmeta.controller.destroy();\n\t\t\t\tdelete dataset._meta[id];\n\t\t\t}\n\t\t},\n\n\t\tdestroy: function() {\n\t\t\tvar me = this;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar i, ilen;\n\n\t\t\tme.stop();\n\n\t\t\t// dataset controllers need to cleanup associated data\n\t\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.destroyDatasetMeta(i);\n\t\t\t}\n\n\t\t\tif (canvas) {\n\t\t\t\tme.unbindEvents();\n\t\t\t\thelpers.canvas.clear(me);\n\t\t\t\tplatform.releaseContext(me.ctx);\n\t\t\t\tme.canvas = null;\n\t\t\t\tme.ctx = null;\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'destroy');\n\n\t\t\tdelete Chart.instances[me.id];\n\t\t},\n\n\t\ttoBase64Image: function() {\n\t\t\treturn this.canvas.toDataURL.apply(this.canvas, arguments);\n\t\t},\n\n\t\tinitToolTip: function() {\n\t\t\tvar me = this;\n\t\t\tme.tooltip = new Chart.Tooltip({\n\t\t\t\t_chart: me,\n\t\t\t\t_chartInstance: me, // deprecated, backward compatibility\n\t\t\t\t_data: me.data,\n\t\t\t\t_options: me.options.tooltips\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners = {};\n\t\t\tvar listener = function() {\n\t\t\t\tme.eventHandler.apply(me, arguments);\n\t\t\t};\n\n\t\t\thelpers.each(me.options.events, function(type) {\n\t\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\t\tlisteners[type] = listener;\n\t\t\t});\n\n\t\t\t// Elements used to detect size change should not be injected for non responsive charts.\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\t\tif (me.options.responsive) {\n\t\t\t\tlistener = function() {\n\t\t\t\t\tme.resize();\n\t\t\t\t};\n\n\t\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\t\tlisteners.resize = listener;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tunbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners;\n\t\t\tif (!listeners) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdelete me._listeners;\n\t\t\thelpers.each(listeners, function(listener, type) {\n\t\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t\t});\n\t\t},\n\n\t\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\t\tvar method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n\t\t\tvar element, i, ilen;\n\n\t\t\tfor (i = 0, ilen = elements.length; i < ilen; ++i) {\n\t\t\t\telement = elements[i];\n\t\t\t\tif (element) {\n\t\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\teventHandler: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\n\t\t\tif (plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Buffer any update calls so that renders do not occur\n\t\t\tme._bufferedRender = true;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\tvar changed = me.handleEvent(e);\n\t\t\t// for smooth tooltip animations issue #4989\n\t\t\t// the tooltip should be the source of change\n\t\t\t// Animation check workaround:\n\t\t\t// tooltip._start will be null when tooltip isn't animating\n\t\t\tif (tooltip) {\n\t\t\t\tchanged = tooltip._start\n\t\t\t\t\t? tooltip.handleEvent(e)\n\t\t\t\t\t: changed | tooltip.handleEvent(e);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterEvent', [e]);\n\n\t\t\tvar bufferedRequest = me._bufferedRequest;\n\t\t\tif (bufferedRequest) {\n\t\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\t\tme.render(bufferedRequest);\n\t\t\t} else if (changed && !me.animating) {\n\t\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\t\tme.stop();\n\n\t\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\t\tme.render(me.options.hover.animationDuration, true);\n\t\t\t}\n\n\t\t\tme._bufferedRender = false;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\treturn me;\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event the event to handle\n\t\t * @return {Boolean} true if the chart needs to re-render\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options || {};\n\t\t\tvar hoverOptions = options.hover;\n\t\t\tvar changed = false;\n\n\t\t\tme.lastActive = me.lastActive || [];\n\n\t\t\t// Find Active Elements for hover and tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme.active = [];\n\t\t\t} else {\n\t\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t\t}\n\n\t\t\t// Invoke onHover hook\n\t\t\t// Need to call with native event here to not break backwards compatibility\n\t\t\thelpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n\t\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\t\tif (options.onClick) {\n\t\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove styling for last active (even if it may still be active)\n\t\t\tif (me.lastActive.length) {\n\t\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t\t}\n\n\t\t\t// Built in hover styling\n\t\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t\t}\n\n\t\t\tchanged = !helpers.arrayEquals(me.active, me.lastActive);\n\n\t\t\t// Remember Last Actives\n\t\t\tme.lastActive = me.active;\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart instead.\n\t * @class Chart.Controller\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\tChart.Controller = Chart;\n};\n","/* MIT license */\nvar convert = require('color-convert');\nvar string = require('chartjs-color-string');\n\nvar Color = function (obj) {\n\tif (obj instanceof Color) {\n\t\treturn obj;\n\t}\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj);\n\t}\n\n\tthis.valid = false;\n\tthis.values = {\n\t\trgb: [0, 0, 0],\n\t\thsl: [0, 0, 0],\n\t\thsv: [0, 0, 0],\n\t\thwb: [0, 0, 0],\n\t\tcmyk: [0, 0, 0, 0],\n\t\talpha: 1\n\t};\n\n\t// parse Color() argument\n\tvar vals;\n\tif (typeof obj === 'string') {\n\t\tvals = string.getRgba(obj);\n\t\tif (vals) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals = string.getHsla(obj)) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals = string.getHwb(obj)) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t}\n\t} else if (typeof obj === 'object') {\n\t\tvals = obj;\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\tthis.setValues('hsv', vals);\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\tthis.setValues('cmyk', vals);\n\t\t}\n\t}\n};\n\nColor.prototype = {\n\tisValid: function () {\n\t\treturn this.valid;\n\t},\n\trgb: function () {\n\t\treturn this.setSpace('rgb', arguments);\n\t},\n\thsl: function () {\n\t\treturn this.setSpace('hsl', arguments);\n\t},\n\thsv: function () {\n\t\treturn this.setSpace('hsv', arguments);\n\t},\n\thwb: function () {\n\t\treturn this.setSpace('hwb', arguments);\n\t},\n\tcmyk: function () {\n\t\treturn this.setSpace('cmyk', arguments);\n\t},\n\n\trgbArray: function () {\n\t\treturn this.values.rgb;\n\t},\n\thslArray: function () {\n\t\treturn this.values.hsl;\n\t},\n\thsvArray: function () {\n\t\treturn this.values.hsv;\n\t},\n\thwbArray: function () {\n\t\tvar values = this.values;\n\t\tif (values.alpha !== 1) {\n\t\t\treturn values.hwb.concat([values.alpha]);\n\t\t}\n\t\treturn values.hwb;\n\t},\n\tcmykArray: function () {\n\t\treturn this.values.cmyk;\n\t},\n\trgbaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.rgb.concat([values.alpha]);\n\t},\n\thslaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.hsl.concat([values.alpha]);\n\t},\n\talpha: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.values.alpha;\n\t\t}\n\t\tthis.setValues('alpha', val);\n\t\treturn this;\n\t},\n\n\tred: function (val) {\n\t\treturn this.setChannel('rgb', 0, val);\n\t},\n\tgreen: function (val) {\n\t\treturn this.setChannel('rgb', 1, val);\n\t},\n\tblue: function (val) {\n\t\treturn this.setChannel('rgb', 2, val);\n\t},\n\thue: function (val) {\n\t\tif (val) {\n\t\t\tval %= 360;\n\t\t\tval = val < 0 ? 360 + val : val;\n\t\t}\n\t\treturn this.setChannel('hsl', 0, val);\n\t},\n\tsaturation: function (val) {\n\t\treturn this.setChannel('hsl', 1, val);\n\t},\n\tlightness: function (val) {\n\t\treturn this.setChannel('hsl', 2, val);\n\t},\n\tsaturationv: function (val) {\n\t\treturn this.setChannel('hsv', 1, val);\n\t},\n\twhiteness: function (val) {\n\t\treturn this.setChannel('hwb', 1, val);\n\t},\n\tblackness: function (val) {\n\t\treturn this.setChannel('hwb', 2, val);\n\t},\n\tvalue: function (val) {\n\t\treturn this.setChannel('hsv', 2, val);\n\t},\n\tcyan: function (val) {\n\t\treturn this.setChannel('cmyk', 0, val);\n\t},\n\tmagenta: function (val) {\n\t\treturn this.setChannel('cmyk', 1, val);\n\t},\n\tyellow: function (val) {\n\t\treturn this.setChannel('cmyk', 2, val);\n\t},\n\tblack: function (val) {\n\t\treturn this.setChannel('cmyk', 3, val);\n\t},\n\n\thexString: function () {\n\t\treturn string.hexString(this.values.rgb);\n\t},\n\trgbString: function () {\n\t\treturn string.rgbString(this.values.rgb, this.values.alpha);\n\t},\n\trgbaString: function () {\n\t\treturn string.rgbaString(this.values.rgb, this.values.alpha);\n\t},\n\tpercentString: function () {\n\t\treturn string.percentString(this.values.rgb, this.values.alpha);\n\t},\n\thslString: function () {\n\t\treturn string.hslString(this.values.hsl, this.values.alpha);\n\t},\n\thslaString: function () {\n\t\treturn string.hslaString(this.values.hsl, this.values.alpha);\n\t},\n\thwbString: function () {\n\t\treturn string.hwbString(this.values.hwb, this.values.alpha);\n\t},\n\tkeyword: function () {\n\t\treturn string.keyword(this.values.rgb, this.values.alpha);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.values.rgb;\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.values.rgb;\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.values.rgb;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t}\n\t\tthis.setValues('rgb', rgb);\n\t\treturn this;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] += hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] -= hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] += hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] -= hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[1] += hwb[1] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[2] += hwb[2] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tgreyscale: function () {\n\t\tvar rgb = this.values.rgb;\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\tthis.setValues('rgb', [val, val, val]);\n\t\treturn this;\n\t},\n\n\tclearer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\n\t\treturn this;\n\t},\n\n\topaquer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\n\t\treturn this;\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.values.hsl;\n\t\tvar hue = (hsl[0] + degrees) % 360;\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\t/**\n\t * Ported from sass implementation in C\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t */\n\tmix: function (mixinColor, weight) {\n\t\tvar color1 = this;\n\t\tvar color2 = mixinColor;\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn this\n\t\t\t.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t)\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n\n\ttoJSON: function () {\n\t\treturn this.rgb();\n\t},\n\n\tclone: function () {\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\n\t\t// except 'alpha' which is a number.\n\t\tvar result = new Color();\n\t\tvar source = this.values;\n\t\tvar target = result.values;\n\t\tvar value, type;\n\n\t\tfor (var prop in source) {\n\t\t\tif (source.hasOwnProperty(prop)) {\n\t\t\t\tvalue = source[prop];\n\t\t\t\ttype = ({}).toString.call(value);\n\t\t\t\tif (type === '[object Array]') {\n\t\t\t\t\ttarget[prop] = value.slice(0);\n\t\t\t\t} else if (type === '[object Number]') {\n\t\t\t\t\ttarget[prop] = value;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('unexpected color value:', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\nColor.prototype.spaces = {\n\trgb: ['red', 'green', 'blue'],\n\thsl: ['hue', 'saturation', 'lightness'],\n\thsv: ['hue', 'saturation', 'value'],\n\thwb: ['hue', 'whiteness', 'blackness'],\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\n\nColor.prototype.maxes = {\n\trgb: [255, 255, 255],\n\thsl: [360, 100, 100],\n\thsv: [360, 100, 100],\n\thwb: [360, 100, 100],\n\tcmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n\tvar values = this.values;\n\tvar vals = {};\n\n\tfor (var i = 0; i < space.length; i++) {\n\t\tvals[space.charAt(i)] = values[space][i];\n\t}\n\n\tif (values.alpha !== 1) {\n\t\tvals.a = values.alpha;\n\t}\n\n\t// {r: 255, g: 255, b: 255, a: 0.4}\n\treturn vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n\tvar values = this.values;\n\tvar spaces = this.spaces;\n\tvar maxes = this.maxes;\n\tvar alpha = 1;\n\tvar i;\n\n\tthis.valid = true;\n\n\tif (space === 'alpha') {\n\t\talpha = vals;\n\t} else if (vals.length) {\n\t\t// [10, 10, 10]\n\t\tvalues[space] = vals.slice(0, space.length);\n\t\talpha = vals[space.length];\n\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t// {r: 10, g: 10, b: 10}\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\n\t\t}\n\n\t\talpha = vals.a;\n\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t// {red: 10, green: 10, blue: 10}\n\t\tvar chans = spaces[space];\n\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[chans[i]];\n\t\t}\n\n\t\talpha = vals.alpha;\n\t}\n\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\n\tif (space === 'alpha') {\n\t\treturn false;\n\t}\n\n\tvar capped;\n\n\t// cap values of the space prior converting all values\n\tfor (i = 0; i < space.length; i++) {\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n\t\tvalues[space][i] = Math.round(capped);\n\t}\n\n\t// convert to all the other color spaces\n\tfor (var sname in spaces) {\n\t\tif (sname !== space) {\n\t\t\tvalues[sname] = convert[space][sname](values[space]);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n\tvar vals = args[0];\n\n\tif (vals === undefined) {\n\t\t// color.rgb()\n\t\treturn this.getValues(space);\n\t}\n\n\t// color.rgb(10, 10, 10)\n\tif (typeof vals === 'number') {\n\t\tvals = Array.prototype.slice.call(args);\n\t}\n\n\tthis.setValues(space, vals);\n\treturn this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n\tvar svalues = this.values[space];\n\tif (val === undefined) {\n\t\t// color.red()\n\t\treturn svalues[index];\n\t} else if (val === svalues[index]) {\n\t\t// color.red(color.red())\n\t\treturn this;\n\t}\n\n\t// color.red(100)\n\tsvalues[index] = val;\n\tthis.setValues(space, svalues);\n\n\treturn this;\n};\n\nif (typeof window !== 'undefined') {\n\twindow.Color = Color;\n}\n\nmodule.exports = Color;\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Line = function(context, config) {\n\t\tconfig.type = 'line';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\t// Default config for a category scale\n\tvar defaultConfig = {\n\t\tposition: 'bottom'\n\t};\n\n\tvar DatasetScale = Chart.Scale.extend({\n\t\t/**\n\t\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t\t* else fall back to data.labels\n\t\t* @private\n\t\t*/\n\t\tgetLabels: function() {\n\t\t\tvar data = this.chart.data;\n\t\t\treturn this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\tme.minIndex = 0;\n\t\t\tme.maxIndex = labels.length - 1;\n\t\t\tvar findIndex;\n\n\t\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t\t// user specified min value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.min);\n\t\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t\t}\n\n\t\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t\t// user specified max value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.max);\n\t\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t\t}\n\n\t\t\tme.min = labels[me.minIndex];\n\t\t\tme.max = labels[me.maxIndex];\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\t// If we are viewing some subset of labels, slice the original array\n\t\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tif (data.yLabels && !isHorizontal) {\n\t\t\t\treturn me.getRightValue(data.datasets[datasetIndex].data[index]);\n\t\t\t}\n\t\t\treturn me.ticks[index - me.minIndex];\n\t\t},\n\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\n\t\tgetPixelForValue: function(value, index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\t// 1 is added because we need the length but we have the indexes\n\t\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\n\n\t\t\t// If value is a data object, then index is the index in the data array,\n\t\t\t// not the index of the scale. We need to change that.\n\t\t\tvar valueCategory;\n\t\t\tif (value !== undefined && value !== null) {\n\t\t\t\tvalueCategory = me.isHorizontal() ? value.x : value.y;\n\t\t\t}\n\t\t\tif (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\n\t\t\t\tvar labels = me.getLabels();\n\t\t\t\tvalue = valueCategory || value;\n\t\t\t\tvar idx = labels.indexOf(value);\n\t\t\t\tindex = idx !== -1 ? idx : index;\n\t\t\t}\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\t\tif (offset) {\n\t\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t\t}\n\n\t\t\t\treturn me.left + Math.round(widthOffset);\n\t\t\t}\n\t\t\tvar valueHeight = me.height / offsetAmt;\n\t\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\t\tif (offset) {\n\t\t\t\theightOffset += (valueHeight / 2);\n\t\t\t}\n\n\t\t\treturn me.top + Math.round(heightOffset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tvar value;\n\t\t\tvar offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar horz = me.isHorizontal();\n\t\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\t\tpixel -= horz ? me.left : me.top;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel -= (valueDimension / 2);\n\t\t\t}\n\n\t\t\tif (pixel <= 0) {\n\t\t\t\tvalue = 0;\n\t\t\t} else {\n\t\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t\t}\n\n\t\t\treturn value + me.minIndex;\n\t\t},\n\t\tgetBasePixel: function() {\n\t\t\treturn this.bottom;\n\t\t}\n\t});\n\n\tChart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\n\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function(Chart) {\n\n\tvar globalDefaults = defaults.global;\n\n\tvar defaultConfig = {\n\t\tdisplay: true,\n\n\t\t// Boolean - Whether to animate scaling the chart from the centre\n\t\tanimate: true,\n\t\tposition: 'chartArea',\n\n\t\tangleLines: {\n\t\t\tdisplay: true,\n\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\t\tlineWidth: 1\n\t\t},\n\n\t\tgridLines: {\n\t\t\tcircular: false\n\t\t},\n\n\t\t// label settings\n\t\tticks: {\n\t\t\t// Boolean - Show a backdrop to the scale label\n\t\t\tshowLabelBackdrop: true,\n\n\t\t\t// String - The colour of the label backdrop\n\t\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t\t// Number - The backdrop padding above & below the label in pixels\n\t\t\tbackdropPaddingY: 2,\n\n\t\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\t\tbackdropPaddingX: 2,\n\n\t\t\tcallback: Ticks.formatters.linear\n\t\t},\n\n\t\tpointLabels: {\n\t\t\t// Boolean - if true, show point labels\n\t\t\tdisplay: true,\n\n\t\t\t// Number - Point label font size in pixels\n\t\t\tfontSize: 10,\n\n\t\t\t// Function - Used to convert point labels\n\t\t\tcallback: function(label) {\n\t\t\t\treturn label;\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction getValueCount(scale) {\n\t\tvar opts = scale.options;\n\t\treturn opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n\t}\n\n\tfunction getPointLabelFontOptions(scale) {\n\t\tvar pointLabelOptions = scale.options.pointLabels;\n\t\tvar fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n\t\tvar fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n\t\tvar font = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\treturn {\n\t\t\tsize: fontSize,\n\t\t\tstyle: fontStyle,\n\t\t\tfamily: fontFamily,\n\t\t\tfont: font\n\t\t};\n\t}\n\n\tfunction measureLabelSize(ctx, fontSize, label) {\n\t\tif (helpers.isArray(label)) {\n\t\t\treturn {\n\t\t\t\tw: helpers.longestText(ctx, ctx.font, label),\n\t\t\t\th: (label.length * fontSize) + ((label.length - 1) * 1.5 * fontSize)\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tw: ctx.measureText(label).width,\n\t\t\th: fontSize\n\t\t};\n\t}\n\n\tfunction determineLimits(angle, pos, size, min, max) {\n\t\tif (angle === min || angle === max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - (size / 2),\n\t\t\t\tend: pos + (size / 2)\n\t\t\t};\n\t\t} else if (angle < min || angle > max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - size - 5,\n\t\t\t\tend: pos\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tstart: pos,\n\t\t\tend: pos + size + 5\n\t\t};\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with point labels\n\t */\n\tfunction fitWithPointLabels(scale) {\n\t\t/*\n\t\t * Right, this is really confusing and there is a lot of maths going on here\n\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t\t *\n\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t\t *\n\t\t * Solution:\n\t\t *\n\t\t * We assume the radius of the polygon is half the size of the canvas at first\n\t\t * at each index we check if the text overlaps.\n\t\t *\n\t\t * Where it does, we store that angle and that index.\n\t\t *\n\t\t * After finding the largest index and angle we calculate how much we need to remove\n\t\t * from the shape radius to move the point inwards by that x.\n\t\t *\n\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\n\t\t * along with labels.\n\t\t *\n\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t\t *\n\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t\t * and position it in the most space efficient manner\n\t\t *\n\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\t\t */\n\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tvar furthestLimits = {\n\t\t\tr: scale.width,\n\t\t\tl: 0,\n\t\t\tt: scale.height,\n\t\t\tb: 0\n\t\t};\n\t\tvar furthestAngles = {};\n\t\tvar i, textSize, pointPosition;\n\n\t\tscale.ctx.font = plFont.font;\n\t\tscale._pointLabelSizes = [];\n\n\t\tvar valueCount = getValueCount(scale);\n\t\tfor (i = 0; i < valueCount; i++) {\n\t\t\tpointPosition = scale.getPointPosition(i, largestPossibleRadius);\n\t\t\ttextSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n\t\t\tscale._pointLabelSizes[i] = textSize;\n\n\t\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers.toDegrees(angleRadians) % 360;\n\t\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n\t\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n\t\t\tif (hLimits.start < furthestLimits.l) {\n\t\t\t\tfurthestLimits.l = hLimits.start;\n\t\t\t\tfurthestAngles.l = angleRadians;\n\t\t\t}\n\n\t\t\tif (hLimits.end > furthestLimits.r) {\n\t\t\t\tfurthestLimits.r = hLimits.end;\n\t\t\t\tfurthestAngles.r = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.start < furthestLimits.t) {\n\t\t\t\tfurthestLimits.t = vLimits.start;\n\t\t\t\tfurthestAngles.t = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.end > furthestLimits.b) {\n\t\t\t\tfurthestLimits.b = vLimits.end;\n\t\t\t\tfurthestAngles.b = angleRadians;\n\t\t\t}\n\t\t}\n\n\t\tscale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with no point labels\n\t */\n\tfunction fit(scale) {\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tscale.drawingArea = Math.round(largestPossibleRadius);\n\t\tscale.setCenterPoint(0, 0, 0, 0);\n\t}\n\n\tfunction getTextAlignForAngle(angle) {\n\t\tif (angle === 0 || angle === 180) {\n\t\t\treturn 'center';\n\t\t} else if (angle < 180) {\n\t\t\treturn 'left';\n\t\t}\n\n\t\treturn 'right';\n\t}\n\n\tfunction fillText(ctx, text, position, fontSize) {\n\t\tif (helpers.isArray(text)) {\n\t\t\tvar y = position.y;\n\t\t\tvar spacing = 1.5 * fontSize;\n\n\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\tctx.fillText(text[i], position.x, y);\n\t\t\t\ty += spacing;\n\t\t\t}\n\t\t} else {\n\t\t\tctx.fillText(text, position.x, position.y);\n\t\t}\n\t}\n\n\tfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n\t\tif (angle === 90 || angle === 270) {\n\t\t\tposition.y -= (textSize.h / 2);\n\t\t} else if (angle > 270 || angle < 90) {\n\t\t\tposition.y -= textSize.h;\n\t\t}\n\t}\n\n\tfunction drawPointLabels(scale) {\n\t\tvar ctx = scale.ctx;\n\t\tvar opts = scale.options;\n\t\tvar angleLineOpts = opts.angleLines;\n\t\tvar pointLabelOpts = opts.pointLabels;\n\n\t\tctx.lineWidth = angleLineOpts.lineWidth;\n\t\tctx.strokeStyle = angleLineOpts.color;\n\n\t\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n\t\t// Point Label Font\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\tctx.textBaseline = 'top';\n\n\t\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\n\t\t\tif (angleLineOpts.display) {\n\t\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\n\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.closePath();\n\t\t\t}\n\n\t\t\tif (pointLabelOpts.display) {\n\t\t\t\t// Extra 3px out for some label spacing\n\t\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + 5);\n\n\t\t\t\t// Keep this in loop since we may support array properties here\n\t\t\t\tvar pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);\n\t\t\t\tctx.font = plFont.font;\n\t\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\t\tvar angle = helpers.toDegrees(angleRadians);\n\t\t\t\tctx.textAlign = getTextAlignForAngle(angle);\n\t\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n\t\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\n\t\tvar ctx = scale.ctx;\n\t\tctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n\t\tctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n\t\tif (scale.options.gridLines.circular) {\n\t\t\t// Draw circular arcs between the points\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t} else {\n\t\t\t// Draw straight lines connecting each index\n\t\t\tvar valueCount = getValueCount(scale);\n\n\t\t\tif (valueCount === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\t\t\tvar pointPosition = scale.getPointPosition(0, radius);\n\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\n\t\t\tfor (var i = 1; i < valueCount; i++) {\n\t\t\t\tpointPosition = scale.getPointPosition(i, radius);\n\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t\t}\n\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t}\n\t}\n\n\tfunction numberOrZero(param) {\n\t\treturn helpers.isNumber(param) ? param : 0;\n\t}\n\n\tvar LinearRadialScale = Chart.LinearScaleBase.extend({\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.height = me.maxHeight;\n\t\t\tme.xCenter = Math.round(me.width / 2);\n\t\t\tme.yCenter = Math.round(me.height / 2);\n\n\t\t\tvar minSize = helpers.min([me.height, me.width]);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tme.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);\n\t\t},\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar min = Number.POSITIVE_INFINITY;\n\t\t\tvar max = Number.NEGATIVE_INFINITY;\n\n\t\t\thelpers.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmin = Math.min(value, min);\n\t\t\t\t\t\tmax = Math.max(value, max);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n\t\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tme.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar tickOpts = this.options.ticks;\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\treturn Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\n\t\t\tChart.LinearScaleBase.prototype.convertTicksToLabels.call(me);\n\n\t\t\t// Point labels\n\t\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tfit: function() {\n\t\t\tif (this.options.pointLabels.display) {\n\t\t\t\tfitWithPointLabels(this);\n\t\t\t} else {\n\t\t\t\tfit(this);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Set radius reductions and determine new radius and center point\n\t\t * @private\n\t\t */\n\t\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\n\t\t\tvar me = this;\n\t\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n\t\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n\t\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n\t\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n\n\t\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\n\t\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\n\t\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\n\t\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\n\n\t\t\tme.drawingArea = Math.min(\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n\t\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n\t\t},\n\t\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\n\t\t\tvar me = this;\n\t\t\tvar maxRight = me.width - rightMovement - me.drawingArea;\n\t\t\tvar maxLeft = leftMovement + me.drawingArea;\n\t\t\tvar maxTop = topMovement + me.drawingArea;\n\t\t\tvar maxBottom = me.height - bottomMovement - me.drawingArea;\n\n\t\t\tme.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);\n\t\t\tme.yCenter = Math.round(((maxTop + maxBottom) / 2) + me.top);\n\t\t},\n\n\t\tgetIndexAngle: function(index) {\n\t\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\n\t\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\t\tthis.chart.options.startAngle :\n\t\t\t\t0;\n\n\t\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\t\treturn index * angleMultiplier + startAngleRadians;\n\t\t},\n\t\tgetDistanceFromCenterForValue: function(value) {\n\t\t\tvar me = this;\n\n\t\t\tif (value === null) {\n\t\t\t\treturn 0; // null always in center\n\t\t\t}\n\n\t\t\t// Take into account half font size + the yPadding of the top value\n\t\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\t\tif (me.options.ticks.reverse) {\n\t\t\t\treturn (me.max - value) * scalingFactor;\n\t\t\t}\n\t\t\treturn (value - me.min) * scalingFactor;\n\t\t},\n\t\tgetPointPosition: function(index, distanceFromCenter) {\n\t\t\tvar me = this;\n\t\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n\t\t\treturn {\n\t\t\t\tx: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n\t\t\t\ty: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n\t\t\t};\n\t\t},\n\t\tgetPointPositionForValue: function(index, value) {\n\t\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t\t},\n\n\t\tgetBasePosition: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.getPointPositionForValue(0,\n\t\t\t\tme.beginAtZero ? 0 :\n\t\t\t\tmin < 0 && max < 0 ? max :\n\t\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t\t0);\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t\t\tif (opts.display) {\n\t\t\t\tvar ctx = me.ctx;\n\t\t\t\tvar startAngle = this.getIndexAngle(0);\n\n\t\t\t\t// Tick Font\n\t\t\t\tvar tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\t\tvar tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\t\tvar tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\n\t\t\t\thelpers.each(me.ticks, function(label, index) {\n\t\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\t\tif (index > 0 || tickOpts.reverse) {\n\t\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\n\t\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\t\tvar tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\t\t\t\t\tctx.font = tickLabelFont;\n\n\t\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\t\tctx.translate(me.xCenter, me.yCenter);\n\t\t\t\t\t\t\tctx.rotate(startAngle);\n\n\t\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t\t-labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t\t-yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\t\ttickFontSize + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\t\tctx.fillText(label, 0, -yCenterOffset);\n\t\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (opts.angleLines.display || opts.pointLabels.display) {\n\t\t\t\t\tdrawPointLabels(me);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n\n};\n"],"sourceRoot":""}